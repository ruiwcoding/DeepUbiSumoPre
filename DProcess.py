import re
import pandas as pd
import numpy as np
import keras.utils.np_utils as kutils
from math import exp 

def convertRawToXY(rawDataFrame, refMatrFileName="", nb_windows=3, codingMode=0):#rawDataFrame is numpy.ndarray
    """
    convertd the raw data to probability matrix and target array


    #Output:
    probMatr: Probability Matrix for Samples. Shape (nb_samples, 1, nb_length_of_sequence, nb_AA)
    targetArr: Target. Shape (nb_samples)
    """

    #print(rawDataFrame)
    targetList = rawDataFrame[:,0]
    targetList[np.where(targetList==2)] = 0
    #print(targetList[1:100])
    targetArr = kutils.to_categorical(targetList)
    #print(targetArr[1:100])
    sampleSeq3DArr = rawDataFrame[:, 1:]
    #print(sampleSeq3DArr)

    if codingMode == 0:
        probMatr = convertSampleToProbMatr(sampleSeq3DArr)
    elif codingMode == 1:
        probMatr = convertSampleToVector2DList(sampleSeq3DArr, nb_windows, refMatrFileName)
    elif codingMode == 2:
        probMatr = convertSampleToDoubleVec(sampleSeq3DArr, 1)
    elif codingMode == 3:
        probMatr = convertSampleToPhysicsVector(sampleSeq3DArr)
    elif codingMode == 4:
        probMatr = convertSampleToPhysicsVector_2(sampleSeq3DArr)
    elif codingMode == 5:
        probMatr = convertSampleToAAindexVector(sampleSeq3DArr)
    elif codingMode == 6:
        probMatr = convertSampleToAAindexforUbiVector(sampleSeq3DArr)
    elif(codingMode == 7):
        probMatr = convertPSSMToMatr(rawDataFrame)
    elif codingMode == 9:
        probMatr = convertSampleToAAindexClusterO(sampleSeq3DArr)
    elif codingMode == 10:
        probMatr = convertSampleToAAindexClusterP(sampleSeq3DArr)
    elif codingMode == 11:
        probMatr = convertSampleToAAindexClusterH(sampleSeq3DArr)
    elif codingMode == 12:
        probMatr = convertSampleToAAindexClusterC(sampleSeq3DArr)
    elif codingMode == 13:
        probMatr = convertSampleToAAindexClusterB(sampleSeq3DArr)
    elif codingMode == 14:
        probMatr = convertSampleToAAindexClusterA(sampleSeq3DArr)
    elif codingMode == 15:
    	probMatr = convertSampleToEBGW(sampleSeq3DArr)
    elif codingMode == 16:
    	probMatr = convertSampleToAAC(sampleSeq3DArr)
    elif codingMode == 17:
    	probMatr = convertSampleToVDWV(sampleSeq3DArr)

    del sampleSeq3DArr,rawDataFrame
    return probMatr, targetArr


def convertSampleToProbMatr(sampleSeq3DArr): #changed add one column for '1'
    """
    Convertd the raw data to probability matrix

    PARAMETER
    ---------
    sampleSeq3DArr: 3D numpy array
       X denoted the unknow amino acid.


    probMatr: Probability Matrix for Samples. Shape (nb_samples, 1, nb_length_of_sequence, nb_AA)
    """

    letterDict = {}
    letterDict["A"] = 0
    letterDict["C"] = 1
    letterDict["D"] = 2
    letterDict["E"] = 3
    letterDict["F"] = 4
    letterDict["G"] = 5
    letterDict["H"] = 6
    letterDict["I"] = 7
    letterDict["K"] = 8
    letterDict["L"] = 9
    letterDict["M"] = 10
    letterDict["N"] = 11
    letterDict["P"] = 12
    letterDict["Q"] = 13
    letterDict["R"] = 14
    letterDict["S"] = 15
    letterDict["T"] = 16
    letterDict["V"] = 17
    letterDict["W"] = 18
    letterDict["Y"] = 19
    letterDict["X"] =20 ##add -
    AACategoryLen = 21 ##add -

    probMatr = np.zeros((len(sampleSeq3DArr), 1, len(sampleSeq3DArr[0]), AACategoryLen))
   
    #print(sampleSeq3DArr)
    sampleNo = 0
    for sequence in sampleSeq3DArr:

        AANo	 = 0
        for AA in sequence:

            if not AA in letterDict:
                probMatr[sampleNo][0][AANo] = np.full((1,AACategoryLen), 1.0/AACategoryLen)
                #probMatr[sampleNo][0][AANo] = np.full((1,AACategoryLen), -1)

            else:
                index = letterDict[AA]
                probMatr[sampleNo][0][AANo][index] = 1

            AANo += 1
        sampleNo += 1
    del sampleSeq3DArr
    return probMatr

'''
def convertSampleToVector2DList(sampleSeq3DArr, nb_windows, refMatrFileName):
    """
	Convertd the raw data to probability matrix
	PARAMETER
	---------
	sampleSeq3DArr: 3D List
		List -  numpy matrix(3D)
	Sample List: List (nb_windows, nb_samples, SEQLen/nb_windows , 100)
	"""
    rawDataFrame = pd.read_table(refMatrFileName, sep='\t', header=None)

    raw_data_seq_index_df = pd.DataFrame({'seq' : rawDataFrame[0] , 'indexing':rawDataFrame.index})
    raw_data_seq_df_index_dict = raw_data_seq_index_df.set_index('seq')['indexing'].to_dict()

    nb_raw_data_frame_column = len(rawDataFrame.columns)

    nb_sample = sampleSeq3DArr.shape[0]
    len_seq = len(sampleSeq3DArr[1])
    re_statement =  ".{%d}" % (nb_windows)

    probMatr_list = []
    for tmp_idx in range(nb_windows):
        probMatr_list.append( np.zeros((nb_sample, int((len_seq - tmp_idx)/nb_windows) , 100)) )

    for sample_index, sample_sequence in enumerate(sampleSeq3DArr):
        if sample_index%10000 == 0:
            print( "%d / %d " % (sample_index, nb_sample))

        #start_time = time.time()
	    seq = "".join(sample_sequence)

		for begin_idx in range(nb_windows):

			# Get sub-sequence
			sub_seq_list = re.findall(re_statement, seq[begin_idx:])

			sub_seq_indexing_list = []
			for sub_seq in sub_seq_list:
				if sub_seq in raw_data_seq_df_index_dict:
					sub_seq_indexing_list.append( raw_data_seq_df_index_dict[sub_seq] )
				else:
					sub_seq_indexing_list.append( raw_data_seq_df_index_dict['<unk>'] )

			matrix_arr = rawDataFrame.loc[ sub_seq_indexing_list ][ range(1, nb_raw_data_frame_column)].as_matrix()
			for idx_i in range(matrix_arr.shape[0]):
				for idx_j in range(matrix_arr.shape[1]):
					probMatr_list[begin_idx][sample_index][idx_i][idx_j] = matrix_arr[idx_i][idx_j]

		#print("2. --- %s seconds ---" % (time.time() - start_time))


	return probMatr_list
'''
'''
def convertSampleToDoubleVec(sampleSeq3DArr, nb_neibor):

    letterDict = {}
    letterDict["A"] = 0
    letterDict["C"] = 1
    letterDict["D"] = 2
    letterDict["E"] = 3
    letterDict["F"] = 4
    letterDict["G"] = 5
    letterDict["H"] = 6
    letterDict["I"] = 7
    letterDict["K"] = 8
    letterDict["L"] = 9
    letterDict["M"] = 10
    letterDict["N"] = 11
    letterDict["P"] = 12
    letterDict["Q"] = 13
    letterDict["R"] = 14
    letterDict["S"] = 15
    letterDict["T"] = 16
    letterDict["V"] = 17
    letterDict["W"] = 18
    letterDict["Y"] = 19


    double_letter_dict = {}
    for key_row in letterDict:
        for key_col in letterDict:
            idx_row = letterDict[key_row]
            idx_col = letterDict[key_col]

            final_key = key_row    + key_col
            final_idx = idx_row*20 + idx_col

            double_letter_dict[final_key] = final_idx


    probMatr = np.zeros((len(sampleSeq3DArr), 1, len(sampleSeq3DArr[0])-nb_neibor, len(double_letter_dict)))


    sampleNo = 0
    for sequence in sampleSeq3DArr:

        nb_sub_AA   = 0
        sequence = sequence.tolist()
        for idx in range(len(sequence)-nb_neibor):

            sub_AA = ("").join( sequence[idx:idx+nb_neibor+1] )

            if sub_AA in double_letter_dict:
                index = double_letter_dict[sub_AA]
                probMatr[sampleNo][0][nb_sub_AA][index] = 1
            print(sub_AA)
            break
            nb_sub_AA += 1
        break
        sampleNo += 1


    return probMatr
'''
'''
def convertSampleToPhysicsVector(sampleSeq3DArr):
	"""
	Convertd the raw data to physico-chemical property

	PARAMETER
	---------
	sampleSeq3DArr: 3D numpy array
		X denoted the unknow amino acid.


	probMatr: Probability Matrix for Samples. Shape (nb_samples, 1, nb_length_of_sequence, nb_AA)
	"""

	letterDict = {} #hydrophobicty, hydrophilicity, side-chain mass, pK1 (alpha-COOH), pK2 (NH3), PI, Average volume of buried residue, Molecular weight, Side chain volume, Mean polarity
	letterDict["A"] = [0.62,	-0.5,	15,	2.35,	9.87,	6.11,	91.5,	89.09,	27.5,	-0.06]
	letterDict["C"] = [0.2900,	-1.0000,	47.0000,    1.7100,   10.7800,    5.0200,	117.7,	121.15,	44.6,	1.36]
	letterDict["D"] = [-0.9000,    3.0000,   59.0000,    1.8800,    9.6000,    2.9800,	124.5,	133.1,	40,	-0.8]
	letterDict["E"] = [-0.7400,    3.0000,   73.0000,    2.1900,    9.6700,    3.0800,	155.1,	147.13,	62,	-0.77]
	letterDict["F"] = [1.1900,   -2.5000,   91.0000,    2.5800,    9.2400,    5.9100,	203.4,	165.19,	115.5,	1.27]
	letterDict["G"] = [0.4800,         0,    1.0000,    2.3400,    9.6000,    6.0600,	66.4,	75.07,	0,	-0.41]
	letterDict["H"] = [-0.4000,   -0.5000,   82.0000,    1.7800,    8.9700,    7.6400,	167.3,	155.16,	79,	0.49]
	letterDict["I"] = [1.3800,   -1.8000,   57.0000,    2.3200,    9.7600,    6.0400,	168.8,	131.17,	93.5,	1.31]
	letterDict["K"] = [-1.5000,    3.0000,   73.0000,    2.2000,    8.9000,    9.4700,	171.3,	146.19,	100,	-1.18]
	letterDict["L"] = [1.0600,   -1.8000,   57.0000,    2.3600,    9.6000,    6.0400,	167.9,	131.17,	93.5,	1.21]
	letterDict["M"] = [0.6400,   -1.3000,   75.0000,    2.2800,    9.2100,    5.7400,	170.8,	149.21,	94.1,	1.27]
	letterDict["N"] = [-0.7800,    0.2000,   58.0000,    2.1800,    9.0900,   10.7600,	135.2,	132.12,	58.7,	-0.48]
	letterDict["P"] = [0.1200,         0,   42.0000,    1.9900,   10.6000,    6.3000,	129.3,	115.13,	41.9,	0]
	letterDict["Q"] = [-0.8500,    0.2000,   72.0000,    2.1700,    9.1300,    5.6500,	161.1,	146.15,	80.7,	-0.73]
	letterDict["R"] = [-2.5300,    3.0000,  101.0000,    2.1800,    9.0900,   10.7600,	202,	174.2,	105,	-0.84]
	letterDict["S"] = [-0.1800,    0.3000,   31.0000,    2.2100,    9.1500,    5.6800,	99.1,	105.09,	29.3,	-0.5]
	letterDict["T"] = [-0.0500,   -0.4000,   45.0000,    2.1500,    9.1200,    5.6000,	122.1,	119.12,	51.3,	-0.27]
	letterDict["V"] = [1.0800,   -1.5000,   43.0000,    2.2900,    9.7400,    6.0200,	141.7,	117.15,	71.5,	1.09]
	letterDict["W"] = [0.8100,   -3.4000,  130.0000,    2.3800,    9.3900,    5.8800,	237.6,	204.24,	145.5,	0.88]
	letterDict["Y"] = [0.2600,   -2.3000,  107.0000,    2.2000,    9.1100,    5.6300,	203.6,	181.19,	117.3,	0.33]
	AACategoryLen = 10

	probMatr = np.zeros((len(sampleSeq3DArr), 1, len(sampleSeq3DArr[0]), AACategoryLen))


	sampleNo = 0
	for sequence in sampleSeq3DArr:

		AANo	 = 0
		for AA in sequence:

			if not AA in letterDict:
				probMatr[sampleNo][0][AANo] = np.full((1,AACategoryLen), 0)

			else:
				probMatr[sampleNo][0][AANo]= letterDict[AA]

			AANo += 1
		sampleNo += 1

	return probMatr
'''
'''
def convertSampleToPhysicsVector_2(sampleSeq3DArr):
	"""
	Convertd the raw data to physico-chemical property

	PARAMETER
	---------
	sampleSeq3DArr: 3D numpy array
		X denoted the unknow amino acid.


	probMatr: Probability Matrix for Samples. Shape (nb_samples, 1, nb_length_of_sequence, nb_AA)
	"""

	letterDict = {}
	letterDict["A"] = [-0.591, -1.302, -0.733, 1.570,-0.146]
	letterDict["C"] = [ -1.343, 0.465, -0.862, -1.020, -0.255]
	letterDict["D"] = [1.050, 0.302, -3.656, -0.259, -3.242]
	letterDict["E"] = [1.357, -1.453, 1.477, 0.113, -0.837]
	letterDict["F"] = [-1.006, -0.590, 1.891, -0.397, 0.412]
	letterDict["G"] = [-0.384, 1.652, 1.330, 1.045, 2.064]
	letterDict["H"] = [0.336, -0.417, -1.673, -1.474, -0.078]
	letterDict["I"] = [-1.239, -0.547, 2.131, 0.393, 0.816]
	letterDict["K"] = [1.831, -0.561, 0.533, -0.277, 1.648]
	letterDict["L"] = [-1.019, -0.987, -1.505, 1.266, -0.912]
	letterDict["M"] = [-0.663, -1.524, 2.219, -1.005, 1.212]
	letterDict["N"] = [0.945, 0.828, 1.299, -0.169, 0.933]
	letterDict["P"] = [0.189, 2.081, -1.628, 0.421, -1.392]
	letterDict["Q"] = [0.931, -0.179, -3.005, -0.503, -1.853]
	letterDict["R"] = [1.538, -0.055, 1.502, 0.440, 2.897]
	letterDict["S"] = [-0.228, 1.399, -4.760, 0.670, -2.647]
	letterDict["T"] = [-0.032, 0.326, 2.213, 0.908, 1.313]
	letterDict["V"] = [-1.337, -0.279, -0.544, 1.242, -1.262]
	letterDict["W"] = [-0.595, 0.009, 0.672, -2.128, -0.184]
	letterDict["Y"] = [0.260, 0.830, 3.097, -0.838, 1.512]
	AACategoryLen = 5

	probMatr = np.zeros((len(sampleSeq3DArr), 1, len(sampleSeq3DArr[0]), AACategoryLen))


	sampleNo = 0
	for sequence in sampleSeq3DArr:

		AANo	 = 0
		for AA in sequence:

			if not AA in letterDict:
				probMatr[sampleNo][0][AANo] = np.full((1,AACategoryLen), 0)

			else:
				probMatr[sampleNo][0][AANo]= letterDict[AA]

			AANo += 1
		sampleNo += 1

	return probMatr
'''
'''
def convertSampleToAAindexVector(sampleSeq3DArr):
    """
    Convertd the raw data to physico-chemical property(based on AAindex data)

    PARAMETER
    ---------
    sampleSeq3DArr: 3D numpy array
    	X denoted the unknow amino acid.

    probMatr: Probability Matrix for Samples. Shape (nb_samples, 1, nb_length_of_sequence, nb_AA)
    """
    letterDict = {} # Total 531*20
    letterDict["A"] = [4.35,	0.61,	1.18,	1.56,	1,	0.77,	0.37,	0.357,	52.6,	16,	44,	7.3,	3.9,	-0.2,	0.691,	8.249,	4.349,	6.5,	0.486,	0.288,	0.52,	0.046,	-0.368,	0.71,	-0.118,	0,	0,	0,	0,	0,	0,	91.5,	115,	25,	0.38,	0.2,	0.66,	1.42,	0.83,	0.74,	1.29,	1.2,	0.7,	0.52,	0.86,	0.75,	0.67,	0.74,	0.06,	0.076,	0.035,	0.058,	0.64,	-0.45,	-0.08,	0.36,	0.17,	0.02,	0.75,	1.33,	1,	0.6,	2.5,	8.6,	100,	1.56,	1.26,	0.25,	0.67,	0,	0,	89.09,	297,	1.8,	9.69,	2.34,	0.31,	1.28,	0.53,	1,	2.87,	1.52,	2.04,	7.3,	-0.01,	0,	0,	0,	0,	4.76,	1.08,	1,	1,	1.2,	1,	0.28,	1.29,	1.13,	1.55,	1.19,	0.84,	0.86,	0.91,	0.91,	0.8,	1.1,	0.93,	0.75,	88.3,	0,	8.1,	31,	0.1,	1,	-0.5,	29.22,	30.88,	154.33,	1.53,	0.86,	0.78,	1.09,	0.35,	1.09,	1.34,	0.47,	27.8,	51,	15,	1.7,	0.3,	0.87,	2.34,	0.077,	100,	5.3,	685,	1.36,	0.81,	1.45,	0.75,	1.041,	0.946,	0.892,	49.1,	0,	4.6,	4.32,	0.28,	27.5,	1.8,	-0.48,	-0.5,	0.77,	121.9,	243.2,	0.77,	5.2,	0.025,	1.29,	0.9,	0.77,	1.32,	0.86,	0.79,	0.22,	0.92,	1,	0.9,	12.97,	1.43,	0.86,	0.64,	0.17,	1.13,	1,	4.34,	0.5,	-0.1,	1.1,	1,	0.93,	0.94,	87,	2.36,	1.29,	0.96,	0.72,	7.99,	3.73,	5.74,	-0.6,	5.88,	-0.57,	5.39,	-0.7,	9.25,	0.34,	10.17,	6.61,	1.61,	8.63,	10.88,	5.15,	5.04,	9.9,	6.69,	5.08,	9.36,	0.23,	-0.22,	0.5,	-1.895,	-1.404,	-0.491,	-9.475,	-7.02,	2.01,	1.34,	0.46,	-2.49,	4.55,	1.3,	1.32,	0.81,	0.9,	0.84,	0.65,	1.08,	1.34,	1.15,	0.89,	0.82,	0.98,	0.69,	0.87,	0.91,	0.92,	2.1,	-2.89,	12.28,	7.62,	2.63,	13.65,	14.6,	10.67,	3.7,	6.05,	0.305,	0.175,	0.687,	-6.7,	1.29,	0.9,	0.78,	1.1,	1,	0.12,	0.26,	0.64,	0.29,	0.68,	0.34,	0.57,	0.33,	0.13,	0.31,	0.21,	0.18,	-0.08,	-0.18,	-0.01,	-0.19,	-0.14,	-0.31,	-0.1,	-0.25,	-0.26,	0.05,	-0.44,	-0.31,	-0.02,	-0.06,	-0.05,	-0.19,	-0.43,	-0.19,	-0.25,	-0.27,	-0.42,	-0.24,	-0.14,	0.01,	-0.3,	-0.23,	0.08,	0.934,	0.941,	1.16,	0.85,	1.58,	0.82,	0.78,	0.88,	0.3,	0.4,	1.48,	0,	1.02,	0.93,	0.99,	17.05,	14.53,	1.81,	0.52,	0.13,	1.29,	1.42,	93.7,	-0.29,	-0.06,	0.7,	0.7,	0.5,	1.2,	1.6,	1,	1.1,	1.4,	1.8,	1.8,	1.3,	0.7,	1.4,	1.1,	0.8,	1,	0.7,	6.5,	2.3,	6.7,	2.3,	-2.3,	-2.7,	0,	-5,	-3.3,	-4.7,	-3.7,	-2.5,	-5.1,	-1,	86.6,	0.74,	-0.67,	-0.67,	0.4,	0.73,	0.239,	0.33,	-0.11,	-0.062,	1.071,	8,	-0.4,	1.42,	0.946,	0.79,	1.194,	0.497,	0.937,	0.289,	0.328,	0.945,	0.842,	0.135,	0.507,	0.159,	0.03731,	0,	-12.04,	10.04,	0.89,	0.52,	0.16,	0.15,	-0.07,	7,	1.94,	0.07,	-1.73,	0.09,	8.5,	6.8,	18.08,	18.56,	-0.152,	0.83,	11.5,	0,	6,	9.9,	0.94,	0.98,	1.05,	0.75,	0.67,	1.1,	1.39,	1.43,	1.55,	1.8,	1.52,	1.49,	1.73,	1.33,	1.87,	1.19,	0.77,	0.93,	1.09,	0.71,	13.4,	-0.77,	0.984,	1.315,	0.994,	0.783,	0.423,	0.619,	1.08,	0.978,	1.4,	4.08,	-0.35,	0.5,	0.96,	0.343,	0.32,	8.9,	9.2,	14.1,	13.4,	9.8,	0.7,	58,	51,	41,	32,	24,	5,	-2,	0.4,	-0.04,	-0.12,	8.6,	7.6,	8.1,	7.9,	8.3,	4.47,	6.77,	7.43,	5.22,	9.88,	10.98,	9.95,	8.26,	7.39,	9.07,	8.82,	6.65,	0,	89.3,	90,	0.0373,	0.85,	0.06,	2.62,	-1.64,	-2.34,	0.78,	25,	1.1,	0.1366,	0.0728,	0.151,	-0.058,	-0.17,	-0.15,	0.964,	0.974,	0.938,	1.042,	1.065,	0.99,	0.892,	1.092,	0.843,	2.18,	1.79,	13.4,	0.0166,	90.1,	91.5,	1.076,	1.12,	1.38,	-0.27,	0.05,	-0.31,	-0.27,	0.18,	0.42,	0.616,	0.2,	50.76,	-0.414,	-0.96,	-0.26,	-0.73,	-1.35,	-0.56,	1.37,	-0.02,	0,	-0.03,	-0.04,	-0.02,	-1.6,	-0.21]
    letterDict["R"] = [4.38,	0.6,	0.2,	0.45,	0.52,	0.72,	0.84,	0.529,	109.1,	-70,	-68,	-3.6,	3.2,	-0.12,	0.728,	8.274,	4.396,	6.9,	0.262,	0.362,	0.68,	0.291,	-1.03,	1.06,	0.124,	1,	1,	1,	5,	0,	1,	202,	225,	90,	0.01,	0,	0.95,	0.98,	0.93,	1.01,	0.44,	1.25,	0.34,	1.24,	0.9,	0.9,	0.89,	1.05,	0.07,	0.106,	0.099,	0.085,	1.05,	-0.24,	-0.09,	-0.52,	-0.7,	-0.42,	0.7,	0.79,	0.74,	0.79,	7.5,	4.9,	65,	0.59,	0.38,	-1.76,	-2.1,	10,	-0.96,	174.2,	238,	12.5,	8.99,	1.82,	-1.01,	2.34,	0.69,	6.13,	7.82,	1.52,	6.24,	11.1,	0.04,	4,	3,	1,	0,	4.3,	1.05,	0.7,	0.7,	1.7,	1.7,	0.1,	1,	1.09,	0.2,	1,	1.04,	1.15,	0.99,	1,	0.96,	0.93,	1.01,	0.75,	181.2,	0.65,	10.5,	124,	1.91,	2.3,	3,	26.37,	68.43,	341.01,	1.17,	0.98,	1.06,	0.97,	0.75,	1.07,	2.78,	0.52,	94.7,	5,	67,	0.1,	-1.4,	0.85,	1.18,	0.051,	83,	2.6,	382,	1,	0.85,	1.15,	0.79,	1.038,	1.028,	0.901,	133,	1,	6.5,	6.55,	0.34,	105,	-4.5,	-0.06,	3,	3.72,	121.4,	206.6,	2.38,	6,	0.2,	0.96,	0.99,	0.88,	0.98,	0.97,	0.9,	0.28,	0.93,	0.68,	1.02,	11.72,	1.18,	0.94,	0.62,	0.76,	0.48,	1.18,	26.66,	0.8,	-4.5,	-0.4,	-2,	0.98,	1.09,	81,	1.92,	0.83,	0.67,	1.33,	5.86,	3.34,	1.92,	-1.18,	1.54,	-1.29,	2.81,	-0.91,	3.96,	-0.57,	1.21,	0.41,	0.4,	6.75,	6.01,	4.38,	3.73,	0.09,	6.65,	4.75,	0.27,	-0.26,	-0.93,	0,	-1.475,	-0.921,	-0.554,	-16.225,	-10.131,	0.84,	0.95,	-1.54,	2.55,	5.97,	0.93,	1.04,	1.03,	0.75,	0.91,	0.93,	0.93,	0.91,	1.06,	1.06,	0.99,	1.03,	0,	1.3,	0.77,	0.9,	4.2,	-3.3,	11.49,	6.81,	2.45,	11.28,	13.24,	11.05,	2.53,	5.7,	0.227,	0.083,	0.59,	51.5,	0.96,	0.99,	0.88,	0.95,	0.7,	0.04,	-0.14,	-0.1,	-0.03,	-0.22,	0.22,	0.23,	0.1,	0.08,	0.18,	0.07,	0.21,	0.05,	-0.13,	0.02,	0.03,	0.14,	0.25,	0.19,	-0.02,	-0.09,	-0.11,	-0.13,	-0.1,	0.04,	0.02,	0.06,	0.17,	0.06,	-0.07,	0.12,	-0.4,	-0.23,	-0.04,	0.21,	-0.13,	-0.09,	-0.2,	-0.01,	0.962,	1.112,	1.72,	2.02,	1.14,	2.6,	1.75,	0.99,	0.9,	1.2,	1.02,	0,	1,	1.52,	1.19,	21.25,	17.82,	-14.92,	-1.32,	-5,	-13.6,	-18.6,	250.4,	-2.71,	-0.84,	0.4,	0.4,	0.4,	0.7,	0.9,	0.4,	1.5,	1.2,	1.3,	1,	0.8,	0.8,	2.1,	1,	0.9,	1.4,	1.1,	-0.9,	-5.2,	0.3,	1.4,	0.4,	0.4,	1.1,	2.1,	0,	2,	1,	-1.2,	2.6,	0.3,	162.2,	0.64,	12.1,	3.89,	0.3,	0.73,	0.211,	-0.176,	0.079,	-0.167,	1.033,	0.1,	-0.59,	1.06,	1.128,	1.087,	0.795,	0.677,	1.725,	1.38,	2.088,	0.364,	0.936,	0.296,	0.459,	0.194,	0.09593,	0,	39.23,	6.18,	0.88,	0.49,	-0.2,	-0.37,	-0.4,	9.1,	-19.92,	2.88,	2.52,	-3.44,	0,	0,	0,	0,	-0.089,	0.83,	14.28,	52,	10.76,	4.6,	1.15,	1.14,	0.81,	0.9,	0.76,	1.05,	0.95,	1.33,	1.39,	1.73,	1.49,	1.41,	1.24,	1.39,	1.66,	1.45,	1.11,	0.96,	1.29,	1.09,	13.3,	-0.68,	1.008,	1.31,	1.026,	0.807,	0.503,	0.753,	0.976,	0.784,	1.23,	3.91,	-0.44,	1.7,	0.77,	0.353,	0.327,	4.6,	3.6,	5.5,	3.9,	7.3,	0.95,	-184,	-144,	-109,	-95,	-79,	-57,	-41,	1.5,	-0.3,	0.34,	4.2,	5,	4.6,	4.9,	8.7,	8.48,	6.87,	4.51,	7.3,	3.71,	3.26,	3.05,	2.8,	5.91,	4.9,	3.71,	5.17,	2.45,	190.3,	194,	0.0959,	0.2,	-0.85,	1.26,	-3.28,	1.6,	1.58,	-7,	-5.1,	0.0363,	0.0394,	-0.0103,	0,	0.37,	0.32,	1.143,	1.129,	1.137,	1.069,	1.131,	1.132,	1.154,	1.239,	1.038,	2.71,	3.2,	8.5,	-0.0762,	192.8,	196.1,	1.361,	-2.55,	0,	1.87,	0.12,	1.3,	2,	-5.4,	-1.56,	0,	-0.7,	48.66,	-0.584,	0.75,	0.08,	-1.03,	-3.89,	-0.26,	1.33,	0.44,	0.07,	0.09,	0.07,	0.08,	12.3,	2.11]
    letterDict["N"] = [4.75,	0.06,	0.23,	0.27,	0.35,	0.55,	0.97,	0.463,	75.7,	-74,	-72,	-5.7,	-2.8,	0.08,	0.596,	8.747,	4.755,	7.5,	0.193,	0.229,	0.76,	0.134,	0,	1.37,	0.289,	1,	1,	0,	2,	1,	1,	135.2,	160,	63,	0.12,	0.03,	1.56,	0.67,	0.89,	1.46,	0.81,	0.59,	1.42,	1.64,	0.66,	1.21,	1.86,	1.13,	0.161,	0.083,	0.191,	0.091,	1.56,	-0.2,	-0.7,	-0.9,	-0.9,	-0.77,	0.61,	0.72,	0.75,	1.42,	5,	4.3,	134,	0.51,	0.59,	-0.64,	-0.6,	1.3,	-0.86,	132.12,	236,	-5.6,	8.8,	2.02,	-0.6,	1.6,	0.58,	2.95,	4.58,	1.52,	4.37,	8,	0.06,	2,	3,	0,	0,	3.64,	0.85,	1.7,	1,	1.2,	1,	0.25,	0.81,	1.06,	1.2,	0.94,	0.66,	0.6,	0.72,	1.64,	1.1,	1.57,	1.36,	0.69,	125.1,	1.33,	11.6,	56,	0.48,	2.2,	0.2,	38.3,	41.7,	207.9,	0.6,	0.74,	1.56,	1.14,	2.12,	0.88,	0.92,	2.16,	60.1,	22,	49,	0.4,	-0.5,	0.09,	2.02,	0.043,	104,	3,	397,	0.89,	0.62,	0.64,	0.33,	1.117,	1.006,	0.93,	-3.6,	0,	5.9,	6.24,	0.31,	58.7,	-3.5,	-0.87,	0.2,	1.98,	117.5,	207.1,	1.45,	5,	0.1,	0.9,	0.76,	1.28,	0.95,	0.73,	1.25,	0.42,	0.6,	0.54,	0.62,	11.42,	0.64,	0.74,	3.14,	2.62,	1.11,	0.87,	13.28,	0.8,	-1.6,	-4.2,	-3,	0.98,	1.04,	70,	1.7,	0.77,	0.72,	1.38,	4.33,	2.33,	5.25,	0.39,	4.38,	0.02,	7.31,	1.28,	3.71,	-0.27,	1.36,	1.84,	0.73,	4.18,	5.75,	4.81,	5.94,	0.94,	4.49,	5.75,	2.31,	-0.94,	-2.65,	0,	-1.56,	-1.178,	-0.382,	-12.48,	-9.424,	0.03,	2.49,	1.31,	2.27,	5.56,	0.9,	0.74,	0.81,	0.82,	1.48,	1.45,	1.05,	0.83,	0.87,	0.67,	1.27,	0.66,	1.52,	1.36,	1.32,	1.57,	7,	-3.41,	11,	6.17,	2.27,	12.24,	11.79,	10.85,	2.12,	5.04,	0.322,	0.09,	0.489,	20.1,	0.9,	0.76,	1.28,	0.8,	0.6,	-0.1,	-0.03,	0.09,	-0.04,	-0.09,	-0.33,	-0.36,	-0.19,	-0.07,	-0.1,	-0.04,	-0.03,	-0.08,	0.28,	0.41,	0.02,	-0.27,	-0.53,	-0.89,	-0.77,	-0.34,	-0.4,	0.05,	0.06,	0.03,	0.1,	0,	-0.38,	0,	0.17,	0.61,	0.71,	0.81,	0.45,	0.35,	-0.11,	-0.12,	0.06,	-0.06,	0.986,	1.038,	1.97,	0.88,	0.77,	2.07,	1.32,	1.02,	2.73,	1.24,	0.99,	4.14,	1.31,	0.92,	1.15,	34.81,	13.59,	-6.64,	-0.01,	-3.04,	-6.63,	-9.67,	146.3,	-1.18,	-0.48,	1.2,	1.2,	3.5,	0.7,	0.7,	0.7,	0,	1.2,	0.9,	0.6,	0.6,	0.8,	0.9,	1.2,	1.6,	0.9,	1.5,	-5.1,	0.3,	-6.1,	-3.3,	-4.1,	-4.2,	-2,	4.2,	5.4,	3.9,	-0.6,	4.6,	4.7,	-0.7,	103.3,	0.63,	7.23,	2.27,	0.9,	-0.01,	0.249,	-0.233,	-0.136,	0.166,	0.784,	0.1,	-0.92,	0.71,	0.432,	0.832,	0.659,	2.072,	1.08,	3.169,	1.498,	1.202,	1.352,	0.196,	0.287,	0.385,	0.00359,	0,	4.25,	5.63,	0.89,	0.42,	1.03,	0.69,	-0.57,	10,	-9.68,	3.22,	1.45,	0.84,	8.2,	6.2,	17.47,	18.24,	-0.203,	0.09,	12.82,	3.38,	5.41,	5.4,	0.79,	1.05,	0.91,	1.24,	1.28,	0.72,	0.67,	0.55,	0.6,	0.73,	0.58,	0.67,	0.7,	0.64,	0.7,	1.33,	1.39,	0.82,	1.03,	0.95,	12,	-0.07,	1.048,	1.38,	1.022,	0.799,	0.906,	1.089,	1.197,	0.915,	1.61,	3.83,	-0.38,	1.7,	0.39,	0.409,	0.384,	4.4,	5.1,	3.2,	3.7,	3.6,	1.47,	-93,	-84,	-74,	-73,	-76,	-77,	-97,	1.6,	0.25,	1.05,	4.6,	4.4,	3.7,	4,	3.7,	3.89,	5.5,	9.12,	6.06,	2.35,	2.85,	4.84,	2.54,	3.06,	4.05,	6.77,	4.4,	0,	122.4,	124.7,	0.0036,	-0.48,	0.25,	-1.27,	0.83,	2.81,	1.2,	-7,	-3.5,	-0.0345,	-0.039,	0.0381,	0.027,	0.18,	0.22,	0.944,	0.988,	0.902,	0.828,	0.762,	0.873,	1.144,	0.927,	0.956,	1.85,	2.83,	7.6,	-0.0786,	127.5,	138.3,	1.056,	-0.83,	0.37,	0.81,	0.29,	0.49,	0.61,	-1.3,	-1.03,	0.236,	-0.5,	45.8,	-0.916,	-1.94,	-0.46,	-5.29,	-10.96,	-2.87,	6.29,	0.63,	0.1,	0.13,	0.13,	0.1,	4.8,	0.96]
    letterDict["D"] = [4.76,	0.46,	0.05,	0.14,	0.44,	0.65,	0.97,	0.511,	68.4,	-78,	-91,	-2.9,	-2.8,	-0.2,	0.558,	8.41,	4.765,	7,	0.288,	0.271,	0.76,	0.105,	2.06,	1.21,	0.048,	1,	1,	0,	2,	1,	0,	124.5,	150,	50,	0.15,	0.04,	1.46,	1.01,	0.54,	1.52,	2.02,	0.61,	0.98,	1.06,	0.38,	0.85,	1.39,	1.32,	0.147,	0.11,	0.179,	0.081,	1.61,	-1.52,	-0.71,	-1.09,	-1.05,	-1.04,	0.6,	0.97,	0.89,	1.24,	2.5,	5.5,	106,	0.23,	0.27,	-0.72,	-1.2,	1.9,	-0.98,	133.1,	270,	5.05,	9.6,	1.88,	-0.77,	1.6,	0.59,	2.78,	4.74,	1.52,	3.78,	9.2,	0.15,	1,	4,	0,	1,	5.69,	0.85,	3.2,	1.7,	0.7,	0.7,	0.21,	1.1,	0.94,	1.55,	1.07,	0.59,	0.66,	0.74,	1.4,	1.6,	1.41,	1.22,	0,	110.8,	1.38,	13,	54,	0.78,	6.5,	3,	37.09,	40.66,	194.91,	1,	0.69,	1.5,	0.77,	2.16,	1.24,	1.77,	1.15,	60.6,	19,	50,	0.4,	-0.6,	0.66,	2.01,	0.052,	86,	3.6,	400,	1.04,	0.71,	0.91,	0.31,	1.033,	1.089,	0.932,	0,	-1,	5.7,	6.04,	0.33,	40,	-3.5,	-0.75,	2.5,	1.99,	121.2,	215,	1.43,	5,	0.1,	1.04,	0.72,	1.41,	1.03,	0.69,	1.47,	0.73,	0.48,	0.5,	0.47,	10.85,	0.92,	0.72,	1.92,	1.08,	1.18,	1.39,	12,	-8.2,	-2.8,	-1.6,	-0.5,	1.01,	1.08,	71,	1.67,	1,	0.9,	1.04,	5.14,	2.23,	2.11,	-1.36,	1.7,	-1.54,	3.07,	-0.93,	3.89,	-0.56,	1.18,	0.59,	0.75,	6.24,	6.13,	5.75,	5.26,	0.35,	4.97,	5.96,	0.94,	-1.13,	-4.12,	0,	-1.518,	-1.162,	-0.356,	-12.144,	-9.296,	-2.05,	3.32,	-0.33,	8.86,	2.85,	1.02,	0.97,	0.71,	0.75,	1.28,	1.47,	0.86,	1.06,	1,	0.71,	0.98,	0.74,	2.42,	1.24,	0.9,	1.22,	10,	-3.38,	10.97,	6.18,	2.29,	10.98,	13.78,	10.21,	2.6,	4.95,	0.335,	0.14,	0.632,	38.5,	1.04,	0.72,	1.41,	0.65,	0.5,	0.01,	0.15,	0.33,	0.11,	-0.02,	0.06,	-0.46,	-0.44,	-0.71,	-0.81,	-0.58,	-0.32,	-0.24,	0.05,	-0.09,	-0.06,	-0.1,	-0.54,	-0.89,	-1.01,	-0.55,	-0.11,	-0.2,	0.13,	0.11,	0.24,	0.15,	0.09,	-0.31,	-0.27,	0.6,	0.54,	0.95,	0.65,	0.66,	0.78,	0.44,	0.34,	0.04,	0.994,	1.071,	2.66,	1.5,	0.98,	2.64,	1.25,	1.16,	1.26,	1.59,	1.19,	2.15,	1.76,	0.6,	1.18,	19.27,	19.78,	-8.72,	0,	-2.23,	0,	0,	142.6,	-1.02,	-0.8,	1.4,	1.4,	2.1,	0.8,	2.6,	2.2,	0.3,	0.6,	1,	0.7,	0.5,	0.6,	0.7,	0.4,	0.7,	1.4,	1.4,	0.5,	7.4,	-3.1,	-4.4,	-4.4,	-4.4,	-2.6,	3.1,	3.9,	1.9,	-0.6,	0,	3.1,	-1.2,	97.8,	0.62,	8.72,	1.57,	0.8,	0.54,	0.171,	-0.371,	-0.285,	-0.079,	0.68,	70,	-1.31,	1.01,	1.311,	0.53,	1.056,	1.498,	1.64,	0.917,	3.379,	1.315,	1.366,	0.289,	0.223,	0.283,	0.1263,	0,	23.22,	5.76,	0.87,	0.37,	-0.24,	-0.22,	-0.8,	13,	-10.95,	3.64,	1.13,	2.36,	8.5,	7,	17.36,	17.94,	-0.355,	0.64,	11.68,	49.7,	2.77,	2.8,	1.19,	1.05,	1.39,	1.72,	1.58,	1.14,	1.64,	0.9,	0.61,	0.9,	1.04,	0.94,	0.68,	0.6,	0.91,	0.72,	0.79,	1.15,	1.17,	1.43,	11.7,	-0.15,	1.068,	1.372,	1.022,	0.822,	0.87,	0.932,	1.266,	1.038,	1.89,	3.02,	-0.41,	1.6,	0.42,	0.429,	0.424,	6.3,	6,	5.7,	4.6,	4.9,	0.87,	-97,	-78,	-47,	-29,	0,	45,	248,	1.5,	0.27,	1.12,	4.9,	5.2,	3.8,	5.5,	4.7,	7.05,	8.57,	8.71,	7.91,	3.5,	3.37,	4.46,	2.8,	5.14,	5.73,	6.38,	5.5,	0,	114.4,	117.3,	0.1263,	-1.1,	-0.2,	-2.84,	0.7,	-0.48,	1.35,	2,	-3.6,	-0.1233,	-0.0552,	0.0047,	0.016,	0.37,	0.41,	0.916,	0.892,	0.857,	0.97,	0.836,	0.915,	0.925,	0.919,	0.906,	1.75,	2.33,	8.2,	-0.1278,	117.1,	135.2,	1.29,	-0.83,	0.52,	0.81,	0.41,	0.58,	0.5,	-2.36,	-0.51,	0.028,	-1.4,	43.17,	-1.31,	-5.68,	-1.3,	-6.13,	-11.88,	-4.31,	8.93,	0.72,	0.12,	0.17,	0.19,	0.19,	9.2,	1.36]
    letterDict["C"] = [4.65,	1.07,	1.89,	1.23,	0.06,	0.65,	0.84,	0.346,	68.3,	168,	90,	-9.2,	-14.3,	-0.45,	0.624,	8.312,	4.686,	7.7,	0.2,	0.533,	0.62,	0.128,	4.53,	1.19,	0.083,	1,	0,	0,	1,	0,	1,	117.7,	135,	19,	0.45,	0.22,	1.19,	0.7,	1.19,	0.96,	0.66,	1.11,	0.65,	0.94,	0.87,	1.11,	1.34,	0.53,	0.149,	0.053,	0.117,	0.128,	0.92,	0.79,	0.76,	0.7,	1.24,	0.77,	0.61,	0.93,	0.99,	1.29,	3,	2.9,	20,	1.8,	1.6,	0.04,	0.38,	0.17,	0.76,	121.15,	178,	-16.5,	8.35,	1.92,	1.54,	1.77,	0.66,	2.43,	4.47,	1.52,	3.41,	14.4,	0.12,	0,	0,	0,	0,	3.67,	0.95,	1,	1,	1,	1,	0.28,	0.79,	1.32,	1.44,	0.95,	1.27,	0.91,	1.12,	0.93,	0,	1.05,	0.92,	1,	112.4,	2.75,	5.5,	55,	-1.42,	0.1,	-1,	50.7,	53.83,	219.79,	0.89,	1.39,	0.6,	0.5,	0.5,	1.04,	1.44,	0.41,	15.5,	74,	5,	4.6,	0.9,	1.52,	1.65,	0.02,	44,	1.3,	241,	0.82,	1.17,	0.7,	1.46,	0.96,	0.878,	0.925,	0,	0,	-1,	1.73,	0.11,	44.6,	2.5,	-0.32,	-1,	1.38,	113.7,	209.4,	1.22,	6.1,	0.1,	1.11,	0.74,	0.81,	0.92,	1.04,	0.79,	0.2,	1.16,	0.91,	1.24,	14.63,	0.94,	1.17,	0.32,	0.95,	0.38,	1.09,	35.77,	-6.8,	-2.2,	7.1,	4.6,	0.88,	0.84,	104,	3.36,	0.94,	1.13,	1.01,	1.81,	2.3,	1.03,	-0.34,	1.11,	-0.3,	0.86,	-0.41,	1.07,	-0.32,	1.48,	0.83,	0.37,	1.03,	0.69,	3.24,	2.2,	2.55,	1.7,	2.95,	2.56,	1.78,	4.66,	0,	-2.035,	-1.365,	-0.67,	-12.21,	-8.19,	1.98,	1.07,	0.2,	-3.13,	-0.78,	0.92,	0.7,	1.12,	1.12,	0.69,	1.43,	1.22,	1.27,	1.03,	1.04,	0.71,	1.01,	0,	0.83,	0.5,	0.62,	1.4,	-2.49,	14.93,	10.93,	3.36,	14.49,	15.9,	14.15,	3.03,	7.86,	0.339,	0.074,	0.263,	-8.4,	1.11,	0.74,	0.8,	0.95,	1.9,	-0.25,	-0.15,	0.03,	-0.05,	-0.15,	-0.18,	-0.15,	-0.03,	-0.09,	-0.26,	-0.12,	-0.29,	-0.25,	-0.26,	-0.27,	-0.29,	-0.64,	-0.06,	0.13,	0.13,	0.47,	0.36,	0.13,	-0.11,	-0.02,	-0.19,	0.3,	0.41,	0.19,	0.42,	0.18,	0,	-0.18,	-0.38,	-0.09,	-0.31,	0.03,	0.19,	0.37,	0.9,	0.866,	0.5,	0.9,	1.04,	0,	3.14,	1.14,	0.72,	2.98,	0.86,	0,	1.05,	1.08,	2.32,	28.84,	30.57,	1.28,	0,	-2.52,	0,	0,	135.2,	0,	1.36,	0.6,	0.6,	0.6,	0.8,	1.2,	0.6,	1.1,	1.6,	0.7,	0,	0.7,	0.2,	1.2,	1.6,	0.4,	0.8,	0.4,	-1.3,	0.8,	-4.9,	6.1,	4.4,	3.7,	5.4,	4.4,	-0.3,	6.2,	4,	-4.7,	3.8,	2.1,	132.3,	0.91,	-0.34,	-2,	0.5,	0.7,	0.22,	0.074,	-0.184,	0.38,	0.922,	26,	0.17,	0.73,	0.481,	1.268,	0.678,	1.348,	1.004,	1.767,	0,	0.932,	1.032,	0.159,	0.592,	0.187,	0.08292,	0,	3.95,	8.89,	0.85,	0.83,	-0.12,	-0.19,	0.17,	5.5,	-1.24,	0.71,	-0.97,	4.13,	11,	8.3,	18.17,	17.84,	0,	1.48,	13.46,	1.48,	5.05,	2.8,	0.6,	0.41,	0.6,	0.66,	0.37,	0.26,	0.52,	0.52,	0.59,	0.55,	0.26,	0.37,	0.63,	0.44,	0.33,	0.44,	0.44,	0.67,	0.26,	0.65,	11.6,	-0.23,	0.906,	1.196,	0.939,	0.785,	0.877,	1.107,	0.733,	0.573,	1.14,	4.49,	-0.47,	0.6,	0.42,	0.319,	0.198,	0.6,	1,	0.1,	0.8,	3,	1.17,	116,	137,	169,	182,	194,	224,	329,	0.7,	0.57,	-0.63,	2.9,	2.2,	2,	1.9,	1.6,	0.29,	0.31,	0.42,	1.01,	1.12,	1.47,	1.3,	2.67,	0.74,	0.95,	0.9,	1.79,	0,	102.5,	103.3,	0.0829,	2.1,	0.49,	0.73,	9.3,	5.03,	0.55,	32,	2.5,	0.2745,	0.3557,	0.3222,	0.447,	-0.06,	-0.15,	0.778,	0.972,	0.6856,	0.5,	1.015,	0.644,	1.035,	0.662,	0.896,	3.89,	2.22,	22.6,	0.5724,	113.2,	114.4,	0.753,	0.59,	1.43,	-1.05,	-0.84,	-0.87,	-0.23,	0.27,	0.84,	0.68,	1.9,	58.74,	0.162,	4.54,	0.83,	0.64,	4.37,	1.78,	-4.47,	-0.96,	-0.16,	-0.36,	-0.38,	-0.32,	-2,	-6.04]
    letterDict["Q"] = [4.37,	0,	0.72,	0.51,	0.44,	0.72,	0.64,	0.493,	89.7,	-73,	-117,	-0.3,	1.8,	0.16,	0.649,	8.411,	4.373,	6,	0.418,	0.327,	0.68,	0.18,	0.731,	0.87,	-0.105,	1,	1,	1,	3,	0,	1,	161.1,	180,	71,	0.07,	0.01,	0.98,	1.11,	1.1,	0.96,	1.22,	1.22,	0.75,	0.7,	1.65,	0.65,	1.09,	0.77,	0.074,	0.098,	0.037,	0.098,	0.84,	-0.99,	-0.4,	-1.05,	-1.2,	-1.1,	0.67,	1.42,	0.87,	0.92,	6,	3.9,	93,	0.39,	0.39,	-0.69,	-0.22,	1.9,	-1,	146.15,	185,	6.3,	9.13,	2.17,	-0.22,	1.56,	0.71,	3.95,	6.11,	1.52,	3.53,	10.6,	0.05,	2,	3,	0,	0,	4.54,	0.95,	1,	1,	1,	1,	0.35,	1.07,	0.93,	1.13,	1.32,	1.02,	1.11,	0.9,	0.94,	1.6,	0.81,	0.83,	0.59,	148.7,	0.89,	10.5,	85,	0.95,	2.1,	0.2,	44.02,	46.62,	235.51,	1.27,	0.89,	0.78,	0.83,	0.73,	1.09,	0.79,	0.95,	68.7,	16,	56,	0.3,	-0.7,	0,	2.17,	0.041,	84,	2.4,	313,	1.14,	0.98,	1.14,	0.75,	1.165,	1.025,	0.885,	20,	0,	6.1,	6.13,	0.39,	80.7,	-3.5,	-0.32,	0.2,	2.58,	118,	205.4,	1.75,	6,	0.1,	1.27,	0.8,	0.98,	1.1,	1,	0.92,	0.26,	0.95,	0.28,	1.18,	11.76,	1.22,	0.89,	0.8,	0.91,	0.41,	1.13,	17.56,	-4.8,	-2.5,	-2.9,	-2,	1.02,	1.11,	66,	1.75,	1.1,	1.18,	0.81,	3.98,	2.36,	2.3,	-0.71,	2.3,	-0.71,	2.31,	-0.71,	3.17,	-0.34,	1.57,	1.2,	0.61,	4.76,	4.68,	4.45,	4.5,	0.87,	5.39,	4.24,	1.14,	-0.57,	-2.76,	0,	-1.521,	-1.116,	-0.405,	-13.689,	-10.044,	1.02,	1.49,	-1.12,	1.79,	4.15,	1.04,	1.25,	1.03,	0.95,	1,	0.94,	0.95,	1.13,	1.43,	1.06,	1.01,	0.63,	1.44,	1.06,	1.06,	0.66,	6,	-3.15,	11.28,	6.67,	2.45,	11.3,	12.02,	11.71,	2.7,	5.45,	0.306,	0.093,	0.527,	17.2,	1.27,	0.8,	0.97,	1,	1,	-0.03,	-0.13,	-0.23,	0.26,	-0.15,	0.01,	0.15,	0.19,	0.12,	0.41,	0.13,	-0.27,	-0.28,	0.21,	0.01,	0.02,	-0.11,	0.07,	-0.04,	-0.12,	-0.33,	-0.67,	-0.58,	-0.47,	-0.17,	-0.04,	-0.08,	0.04,	0.14,	-0.29,	0.09,	-0.08,	-0.01,	0.01,	0.11,	-0.13,	0.24,	0.47,	0.48,	1.047,	1.15,	3.87,	1.71,	1.24,	0,	0.93,	0.93,	0.97,	0.5,	1.42,	0,	1.05,	0.94,	1.52,	15.42,	22.18,	-5.54,	-0.07,	-3.84,	-5.47,	-9.31,	177.7,	-1.53,	-0.73,	1,	1,	0.4,	0.7,	0.8,	1.5,	1.3,	1.4,	1.3,	1,	0.2,	1.3,	1.6,	2.1,	0.9,	1.4,	1.1,	1,	-0.7,	0.6,	2.7,	1.2,	0.8,	2.4,	0.4,	-0.4,	-2,	3.4,	-0.5,	0.2,	-0.1,	119.2,	0.62,	6.39,	2.12,	0.7,	-0.1,	0.26,	-0.254,	-0.067,	-0.025,	0.977,	33,	-0.91,	1.02,	1.615,	1.038,	1.29,	0.711,	1.078,	2.372,	0,	0.704,	0.998,	0.236,	0.383,	0.236,	0.07606,	0,	2.16,	5.41,	0.82,	0.35,	-0.55,	-0.06,	-0.26,	8.6,	-9.38,	2.18,	0.53,	-1.14,	6.3,	8.5,	17.93,	18.51,	-0.181,	0,	14.45,	3.53,	5.65,	9,	0.94,	0.9,	0.87,	1.08,	1.05,	1.31,	1.6,	1.43,	1.43,	0.97,	1.41,	1.52,	0.88,	1.37,	1.24,	1.43,	0.95,	1.02,	1.08,	0.87,	12.8,	-0.33,	1.037,	1.342,	1.041,	0.817,	0.594,	0.77,	1.05,	0.863,	1.33,	3.67,	-0.4,	1.6,	0.8,	0.395,	0.436,	2.8,	2.9,	3.7,	4.8,	2.4,	0.73,	-139,	-128,	-104,	-95,	-87,	-67,	-37,	1.4,	-0.02,	1.67,	4,	4.1,	3.1,	4.4,	4.7,	2.87,	5.24,	5.42,	6,	1.66,	2.3,	2.64,	2.86,	2.22,	3.63,	3.89,	4.52,	1.25,	146.9,	149.4,	0.0761,	-0.42,	0.31,	-1.69,	-0.04,	0.16,	1.19,	0,	-3.68,	0.0325,	0.0126,	0.0246,	-0.073,	0.26,	0.03,	1.047,	1.092,	0.916,	1.111,	0.861,	0.999,	1.2,	1.124,	0.968,	2.16,	2.37,	8.5,	-0.1051,	149.4,	156.4,	0.729,	-0.78,	0.22,	1.1,	0.46,	0.7,	1,	-1.22,	-0.96,	0.251,	-1.1,	46.09,	-0.905,	-5.3,	-0.83,	-0.96,	-1.34,	-2.31,	3.88,	0.56,	0.09,	0.13,	0.14,	0.15,	4.1,	1.52]
    letterDict["E"] = [4.29,	0.47,	0.11,	0.23,	0.73,	0.55,	0.53,	0.497,	84.7,	-106,	-139,	-7.1,	-7.5,	-0.3,	0.632,	8.368,	4.295,	7,	0.538,	0.262,	0.68,	0.151,	1.77,	0.84,	-0.245,	1,	1,	1,	3,	1,	0,	155.1,	190,	49,	0.18,	0.03,	0.74,	1.51,	0.37,	0.95,	2.44,	1.24,	1.04,	0.59,	0.35,	0.55,	0.92,	0.85,	0.056,	0.06,	0.077,	0.064,	0.8,	-0.8,	-1.31,	-0.83,	-1.19,	-1.14,	0.66,	1.66,	0.37,	0.64,	5,	6,	102,	0.19,	0.23,	-0.62,	-0.76,	3,	-0.89,	147.13,	249,	12,	9.67,	2.1,	-0.64,	1.56,	0.72,	3.78,	5.97,	1.52,	3.31,	11.4,	0.07,	1,	4,	0,	1,	5.48,	1.15,	1.7,	1.7,	0.7,	0.7,	0.33,	1.49,	1.2,	1.67,	1.64,	0.57,	0.37,	0.41,	0.97,	0.4,	1.4,	1.05,	0,	140.5,	0.92,	12.3,	83,	0.83,	6.2,	3,	41.84,	44.98,	223.16,	1.63,	0.66,	0.97,	0.92,	0.65,	1.14,	2.54,	0.64,	68.2,	16,	55,	0.3,	-0.7,	0.67,	2.19,	0.062,	77,	3.3,	427,	1.48,	0.53,	1.29,	0.46,	1.094,	1.036,	0.933,	0,	-1,	5.6,	6.17,	0.37,	62,	-3.5,	-0.71,	2.5,	2.63,	118.2,	213.6,	1.77,	6,	0.1,	1.44,	0.75,	0.99,	1.44,	0.66,	1.02,	0.08,	0.61,	0.59,	0.62,	11.89,	1.67,	0.62,	1.01,	0.28,	1.02,	1.04,	17.26,	-16.9,	-7.5,	0.7,	1.1,	1.02,	1.12,	72,	1.74,	1.54,	0.33,	0.75,	6.1,	3,	2.63,	-1.16,	2.6,	-1.17,	2.7,	-1.13,	4.8,	-0.43,	1.15,	1.63,	1.5,	7.82,	9.34,	7.05,	6.07,	0.08,	7.76,	6.04,	0.94,	-0.75,	-3.64,	0,	-1.535,	-1.163,	-0.371,	-13.815,	-10.467,	0.93,	2.2,	0.48,	4.04,	5.16,	1.43,	1.48,	0.59,	0.44,	0.78,	0.75,	1.09,	1.69,	1.37,	0.72,	0.54,	0.59,	0.63,	0.91,	0.53,	0.92,	7.8,	-2.94,	11.19,	6.38,	2.31,	12.55,	13.59,	11.71,	3.3,	5.1,	0.282,	0.135,	0.669,	34.3,	1.44,	0.75,	1,	1,	0.7,	-0.02,	0.21,	0.51,	0.28,	0.44,	0.2,	0.26,	0.21,	0.13,	-0.06,	-0.23,	-0.25,	-0.19,	-0.06,	0.09,	-0.1,	-0.39,	-0.52,	-0.34,	-0.62,	-0.75,	-0.35,	-0.28,	-0.05,	0.1,	-0.04,	-0.02,	-0.2,	-0.41,	-0.22,	-0.12,	-0.12,	-0.09,	0.07,	0.06,	0.09,	0.18,	0.28,	0.36,	0.986,	1.1,	2.4,	1.79,	1.49,	2.62,	0.94,	1.01,	1.33,	1.26,	1.43,	0,	0.83,	0.73,	1.36,	20.12,	18.19,	-6.81,	-0.79,	-3.43,	-6.02,	-9.45,	182.9,	-0.9,	-0.77,	1,	1,	0.4,	2.2,	2,	3.3,	0.5,	0.9,	0.8,	1.1,	0.7,	1.6,	1.7,	0.8,	0.3,	0.8,	0.7,	7.8,	10.3,	2.2,	2.5,	-5,	-8.1,	3.1,	-4.7,	-1.8,	-4.2,	-4.3,	-4.4,	-5.2,	-0.7,	113.9,	0.62,	7.35,	1.78,	1.3,	0.55,	0.187,	-0.409,	-0.246,	-0.184,	0.97,	6,	-1.22,	1.63,	0.698,	0.643,	0.928,	0.651,	0.679,	0.285,	0,	1.014,	0.758,	0.184,	0.445,	0.206,	0.0058,	0,	16.81,	5.37,	0.84,	0.38,	-0.45,	0.14,	-0.63,	12.5,	-10.2,	3.08,	0.39,	-0.07,	8.8,	4.9,	18.16,	17.97,	-0.411,	0.65,	13.57,	49.9,	3.22,	3.2,	1.41,	1.04,	1.11,	1.1,	0.94,	2.3,	2.07,	1.7,	1.34,	1.73,	1.76,	1.55,	1.16,	1.43,	1.88,	1.27,	0.92,	1.07,	1.31,	1.19,	12.2,	-0.27,	1.094,	1.376,	1.052,	0.826,	0.167,	0.675,	1.085,	0.962,	1.42,	2.23,	-0.41,	1.6,	0.53,	0.405,	0.514,	6.9,	6,	8.8,	7.8,	4.4,	0.96,	-131,	-115,	-90,	-74,	-57,	-8,	117,	1.3,	-0.33,	0.91,	5.1,	6.2,	4.6,	7.1,	6.5,	16.56,	12.93,	5.86,	10.66,	4.02,	3.51,	2.58,	2.67,	9.8,	7.77,	4.05,	6.89,	1.27,	138.8,	142.2,	0.0058,	-0.79,	-0.1,	-0.45,	1.18,	1.3,	1.45,	14,	-3.2,	-0.0484,	-0.0295,	-0.0639,	-0.128,	0.15,	0.3,	1.051,	1.054,	1.139,	0.992,	0.736,	1.053,	1.115,	1.199,	0.9,	1.89,	2.52,	7.3,	-0.1794,	140.8,	154.6,	1.118,	-0.92,	0.71,	1.17,	0.38,	0.68,	0.33,	-2.1,	-0.37,	0.043,	-1.3,	43.48,	-1.218,	-3.86,	-0.73,	-2.9,	-4.56,	-2.35,	4.04,	0.74,	0.12,	0.23,	0.23,	0.21,	8.2,	2.3]
    letterDict["G"] = [3.97,	0.07,	0.49,	0.62,	0.35,	0.65,	0.97,	0.544,	36.3,	-13,	-8,	-1.2,	-2.3,	0,	0.592,	8.391,	3.972,	5.6,	0.12,	0.312,	0,	0,	-0.525,	1.52,	0.104,	0,	0,	0,	0,	1,	0,	66.4,	75,	23,	0.36,	0.18,	1.56,	0.57,	0.75,	1.56,	0.76,	0.42,	1.41,	1.64,	0.63,	0.74,	1.46,	1.68,	0.102,	0.085,	0.19,	0.152,	1.63,	-1,	-0.84,	-0.82,	-0.57,	-0.8,	0.64,	0.58,	0.56,	1.38,	0.5,	8.4,	49,	1.03,	1.08,	0.16,	0,	0,	0,	75.07,	290,	0,	9.78,	2.35,	0,	0,	0,	0,	2.06,	1,	1,	0,	0,	0,	0,	0,	0,	3.77,	0.55,	1,	1.3,	0.8,	1.5,	0.17,	0.63,	0.83,	0.59,	0.6,	0.94,	0.86,	0.91,	1.51,	2,	1.3,	1.45,	0,	60,	0.74,	9,	3,	0.33,	1.1,	0,	23.71,	24.74,	127.9,	0.44,	0.7,	1.73,	1.25,	2.4,	0.27,	0.95,	3.03,	24.5,	52,	10,	1.8,	0.3,	0.1,	2.34,	0.074,	50,	4.8,	707,	0.63,	0.88,	0.53,	0.83,	1.142,	1.042,	0.923,	64.6,	0,	7.6,	6.09,	0.28,	0,	-0.4,	0,	0,	0,	0,	300,	0.58,	4.2,	0.025,	0.56,	0.92,	1.64,	0.61,	0.89,	1.67,	0.58,	0.61,	0.79,	0.56,	12.43,	0.46,	0.97,	0.63,	5.02,	3.84,	0.46,	0,	0,	-0.5,	-0.2,	0.2,	1.01,	1.01,	90,	2.06,	0.72,	0.9,	1.35,	6.91,	3.36,	5.66,	-0.37,	5.29,	-0.48,	6.52,	-0.12,	8.51,	0.48,	8.87,	4.88,	3.12,	6.8,	7.72,	6.38,	7.09,	8.14,	6.32,	8.2,	6.17,	-0.07,	-1.62,	0,	-1.898,	-1.364,	-0.534,	-7.592,	-5.456,	0.12,	2.07,	0.64,	-0.56,	9.14,	0.63,	0.59,	0.94,	0.83,	1.76,	1.53,	0.85,	0.47,	0.64,	0.87,	0.94,	0.9,	2.64,	1.69,	1.61,	1.61,	5.7,	-3.25,	12.01,	7.31,	2.55,	15.36,	14.18,	10.95,	3.13,	6.16,	0.352,	0.201,	0.67,	-4.2,	0.56,	0.92,	1.64,	0.6,	0.3,	-0.02,	-0.37,	-0.09,	-0.67,	-0.73,	-0.88,	-0.71,	-0.46,	-0.39,	-0.42,	-0.15,	-0.4,	-0.1,	0.23,	0.13,	0.19,	0.46,	0.37,	-0.45,	-0.72,	-0.56,	0.14,	0.08,	0.45,	0.38,	0.17,	-0.14,	0.28,	-0.21,	0.17,	0.09,	1.14,	1.24,	0.85,	0.36,	0.14,	-0.12,	0.14,	-0.02,	1.015,	1.055,	1.63,	1.54,	0.66,	1.63,	1.13,	0.7,	3.09,	1.89,	0.46,	6.49,	2.39,	0.78,	1.4,	38.14,	37.16,	0.94,	0,	1.45,	0.94,	2.39,	52.6,	-0.34,	-0.41,	1.6,	1.6,	1.8,	0.3,	0.9,	0.6,	0.4,	0.6,	0.5,	0.5,	0.5,	0.1,	0.2,	0.2,	3.9,	1.2,	0.6,	-8.6,	-5.2,	-6.8,	-8.3,	-4.2,	-3.9,	-3.4,	5.7,	-1.2,	5.7,	5.9,	4.9,	5.6,	0.3,	62.9,	0.72,	0,	0,	0,	0,	0.16,	0.37,	-0.073,	-0.017,	0.591,	0.1,	-0.67,	0.5,	0.36,	0.725,	1.015,	1.848,	0.901,	4.259,	0.5,	2.355,	1.349,	0.051,	0.39,	0.049,	0.00499,	0,	-7.85,	7.99,	0.92,	0.41,	-0.16,	0.36,	0.27,	7.9,	2.39,	2.23,	-5.36,	0.3,	7.1,	6.4,	18.24,	18.57,	-0.19,	0.1,	3.4,	0,	5.97,	5.6,	1.18,	1.25,	1.26,	1.14,	0.98,	0.55,	0.65,	0.56,	0.37,	0.32,	0.3,	0.29,	0.32,	0.2,	0.33,	0.74,	2.74,	1.08,	0.97,	1.07,	11.3,	0,	1.031,	1.382,	1.018,	0.784,	1.162,	1.361,	1.104,	1.405,	2.06,	4.24,	0,	1.3,	0,	0.389,	0.374,	9.4,	9.4,	4.1,	4.6,	0,	0.64,	-11,	-13,	-18,	-22,	-28,	-47,	-66,	1.1,	1.24,	0.76,	7.8,	6.9,	7,	7.1,	6.3,	8.29,	7.95,	9.4,	5.81,	6.88,	7.48,	8.87,	5.62,	7.53,	7.69,	9.11,	5.72,	0,	63.8,	64.9,	0.005,	0,	0.21,	-1.15,	-1.85,	-1.06,	0.68,	-2,	-0.64,	-0.0464,	-0.0589,	0.0248,	0.331,	0.01,	0.08,	0.835,	0.845,	0.892,	0.743,	1.022,	0.785,	0.917,	0.698,	0.978,	1.17,	0.7,	7,	-0.0442,	63.8,	67.5,	1.346,	1.2,	1.34,	-0.16,	0.31,	-0.33,	-0.22,	0.09,	0,	0.501,	-0.1,	50.27,	-0.684,	-1.28,	-0.4,	-2.67,	-5.82,	-1.35,	3.39,	0.38,	0.06,	0.09,	0.09,	-0.02,	-1,	0]
    letterDict["H"] = [4.63,	0.61,	0.31,	0.29,	0.6,	0.83,	0.75,	0.323,	91.9,	50,	47,	-2.1,	2,	-0.12,	0.646,	8.415,	4.63,	8,	0.4,	0.2,	0.7,	0.23,	0,	1.07,	0.138,	1,	1,	1,	3,	0,	1,	167.3,	195,	43,	0.17,	0.02,	0.95,	1,	0.87,	0.95,	0.73,	1.77,	1.22,	1.86,	0.54,	0.9,	0.78,	0.96,	0.14,	0.047,	0.093,	0.054,	0.77,	1.07,	0.43,	0.16,	-0.25,	0.26,	0.67,	1.49,	0.36,	0.95,	6,	2,	66,	1,	1,	-0.4,	0.64,	0.99,	-0.75,	155.16,	277,	-38.5,	9.17,	1.82,	0.13,	2.99,	0.64,	4.66,	5.23,	1.52,	5.66,	10.2,	0.08,	1,	1,	1,	0,	2.84,	1,	1,	1,	1.2,	1,	0.21,	1.33,	1.09,	1.21,	1.03,	0.81,	1.07,	1.01,	0.9,	0.96,	0.85,	0.96,	0,	152.6,	0.58,	10.4,	96,	-0.5,	2.8,	-0.5,	59.64,	65.99,	242.54,	1.03,	1.06,	0.83,	0.67,	1.19,	1.07,	0,	0.89,	50.7,	34,	34,	0.8,	-0.1,	0.87,	1.82,	0.023,	91,	1.4,	155,	1.11,	0.92,	1.13,	0.83,	0.982,	0.952,	0.894,	75.7,	0,	4.5,	5.66,	0.23,	79,	-3.2,	-0.51,	-0.5,	2.76,	118.2,	219.9,	1.78,	6,	0.1,	1.22,	1.08,	0.68,	1.31,	0.85,	0.81,	0.14,	0.93,	0.38,	1.12,	12.16,	0.98,	1.06,	2.05,	0.57,	0.3,	0.71,	21.81,	-3.5,	0.8,	-0.7,	-2.2,	0.89,	0.92,	90,	2.41,	1.29,	0.87,	0.76,	2.17,	1.55,	2.3,	0.08,	2.33,	0.1,	2.23,	0.04,	1.88,	-0.19,	1.07,	1.14,	0.46,	2.7,	2.15,	2.69,	2.99,	0.2,	2.11,	2.1,	0.47,	0.11,	1.28,	0.5,	-1.755,	-1.215,	-0.54,	-17.55,	-12.15,	-0.14,	1.27,	-1.31,	4.22,	4.48,	1.33,	1.06,	0.85,	0.86,	0.53,	0.96,	1.02,	1.11,	0.95,	1.04,	1.26,	1.17,	0.22,	0.91,	1.08,	0.39,	2.1,	-2.84,	12.84,	7.85,	2.57,	11.59,	15.35,	12.07,	3.57,	5.8,	0.215,	0.125,	0.594,	12.6,	1.22,	1.08,	0.69,	0.85,	0.8,	-0.06,	0.1,	-0.23,	-0.26,	-0.14,	-0.09,	-0.05,	0.27,	0.32,	0.51,	0.37,	0.28,	0.29,	0.24,	0.22,	-0.16,	-0.04,	-0.32,	-0.34,	-0.16,	-0.04,	0.02,	0.09,	-0.06,	-0.09,	0.19,	-0.07,	-0.19,	0.21,	0.17,	0.42,	0.18,	0.05,	-0.21,	-0.31,	-0.56,	-0.2,	-0.22,	-0.45,	0.882,	0.911,	0.86,	1.59,	0.99,	0,	1.03,	1.87,	1.33,	2.71,	1.27,	0,	0.4,	1.08,	1.06,	23.07,	22.63,	-4.66,	0.95,	-5.61,	-5.61,	-11.22,	188.1,	-0.94,	0.49,	1.2,	1.2,	1.1,	0.7,	0.7,	0.7,	1.5,	0.9,	1,	2.4,	1.9,	1.1,	1.8,	3.4,	1.3,	1.2,	1,	1.2,	-2.8,	-1,	5.9,	-2.5,	-3,	0.8,	-0.3,	3,	-2.6,	-0.8,	1.6,	-0.9,	1.1,	155.8,	0.78,	3.82,	1.09,	1,	1.1,	0.205,	-0.078,	0.32,	0.056,	0.85,	0.1,	-0.64,	1.2,	2.168,	0.864,	0.611,	1.474,	1.085,	1.061,	1.204,	0.525,	1.079,	0.223,	0.31,	0.233,	0.02415,	0,	6.28,	7.49,	0.83,	0.7,	-0.18,	-0.25,	-0.49,	8.4,	-10.27,	2.41,	1.74,	1.11,	10.1,	9.2,	18.49,	18.64,	0,	1.1,	13.69,	51.6,	7.59,	8.2,	1.15,	1.01,	1.43,	0.96,	0.83,	0.83,	1.36,	0.66,	0.89,	0.46,	0.83,	0.96,	0.76,	1.02,	0.89,	1.55,	1.65,	1.4,	0.88,	1.13,	11.6,	-0.06,	0.95,	1.279,	0.967,	0.777,	0.802,	1.034,	0.906,	0.724,	1.25,	4.08,	-0.46,	1.6,	0.57,	0.307,	0.299,	2.2,	2.1,	2,	3.3,	11.9,	1.39,	-73,	-55,	-35,	-25,	-31,	-50,	-70,	1.4,	-0.11,	1.34,	2.1,	2.1,	2,	2.1,	2.1,	1.74,	2.8,	1.49,	2.27,	1.88,	2.2,	1.99,	1.98,	1.82,	2.47,	1.77,	2.13,	1.45,	157.5,	160,	0.0242,	0.22,	-2.24,	-0.74,	7.17,	-3,	0.99,	-26,	-3.2,	0.0549,	0.0874,	0.1335,	0.195,	-0.02,	0.06,	1.014,	0.949,	1.109,	1.034,	0.973,	1.054,	0.992,	1.012,	1.05,	2.51,	3.06,	11.3,	0.1643,	159.3,	163.2,	0.985,	-0.93,	0.66,	0.28,	-0.41,	0.13,	0.37,	-1.48,	-2.28,	0.165,	0.4,	49.33,	-0.63,	-0.62,	-0.18,	3.03,	6.54,	0.81,	-1.65,	0,	0,	-0.04,	-0.04,	-0.02,	3,	-1.23]
    letterDict["I"] = [3.95,	2.22,	1.45,	1.67,	0.73,	0.98,	0.37,	0.462,	102,	151,	100,	6.6,	11,	-2.26,	0.809,	8.195,	4.224,	7,	0.37,	0.411,	1.02,	0.186,	0.791,	0.66,	0.23,	2,	1,	0,	2,	0,	0,	168.8,	175,	18,	0.6,	0.19,	0.47,	1.08,	1.6,	0.47,	0.67,	0.98,	0.78,	0.87,	1.94,	1.35,	0.59,	0.53,	0.043,	0.034,	0.013,	0.056,	0.29,	0.76,	1.39,	2.17,	2.06,	1.81,	0.9,	0.99,	1.75,	0.67,	5.5,	4.5,	96,	1.27,	1.44,	0.73,	1.9,	1.2,	0.99,	131.17,	284,	12.4,	9.68,	2.36,	1.8,	4.19,	0.96,	4,	4.92,	1.9,	3.49,	16.1,	-0.01,	0,	0,	0,	0,	4.81,	1.05,	0.6,	1,	0.8,	1,	0.82,	1.05,	1.05,	1.27,	1.12,	1.29,	1.17,	1.29,	0.65,	0.85,	0.67,	0.58,	2.95,	168.5,	0,	5.2,	111,	-1.13,	0.8,	-1.8,	45,	49.71,	233.21,	1.07,	1.31,	0.4,	0.66,	0.12,	0.97,	0.52,	0.62,	22.8,	66,	13,	3.1,	0.7,	3.15,	2.36,	0.053,	103,	3.1,	394,	1.08,	1.48,	1.23,	1.87,	1.002,	0.892,	0.872,	18.9,	0,	2.6,	2.31,	0.12,	93.5,	4.5,	0.81,	-1.8,	1.83,	118.9,	217.9,	1.56,	7,	0.19,	0.97,	1.45,	0.51,	0.93,	1.47,	0.5,	0.22,	1.81,	2.6,	1.54,	15.67,	1.04,	1.24,	0.92,	0.26,	0.4,	0.68,	19.06,	13.9,	11.8,	8.5,	7,	0.79,	0.76,	105,	4.17,	0.94,	1.54,	0.8,	5.48,	2.52,	9.12,	1.44,	8.78,	1.31,	9.94,	1.77,	6.47,	0.39,	10.91,	12.91,	1.61,	3.48,	1.8,	4.4,	4.32,	15.25,	4.51,	4.95,	13.73,	1.19,	5.58,	1.8,	-1.951,	-1.189,	-0.762,	-15.608,	-9.512,	3.7,	0.66,	3.28,	-10.87,	2.1,	0.87,	1.01,	1.47,	1.59,	0.55,	0.57,	0.98,	0.84,	0.99,	1.14,	1.67,	1.38,	0.43,	0.27,	0.36,	0.79,	-8,	-1.72,	14.77,	9.99,	3.08,	14.63,	14.1,	12.95,	7.69,	7.51,	0.278,	0.1,	0.564,	-13,	0.97,	1.45,	0.51,	1.1,	4,	-0.07,	-0.03,	-0.22,	0,	-0.08,	-0.03,	0,	-0.33,	0,	-0.15,	0.31,	-0.03,	-0.01,	-0.42,	-0.27,	-0.08,	0.16,	0.57,	0.95,	1.1,	0.94,	0.47,	-0.04,	-0.25,	-0.48,	-0.2,	0.26,	-0.06,	0.29,	-0.34,	-0.54,	-0.74,	-1.17,	-0.65,	-0.51,	-0.09,	-0.07,	0.42,	0.09,	0.766,	0.742,	0.57,	0.67,	1.09,	2.32,	1.26,	1.61,	0.45,	1.31,	1.12,	0,	0.83,	1.74,	0.81,	16.66,	20.28,	4.92,	2.04,	-2.77,	2.88,	0.11,	182.2,	0.24,	1.31,	0.9,	0.9,	0.2,	0.9,	0.7,	0.4,	1.1,	0.9,	1.2,	1.3,	1.6,	1.4,	0.4,	0.7,	0.7,	1.1,	0.7,	0.6,	-4,	3.2,	-0.5,	6.7,	7.7,	-0.1,	-4.6,	-0.5,	-7,	-0.5,	-3.3,	-4.5,	4,	158,	0.88,	-3.02,	-3.02,	0.4,	2.97,	0.273,	0.149,	0.001,	-0.309,	1.14,	55,	1.25,	1.12,	1.283,	1.361,	0.603,	0.471,	0.178,	0.262,	2.078,	0.673,	0.459,	0.173,	0.111,	0.581,	0,	1,	-18.32,	8.72,	0.76,	0.79,	-0.19,	0.02,	0.06,	4.9,	2.15,	-4.44,	-1.68,	-1.03,	16.8,	10,	18.62,	19.21,	-0.086,	3.07,	21.4,	0.13,	6.02,	17.1,	1.07,	0.88,	0.95,	0.8,	0.78,	1.06,	0.64,	1.18,	1.47,	1.09,	1.25,	1.04,	1.15,	1.58,	0.9,	0.61,	0.64,	1.14,	0.97,	1.05,	12,	-0.23,	0.927,	1.241,	0.977,	0.776,	0.566,	0.876,	0.583,	0.502,	1.02,	4.52,	-0.56,	0.6,	0.84,	0.296,	0.306,	7,	6,	7.1,	6.5,	17.2,	1.29,	107,	106,	104,	106,	102,	83,	28,	0.5,	-0.26,	-0.77,	4.6,	5.1,	6.7,	5.2,	3.7,	3.3,	2.72,	1.76,	2.36,	10.08,	9.74,	7.73,	8.95,	6.96,	6.56,	5.05,	5.47,	0,	163,	163.9,	0,	3.14,	3.48,	4.38,	3.02,	7.26,	0.47,	91,	4.5,	0.4172,	0.3805,	0.4238,	0.06,	-0.28,	-0.29,	0.922,	0.928,	0.986,	0.852,	1.189,	0.95,	0.817,	0.912,	0.946,	4.5,	4.59,	20.3,	0.2758,	164.9,	162.6,	0.926,	1.16,	2.32,	-0.77,	-0.69,	-0.66,	-0.8,	0.37,	1.81,	0.943,	1.4,	57.3,	1.237,	5.54,	1.1,	5.04,	10.93,	3.83,	-7.92,	-1.89,	-0.31,	-0.33,	-0.34,	-0.28,	-3.1,	-4.81]
    letterDict["L"] = [4.17,	1.53,	3.23,	2.93,	1,	0.83,	0.53,	0.365,	102,	145,	108,	20,	15,	-2.46,	0.842,	8.423,	4.385,	6.5,	0.42,	0.4,	0.98,	0.186,	1.07,	0.69,	-0.052,	1,	2,	0,	2,	0,	0,	167.9,	170,	23,	0.45,	0.16,	0.59,	1.21,	1.3,	0.5,	0.58,	1.13,	0.85,	0.84,	1.3,	1.27,	0.46,	0.59,	0.061,	0.025,	0.036,	0.07,	0.36,	1.29,	1.24,	1.18,	0.96,	1.14,	0.9,	1.29,	1.53,	0.7,	5.5,	7.4,	40,	1.38,	1.36,	0.53,	1.9,	1,	0.89,	131.17,	337,	-11,	9.6,	2.36,	1.7,	2.59,	0.92,	4,	4.92,	1.52,	4.45,	10.1,	-0.01,	0,	0,	0,	0,	4.79,	1.25,	1,	1,	1,	1,	1,	1.31,	1.13,	1.25,	1.18,	1.1,	1.28,	1.23,	0.59,	0.8,	0.52,	0.59,	2.4,	168.5,	0,	4.9,	111,	-1.18,	0.8,	-1.8,	48.03,	50.62,	232.3,	1.32,	1.01,	0.57,	0.44,	0.58,	1.3,	1.05,	0.53,	27.6,	60,	16,	2.4,	0.5,	2.17,	2.36,	0.091,	54,	4.7,	581,	1.21,	1.24,	1.56,	1.56,	0.967,	0.961,	0.921,	15.6,	0,	3.25,	3.93,	0.16,	93.5,	3.8,	1.02,	-1.8,	2.08,	118.1,	205.6,	1.54,	7,	0.19,	1.3,	1.02,	0.58,	1.31,	1.04,	0.57,	0.19,	1.3,	1.42,	1.26,	14.9,	1.36,	0.98,	0.37,	0.21,	0.65,	1.01,	18.78,	8.8,	10,	11,	9.6,	0.85,	0.82,	104,	3.93,	1.23,	1.26,	0.63,	9.16,	3.4,	15.36,	1.82,	16.52,	2.16,	12.64,	1.02,	10.94,	0.52,	16.22,	21.66,	1.37,	8.44,	8.03,	8.11,	9.88,	22.28,	8.23,	8.03,	16.64,	1.03,	5.01,	1.8,	-1.966,	-1.315,	-0.65,	-15.728,	-10.52,	2.73,	0.54,	0.43,	-7.16,	3.24,	1.3,	1.22,	1.03,	1.24,	0.49,	0.56,	1.04,	1.39,	1.22,	1.02,	0.94,	1.05,	0,	0.67,	0.77,	0.5,	-9.2,	-1.61,	14.1,	9.37,	2.98,	14.01,	16.49,	13.07,	5.88,	7.37,	0.262,	0.104,	0.541,	-11.7,	1.3,	1.02,	0.59,	1.25,	2,	0.05,	-0.02,	0.41,	0.47,	0.61,	0.2,	0.48,	0.57,	0.5,	0.56,	0.7,	0.62,	0.28,	-0.23,	-0.25,	-0.42,	-0.57,	0.09,	0.32,	0.23,	0.25,	0.32,	-0.12,	-0.44,	-0.26,	-0.46,	0.04,	0.34,	-0.1,	-0.22,	-0.55,	-0.54,	-0.69,	-0.8,	-0.8,	-0.81,	-0.18,	-0.36,	0.24,	0.825,	0.798,	0.51,	1.03,	1.21,	0,	0.91,	1.09,	0.96,	0.57,	1.33,	0,	1.06,	1.03,	1.26,	10.89,	14.3,	4.92,	1.76,	-2.64,	3.16,	0.52,	173.7,	-0.12,	1.21,	0.9,	0.9,	0.2,	0.9,	0.3,	0.6,	2.6,	1.1,	1.2,	1.2,	1.4,	1.9,	0.8,	0.7,	0.7,	0.9,	0.5,	3.2,	-2.1,	5.5,	0.1,	2.3,	3.7,	-3.7,	-5.6,	-2.3,	-6.2,	-2.8,	-2,	-5.4,	2,	164.1,	0.85,	-3.02,	-3.02,	0.6,	2.49,	0.281,	0.129,	-0.008,	-0.264,	1.14,	33,	1.22,	1.29,	1.192,	1.111,	0.595,	0.656,	0.808,	0,	0.414,	0.758,	0.665,	0.215,	0.619,	0.083,	0,	1,	-17.79,	8.79,	0.73,	0.77,	-0.44,	0.06,	-0.17,	4.9,	2.28,	-4.19,	-1.03,	-0.98,	15,	12.2,	18.6,	19.01,	-0.102,	2.52,	21.4,	0.13,	5.98,	17.6,	0.95,	0.8,	0.96,	1.01,	0.79,	0.84,	0.91,	1.52,	1.36,	1.47,	1.26,	1.4,	1.8,	1.63,	1.65,	1.36,	0.66,	1.16,	0.87,	0.84,	13,	-0.62,	0.935,	1.234,	0.982,	0.783,	0.494,	0.74,	0.789,	0.766,	1.33,	4.81,	-0.48,	0.4,	0.92,	0.287,	0.34,	7.4,	7.7,	9.1,	10.6,	17,	1.44,	95,	103,	103,	104,	103,	82,	36,	0.3,	-0.38,	0.15,	8.8,	9.4,	11,	8.6,	7.4,	5.06,	4.43,	2.74,	4.52,	13.21,	12.79,	9.66,	16.46,	9.45,	9,	6.54,	10.15,	0,	163.1,	164,	0,	1.99,	3.5,	6.57,	0.83,	1.09,	0.56,	100,	3.8,	0.4251,	0.3819,	0.3926,	0.138,	-0.28,	-0.36,	1.085,	1.11,	1,	1.193,	1.192,	1.106,	0.994,	1.276,	0.885,	4.71,	4.72,	20.8,	0.2523,	164.6,	163.4,	1.054,	1.18,	1.47,	-1.1,	-0.62,	-0.53,	-0.44,	0.41,	1.8,	0.943,	0.5,	53.89,	1.215,	6.81,	1.52,	4.91,	9.88,	4.09,	-8.68,	-2.29,	-0.37,	-0.38,	-0.37,	-0.32,	-2.8,	-4.68]
    letterDict["K"] = [4.36,	1.15,	0.06,	0.15,	0.6,	0.55,	0.75,	0.466,	105.1,	-141,	-188,	-3.7,	-2.5,	-0.35,	0.767,	8.408,	4.358,	6.5,	0.402,	0.265,	0.68,	0.219,	0,	0.99,	0.032,	1,	1,	1,	4,	0,	1,	171.3,	200,	97,	0.03,	0,	1.01,	1.16,	0.74,	1.19,	0.66,	1.83,	1.01,	1.49,	1,	0.74,	1.09,	0.82,	0.055,	0.115,	0.072,	0.095,	1.13,	-0.36,	-0.09,	-0.56,	-0.62,	-0.41,	0.82,	1.03,	1.18,	1.1,	7,	6.6,	56,	0.15,	0.33,	-1.1,	-0.57,	5.7,	-0.99,	146.19,	224,	14.6,	9.18,	2.16,	-0.99,	1.89,	0.78,	4.77,	6.89,	1.52,	4.87,	10.9,	0,	2,	1,	1,	0,	4.27,	1.15,	0.7,	0.7,	1.7,	1.7,	0.09,	1.33,	1.08,	1.2,	1.27,	0.86,	1.01,	0.86,	0.82,	0.94,	0.94,	0.91,	1.5,	175.6,	0.33,	11.3,	119,	1.4,	5.3,	3,	57.1,	63.21,	300.46,	1.26,	0.77,	1.01,	1.25,	0.83,	1.2,	0.79,	0.98,	103,	3,	85,	0.05,	-1.8,	1.64,	2.18,	0.059,	72,	4.1,	575,	1.22,	0.77,	1.27,	0.66,	1.093,	1.082,	1.057,	0,	1,	7.9,	7.92,	0.59,	100,	-3.9,	-0.09,	3,	2.94,	122,	210.9,	2.08,	6,	0.2,	1.23,	0.77,	0.96,	1.25,	0.77,	0.99,	0.27,	0.7,	0.59,	0.74,	11.36,	1.27,	0.79,	0.89,	1.17,	1.13,	1.05,	21.29,	0.1,	-3.2,	-1.9,	-3,	1.05,	1.23,	65,	1.23,	1.23,	0.81,	0.84,	6.01,	3.36,	3.2,	-0.84,	2.58,	-1.02,	4.67,	-0.4,	3.5,	-0.75,	1.04,	1.15,	0.62,	6.25,	6.11,	5.25,	6.31,	0.16,	8.36,	4.93,	0.58,	-1.05,	-4.18,	0,	-1.374,	-1.074,	-0.3,	-12.366,	-9.666,	2.55,	0.61,	-1.71,	-9.97,	10.68,	1.23,	1.13,	0.77,	0.75,	0.95,	0.95,	1.01,	1.08,	1.2,	1,	0.73,	0.83,	1.18,	0.66,	1.27,	0.86,	5.7,	-3.31,	10.8,	5.72,	2.12,	11.96,	13.28,	9.93,	1.79,	4.88,	0.391,	0.058,	0.407,	36.8,	1.23,	0.77,	0.96,	1,	0.7,	0.26,	0.12,	-0.17,	-0.19,	0.03,	-0.11,	0.16,	0.23,	0.37,	0.47,	0.28,	0.41,	0.45,	0.03,	0.08,	-0.09,	0.04,	-0.29,	-0.46,	-0.59,	-0.55,	-0.51,	-0.33,	-0.44,	-0.39,	-0.43,	-0.42,	-0.2,	0.33,	0,	0.14,	0.45,	0.09,	0.17,	-0.14,	-0.43,	0.06,	-0.15,	-0.27,	1.04,	1.232,	3.9,	0.88,	1.27,	2.86,	0.85,	0.83,	0.71,	0.87,	1.36,	0,	0.94,	1,	0.91,	16.46,	14.07,	-5.55,	0.08,	-3.97,	-5.63,	-9.6,	215.2,	-2.05,	-1.18,	1,	1,	0.7,	0.6,	1,	0.8,	0.8,	1.9,	1.1,	1.4,	1,	2.2,	1.9,	2,	1.3,	1.2,	1.3,	2.3,	-4.1,	0.5,	7.3,	-3.3,	-2.9,	-3.1,	1,	-1.2,	2.8,	1.3,	-0.8,	1,	-0.9,	115.5,	0.52,	6.13,	2.46,	0.4,	1.5,	0.228,	-0.075,	0.049,	-0.371,	0.939,	1,	-0.67,	1.24,	1.203,	0.735,	1.06,	0.932,	1.254,	1.288,	0.835,	0.947,	1.045,	0.17,	0.559,	0.159,	0.0371,	0,	9.71,	4.4,	0.97,	0.31,	-0.12,	-0.16,	-0.45,	10.1,	-9.52,	2.84,	1.41,	-3.14,	7.9,	7.5,	17.96,	18.36,	-0.062,	1.6,	15.71,	49.5,	9.74,	3.5,	1.03,	1.06,	0.97,	0.66,	0.84,	1.08,	0.8,	0.82,	1.27,	1.24,	1.1,	1.17,	1.22,	1.71,	1.63,	1.45,	1.19,	1.27,	1.13,	1.1,	13,	-0.65,	1.102,	1.367,	1.029,	0.834,	0.615,	0.784,	1.026,	0.841,	1.34,	3.77,	-0.41,	1.6,	0.73,	0.429,	0.446,	6.1,	6.5,	7.7,	7.5,	10.5,	0.91,	-24,	-205,	-148,	-124,	-9,	-38,	115,	1.4,	-0.18,	0.29,	6.3,	5.8,	4.4,	6.7,	7.9,	12.98,	10.2,	9.67,	12.68,	3.39,	2.54,	2,	1.89,	7.81,	6.01,	5.45,	7.59,	3.67,	165.1,	167.3,	0.0371,	-1.19,	-1.62,	-2.78,	-2.36,	1.56,	1.1,	-26,	-4.11,	-0.0101,	-0.0053,	-0.0158,	-0.112,	0.32,	0.24,	0.944,	0.946,	0.952,	0.979,	0.478,	1.003,	0.944,	1.008,	0.893,	2.12,	2.5,	6.1,	-0.2134,	170,	162.5,	1.105,	-0.8,	0.15,	1.7,	0.57,	1.79,	1.17,	-2.53,	-2.03,	0.283,	-1.6,	42.92,	-0.67,	-5.62,	-1.01,	-5.99,	-11.92,	-4.08,	7.7,	1.01,	0.17,	0.32,	0.33,	0.3,	8.8,	3.88]
    letterDict["M"] = [4.52,	1.18,	2.67,	2.96,	1,	0.98,	0.64,	0.295,	97.7,	124,	121,	5.6,	4.1,	-1.47,	0.709,	8.418,	4.513,	0,	0.417,	0.375,	0.78,	0.221,	0.656,	0.59,	-0.258,	1,	1,	1,	3,	0,	1,	170.8,	185,	31,	0.4,	0.11,	0.6,	1.45,	1.05,	0.6,	0.71,	1.57,	0.83,	0.52,	1.43,	0.95,	0.52,	0.85,	0.068,	0.082,	0.014,	0.055,	0.51,	1.37,	1.27,	1.21,	0.6,	1,	0.75,	1.4,	1.4,	0.67,	6,	1.7,	94,	1.93,	1.52,	0.26,	2.4,	1.9,	0.94,	149.21,	283,	-10,	9.21,	2.28,	1.23,	2.35,	0.77,	4.43,	6.36,	1.52,	4.8,	10.4,	0.04,	0,	0,	0,	0,	4.25,	1.15,	1,	1,	1,	1,	0.74,	1.54,	1.23,	1.37,	1.49,	0.88,	1.15,	0.96,	0.58,	0.39,	0.69,	0.6,	1.3,	162.2,	0,	5.7,	105,	-1.59,	0.7,	-1.3,	69.32,	55.32,	202.65,	1.66,	1.06,	0.3,	0.45,	0.22,	0.55,	0,	0.68,	33.5,	52,	20,	1.9,	0.4,	1.67,	2.28,	0.024,	93,	1.1,	132,	1.45,	1.05,	1.83,	0.86,	0.947,	0.862,	0.804,	6.8,	0,	1.4,	2.44,	0.08,	94.1,	1.9,	0.81,	-1.3,	2.34,	113.1,	204,	1.8,	6.8,	0.19,	1.47,	0.97,	0.41,	1.39,	0.93,	0.51,	0.38,	1.19,	1.49,	1.09,	14.39,	1.53,	1.08,	1.07,	0,	0,	0.36,	21.64,	4.8,	7.1,	5.4,	4,	0.84,	0.83,	100,	4.22,	1.23,	1.29,	0.62,	2.5,	1.37,	5.3,	2.04,	6,	2.55,	3.68,	0.86,	3.14,	0.47,	4.12,	7.17,	1.59,	2.14,	3.79,	1.6,	1.85,	1.85,	2.46,	2.61,	3.93,	0.66,	3.51,	1.3,	-1.963,	-1.303,	-0.659,	-15.704,	-10.424,	1.75,	0.7,	0.15,	-4.96,	2.18,	1.32,	1.47,	0.96,	0.94,	0.52,	0.71,	1.11,	0.9,	1.45,	1.41,	1.3,	0.82,	0.88,	0,	0.76,	0.5,	-4.2,	-1.84,	14.33,	9.83,	3.18,	13.4,	16.23,	15,	5.21,	6.39,	0.28,	0.054,	0.328,	-14.2,	1.47,	0.97,	0.39,	1.15,	1.9,	0,	0,	0.13,	0.27,	0.39,	0.43,	0.41,	0.79,	0.63,	0.58,	0.61,	0.21,	0.11,	-0.42,	-0.57,	-0.38,	0.24,	0.29,	0.43,	0.32,	-0.05,	-0.1,	-0.21,	-0.28,	-0.14,	-0.52,	0.25,	0.45,	-0.01,	-0.53,	-0.47,	-0.76,	-0.86,	-0.71,	-0.56,	-0.49,	-0.44,	-0.19,	0.16,	0.804,	0.781,	0.4,	1.17,	1.41,	0,	0.41,	1.71,	1.89,	0,	1.41,	0,	1.33,	1.31,	1,	20.61,	20.61,	2.35,	1.32,	-3.83,	1.03,	-2.8,	197.6,	-0.24,	1.27,	0.3,	0.3,	0.8,	0.3,	1,	1,	1.7,	1.7,	1.5,	2.7,	2.8,	1,	1.3,	1,	0.8,	0.8,	0,	5.3,	-3.5,	7.2,	3.5,	2.3,	3.7,	-2.1,	-4.8,	-4.3,	-4.8,	-1.6,	-4.1,	-5.3,	1.8,	172.9,	0.85,	-1.3,	-1.67,	0.3,	1.3,	0.253,	-0.092,	-0.041,	0.077,	1.2,	54,	1.02,	1.21,	0,	1.092,	0.831,	0.425,	0.886,	0,	0.982,	1.028,	0.668,	0.239,	0.431,	0.198,	0.08226,	0,	-8.86,	9.15,	0.74,	0.76,	-0.79,	0.11,	0.03,	5.3,	-1.48,	-2.49,	-0.27,	-0.41,	13.3,	8.4,	18.11,	18.49,	-0.107,	1.4,	16.25,	1.43,	5.74,	14.9,	0.88,	1.12,	0.99,	1.02,	0.98,	0.9,	1.1,	1.68,	2.13,	1.64,	1.14,	1.84,	2.21,	1.76,	1.35,	1.35,	0.74,	1.11,	0.96,	0.8,	12.8,	-0.5,	0.952,	1.269,	0.963,	0.806,	0.444,	0.736,	0.812,	0.729,	1.12,	4.48,	-0.46,	0.5,	0.86,	0.293,	0.313,	2.3,	2.4,	3.3,	3,	11.9,	0.91,	78,	73,	77,	82,	90,	83,	62,	0.5,	-0.09,	-0.71,	2.5,	2.1,	2.8,	2.4,	2.3,	1.71,	1.87,	0.6,	1.85,	2.44,	3.1,	2.45,	2.67,	2.1,	2.54,	1.62,	2.24,	0,	165.8,	167,	0.0823,	1.42,	0.21,	-3.12,	4.26,	0.62,	0.66,	68,	1.9,	0.1747,	0.1613,	0.216,	0.275,	-0.26,	-0.19,	1.032,	0.923,	1.077,	0.998,	1.369,	1.093,	0.782,	1.171,	0.878,	3.63,	3.91,	15.7,	0.0197,	167.7,	165.9,	0.974,	0.55,	1.78,	-0.73,	-0.38,	-0.38,	-0.31,	0.44,	1.18,	0.738,	0.5,	52.75,	1.02,	4.76,	1.09,	3.34,	7.47,	3.11,	-7.13,	-1.36,	-0.22,	-0.3,	-0.3,	-0.25,	-3.4,	-3.66]
    letterDict["F"] = [4.66,	2.02,	1.96,	2.03,	0.6,	0.98,	0.53,	0.314,	113.9,	189,	148,	19.2,	14.7,	-2.33,	0.756,	8.228,	4.663,	9.4,	0.318,	0.318,	0.7,	0.29,	1.06,	0.71,	0.015,	1,	1,	1,	4,	0,	1,	203.4,	210,	24,	0.5,	0.14,	0.6,	1.13,	1.38,	0.66,	0.61,	1.1,	0.93,	1.04,	1.5,	1.5,	0.3,	0.44,	0.059,	0.041,	0.065,	0.065,	0.62,	1.48,	1.53,	1.01,	1.29,	1.35,	0.77,	1.15,	1.26,	1.05,	6.5,	3.6,	41,	1.42,	1.46,	0.61,	2.3,	1.1,	0.92,	165.19,	284,	-34.5,	9.18,	2.16,	1.79,	2.94,	0.71,	5.89,	4.62,	1.52,	6.02,	13.9,	0.03,	0,	0,	0,	0,	4.31,	1.1,	1,	1,	1,	1,	2.18,	1.13,	1.01,	0.4,	1.02,	1.15,	1.34,	1.26,	0.72,	1.2,	0.6,	0.71,	2.65,	189,	0,	5.2,	132,	-2.12,	1.4,	-2.5,	48.52,	51.06,	204.74,	1.22,	1.16,	0.67,	0.5,	0.89,	0.8,	0.43,	0.61,	25.5,	58,	10,	2.2,	0.5,	2.87,	1.83,	0.04,	51,	2.3,	303,	1.05,	1.2,	1.2,	1.37,	0.93,	0.912,	0.914,	54.7,	0,	3.2,	2.59,	0.1,	115.5,	2.8,	1.03,	-2.5,	2.97,	118.2,	203.7,	1.9,	7.1,	0.39,	1.07,	1.32,	0.59,	1.02,	1.21,	0.77,	0.08,	1.25,	1.3,	1.23,	14,	1.19,	1.16,	0.86,	0.28,	0.45,	0.65,	29.4,	13.2,	13.9,	13.4,	12.6,	0.78,	0.73,	108,	4.37,	1.23,	1.37,	0.58,	3.83,	1.94,	6.51,	1.38,	6.58,	1.42,	6.34,	1.29,	6.36,	1.3,	9.6,	7.76,	1.24,	2.73,	2.93,	3.52,	3.72,	6.47,	3.59,	4.36,	10.99,	0.48,	5.27,	2.5,	-1.864,	-1.135,	-0.729,	-20.504,	-12.485,	2.68,	0.8,	0.52,	-6.64,	4.37,	1.09,	1.1,	1.13,	1.41,	0.88,	0.72,	0.96,	1.02,	0.92,	1.32,	1.56,	1.23,	2.2,	0.47,	0.37,	0.96,	-9.2,	-1.63,	13.43,	8.99,	3.02,	14.08,	14.18,	13.27,	6.6,	6.62,	0.195,	0.104,	0.577,	-15.5,	1.07,	1.32,	0.58,	1.1,	3.1,	0.05,	0.12,	-0.03,	0.24,	0.06,	0.15,	0.03,	0.48,	0.15,	0.1,	-0.06,	0.05,	0,	-0.18,	-0.12,	-0.32,	0.08,	0.24,	0.36,	0.48,	0.2,	0.2,	-0.13,	-0.04,	-0.03,	-0.33,	0.09,	0.07,	0.25,	-0.31,	-0.29,	-0.47,	-0.39,	-0.61,	-0.25,	-0.2,	0.11,	-0.02,	0.34,	0.773,	0.723,	0.43,	0.85,	1,	0,	1.07,	1.52,	1.2,	1.27,	1.3,	2.11,	0.41,	1.51,	1.25,	16.26,	19.61,	2.98,	2.09,	-3.74,	0.89,	-2.85,	228.6,	0,	1.27,	1.2,	1.2,	0.2,	0.5,	0.9,	0.6,	1.9,	1,	1.3,	1.9,	2.9,	1.8,	0.3,	0.7,	0.5,	0.1,	1.2,	1.6,	-1.1,	2.8,	1.6,	2.6,	3,	0.7,	-1.8,	0.8,	-3.7,	1.6,	-4.1,	-2.4,	2.8,	194.1,	0.88,	-3.24,	-3.24,	0.7,	2.65,	0.234,	-0.011,	0.438,	0.074,	1.086,	18,	1.92,	1.16,	0.963,	1.052,	0.377,	1.348,	0.803,	0.393,	1.336,	0.622,	0.881,	0.087,	0.077,	0.682,	0.0946,	1,	-21.98,	7.98,	0.52,	0.87,	-0.25,	1.18,	0.4,	5,	-0.76,	-4.92,	1.3,	0.45,	11.2,	8.3,	17.3,	17.95,	0.001,	2.75,	19.8,	0.35,	5.48,	18.8,	1.06,	1.12,	0.95,	0.88,	0.96,	0.9,	1,	1.1,	1.39,	0.96,	1.14,	0.86,	1.35,	1.22,	0.67,	1.2,	1.04,	1.05,	0.84,	0.95,	12.1,	-0.41,	0.915,	1.247,	0.934,	0.774,	0.706,	0.968,	0.685,	0.585,	1.07,	5.38,	-0.55,	0.4,	0.59,	0.292,	0.314,	3.3,	3.4,	5,	4.5,	23,	1.34,	92,	108,	128,	132,	131,	117,	120,	0.3,	-0.01,	-0.67,	3.7,	4,	5.6,	3.9,	2.7,	2.32,	1.92,	1.18,	1.68,	5.27,	4.97,	5.41,	7.32,	3.91,	3.59,	3.51,	4.34,	0,	190.8,	191.9,	0.0946,	1.69,	4.8,	9.14,	-1.36,	2.57,	0.47,	100,	2.8,	0.4076,	0.4201,	0.3455,	0.24,	-0.41,	-0.22,	1.119,	1.122,	1.11,	0.981,	1.368,	1.121,	1.058,	1.09,	1.151,	5.88,	4.84,	23.9,	0.3561,	193.5,	198.8,	0.869,	0.67,	1.72,	-1.43,	-0.45,	-0.45,	-0.55,	0.5,	1.74,	1,	1,	53.45,	1.938,	5.06,	1.09,	5.2,	11.35,	3.67,	-7.96,	-2.22,	-0.36,	-0.34,	-0.38,	-0.33,	-3.7,	-4.65]
    letterDict["P"] = [4.44,	1.95,	0.76,	0.76,	0.06,	0.55,	0.97,	0.509,	73.6,	-20,	-36,	5.1,	5.6,	-0.98,	0.73,	0,	4.471,	0,	0.208,	0.34,	0.36,	0.131,	-2.24,	1.61,	0,	0,	0,	0,	0,	0,	0,	129.3,	145,	50,	0.18,	0.04,	1.52,	0.57,	0.55,	1.56,	2.01,	0,	1.1,	1.58,	0.66,	0.4,	1.58,	1.69,	0.102,	0.301,	0.034,	0.068,	2.04,	-0.12,	-0.01,	-0.06,	-0.21,	-0.09,	0.76,	0.49,	0.36,	1.47,	5.5,	5.2,	56,	0.27,	0.54,	-0.07,	1.2,	0.18,	0.22,	115.13,	222,	-86.2,	10.64,	1.95,	0.72,	2.67,	0,	2.72,	4.11,	1.52,	4.31,	17.8,	0,	0,	0,	0,	0,	0,	0.71,	1,	13,	1,	0.1,	0.39,	0.63,	0.82,	0.21,	0.68,	0.8,	0.61,	0.65,	1.66,	2.1,	1.77,	1.67,	2.6,	122.2,	0.39,	8,	32.5,	0.73,	0.9,	0,	36.13,	39.21,	179.93,	0.25,	1.16,	1.55,	2.96,	0.43,	1.78,	0.37,	0.63,	51.5,	25,	45,	0.6,	-0.3,	2.77,	1.99,	0.051,	58,	2.5,	366,	0.52,	0.61,	0.21,	0.52,	1.055,	1.085,	0.932,	43.8,	0,	7,	7.19,	0.46,	41.9,	-1.6,	2.03,	-1.4,	1.42,	81.9,	237.4,	1.25,	6.2,	0.17,	0.52,	0.64,	1.91,	0.58,	0.68,	1.78,	0.46,	0.4,	0.35,	0.42,	11.37,	0.49,	1.22,	0.5,	0.12,	0,	1.95,	10.93,	6.1,	8,	4.4,	3.1,	1,	1.04,	78,	1.89,	0.7,	0.75,	1.43,	4.95,	3.18,	4.79,	-0.05,	5.29,	0.11,	3.62,	-0.42,	4.36,	-0.19,	2.24,	3.51,	0.67,	6.28,	7.21,	5.65,	6.22,	2.38,	5.2,	4.84,	1.96,	-0.76,	-3.03,	0,	-1.699,	-1.236,	-0.463,	-11.893,	-8.652,	0.41,	2.12,	-0.58,	5.19,	5.14,	0.63,	0.57,	0.75,	0.46,	1.47,	1.51,	0.91,	0.48,	0.72,	0.69,	0.69,	0.73,	1.34,	1.54,	1.62,	1.3,	2.1,	-2.5,	11.19,	6.64,	2.46,	11.51,	14.1,	10.62,	2.12,	5.65,	0.346,	0.136,	0.6,	0.8,	0.52,	0.64,	1.91,	0.1,	0.2,	-0.19,	-0.08,	-0.43,	-0.34,	-0.76,	-0.81,	-1.12,	-1.86,	-1.4,	-1.33,	-1.03,	-0.84,	-0.42,	-0.13,	0.26,	0.05,	0.02,	-0.31,	-0.91,	-1.24,	-1.28,	-0.79,	-0.48,	-0.29,	-0.04,	0.37,	0.31,	0.04,	0.28,	0.14,	0.89,	1.4,	1.77,	2.27,	1.59,	1.14,	0.77,	0.78,	0.16,	1.047,	1.093,	2.04,	1.47,	1.46,	0,	1.73,	0.87,	0.83,	0.38,	0.25,	1.99,	2.73,	1.37,	0,	23.94,	52.63,	0,	0,	0,	0,	0,	0,	0,	0,	0.7,	0.7,	0.8,	2.6,	0.5,	0.4,	0.1,	0.3,	0.3,	0.3,	0,	0,	0.2,	0,	0.7,	1.9,	1.5,	-7.7,	8.1,	-22.8,	-24.4,	-1.8,	-6.6,	7.4,	2.6,	6.5,	3.6,	-6,	5.8,	3.5,	0.4,	92.9,	0.64,	-1.75,	-1.75,	0.9,	2.6,	0.165,	0.37,	-0.016,	-0.036,	0.659,	42,	-0.49,	0.65,	2.093,	1.249,	3.159,	0.179,	0.748,	0,	0.415,	0.579,	1.385,	0.151,	0.739,	0.366,	0.01979,	0,	5.82,	7.79,	0.82,	0.35,	-0.59,	0.11,	-0.47,	6.6,	-3.68,	-1.22,	0.88,	2.23,	8.2,	6.9,	18.16,	18.77,	-0.181,	2.7,	17.43,	1.58,	6.3,	14.8,	1.18,	1.31,	1.05,	1.33,	1.12,	1.67,	0.94,	0.15,	0.03,	0.15,	0.44,	0.2,	0.07,	0.07,	0.03,	0.1,	0.66,	1.01,	2.01,	1.7,	6.5,	3,	1.049,	1.342,	1.05,	0.809,	1.945,	1.78,	1.412,	2.613,	3.9,	3.8,	-0.23,	1.7,	-2.5,	0.432,	0.354,	4.2,	4.2,	0.7,	1.3,	15,	0.12,	-79,	-79,	-81,	-82,	-85,	-103,	-132,	1.6,	0,	0,	4.9,	5.4,	4.7,	5.3,	6.9,	5.41,	4.79,	5.6,	5.7,	3.8,	3.42,	3.2,	3.3,	4.54,	4.04,	4.28,	4.56,	0,	121.6,	122.9,	0.0198,	-1.14,	0.71,	-0.12,	3.12,	-0.15,	0.69,	25,	-1.9,	0.0019,	-0.0492,	0.0844,	-0.478,	0.13,	0.15,	1.299,	1.362,	1.266,	1.332,	1.241,	1.314,	1.309,	0.8,	1.816,	2.09,	2.45,	9.9,	-0.4188,	123.1,	123.4,	0.82,	0.54,	0.85,	-0.75,	0.46,	0.34,	0.36,	-0.2,	0.86,	0.711,	-1,	45.39,	-0.503,	-4.47,	-0.62,	-4.32,	-10.86,	-3.22,	6.25,	0.47,	0.08,	0.2,	0.19,	0.11,	0.2,	0.75]
    letterDict["S"] = [4.5,	0.05,	0.97,	0.81,	0.35,	0.55,	0.84,	0.507,	54.9,	-70,	-60,	-4.1,	-3.5,	-0.39,	0.594,	8.38,	4.498,	6.5,	0.2,	0.354,	0.53,	0.062,	-0.524,	1.34,	0.225,	1,	0,	0,	1,	0,	0,	99.1,	115,	44,	0.22,	0.08,	1.43,	0.77,	0.75,	1.43,	0.74,	0.96,	1.55,	0.93,	0.63,	0.79,	1.41,	1.49,	0.12,	0.139,	0.125,	0.106,	1.52,	-0.98,	-0.93,	-0.6,	-0.83,	-0.97,	0.68,	0.83,	0.65,	1.26,	3,	7,	120,	0.96,	0.98,	-0.26,	0.01,	0.73,	-0.67,	105.09,	228,	-7.5,	9.21,	2.19,	-0.04,	1.31,	0.55,	1.6,	3.97,	1.52,	2.7,	13.1,	0.11,	1,	2,	0,	0,	3.83,	0.75,	1.7,	1,	1.5,	1,	0.12,	0.78,	1.01,	1.01,	0.81,	1.05,	0.91,	0.93,	1.23,	1.3,	1.13,	1.25,	0,	88.7,	1.42,	9.2,	32,	0.52,	1.7,	0.3,	32.4,	35.65,	174.06,	0.65,	1.09,	1.19,	1.21,	1.24,	1.2,	0.87,	1.03,	42,	35,	32,	0.8,	-0.1,	0.07,	2.21,	0.069,	117,	4.5,	593,	0.74,	0.92,	0.48,	0.82,	1.169,	1.048,	0.923,	44.4,	0,	5.25,	5.37,	0.27,	29.3,	-0.8,	0.05,	0.3,	1.28,	117.9,	232,	1.08,	4.9,	0.025,	0.82,	0.95,	1.32,	0.76,	1.02,	1.3,	0.55,	0.82,	0.7,	0.87,	11.23,	0.7,	1.04,	1.01,	0.57,	0.81,	1.56,	6.35,	1.2,	-3.7,	-3.2,	-2.9,	1.02,	1.04,	83,	1.81,	0.78,	0.77,	1.34,	6.84,	2.83,	7.55,	0.25,	7.68,	0.3,	7.24,	0.14,	6.26,	-0.2,	5.38,	6.84,	0.68,	8.53,	7.25,	8.04,	8.05,	4.17,	7.4,	6.41,	5.58,	-0.67,	-2.84,	0,	-1.753,	-1.297,	-0.455,	-10.518,	-7.782,	1.47,	0.94,	-0.83,	-1.6,	6.78,	0.78,	0.77,	1.02,	0.7,	1.29,	1.46,	0.95,	1.05,	0.84,	0.86,	0.65,	0.98,	1.43,	1.08,	1.34,	1.4,	6.5,	-3.3,	11.26,	6.93,	2.6,	11.26,	13.36,	11.18,	2.43,	5.53,	0.326,	0.155,	0.692,	-2.5,	0.82,	0.95,	1.33,	0.75,	0.9,	-0.19,	0.01,	-0.1,	-0.17,	-0.26,	-0.35,	-0.47,	-0.23,	-0.28,	-0.49,	-0.28,	-0.05,	0.07,	0.41,	0.44,	0.25,	-0.12,	0.11,	-0.12,	-0.31,	-0.28,	0.03,	0.27,	0.34,	0.41,	0.43,	-0.11,	-0.23,	-0.23,	0.22,	0.24,	0.4,	0.63,	0.33,	0.32,	0.13,	-0.09,	-0.29,	-0.35,	1.056,	1.082,	1.61,	1.5,	1.05,	1.23,	1.31,	1.14,	1.16,	0.92,	0.89,	0,	1.18,	0.97,	1.5,	19.95,	18.56,	-3.4,	0.04,	-1.66,	-3.44,	-5.1,	109.5,	-0.75,	-0.5,	1.6,	1.6,	2.3,	0.7,	0.8,	0.4,	0.4,	1.1,	0.6,	0.5,	0.5,	0.6,	1.6,	1.7,	0.8,	0.7,	0.9,	-3.9,	-3.5,	-3,	-1.9,	-1.7,	-2.4,	1.3,	2.6,	1.8,	2.1,	1.5,	2.5,	3.2,	-1.2,	85.6,	0.66,	4.35,	0.1,	0.4,	0.04,	0.236,	0.022,	-0.153,	0.47,	0.76,	0.1,	-0.55,	0.71,	0.523,	1.093,	1.444,	1.151,	1.145,	0.16,	1.089,	1.14,	1.257,	0.01,	0.689,	0.15,	0.08292,	0,	-1.54,	7.08,	0.96,	0.49,	-0.01,	0.13,	-0.11,	7.5,	-5.06,	1.96,	-1.63,	0.57,	7.4,	8,	17.57,	18.06,	-0.203,	0.14,	9.47,	1.67,	5.68,	6.9,	0.69,	1.02,	0.96,	1.2,	1.25,	0.81,	0.69,	0.61,	0.44,	0.67,	0.66,	0.68,	0.65,	0.42,	0.71,	1.02,	0.64,	0.71,	0.76,	0.65,	12.2,	-0.35,	1.046,	1.381,	1.025,	0.811,	0.928,	0.969,	0.987,	0.784,	1.2,	4.12,	-0.39,	0.7,	0.53,	0.416,	0.376,	4,	5.5,	3.9,	3.8,	2.6,	0.84,	-34,	-26,	-31,	-34,	-36,	-41,	-52,	0.9,	0.15,	1.45,	7.3,	7.2,	7.3,	6.6,	8.8,	4.27,	5.41,	9.6,	6.99,	4.1,	4.93,	6.03,	6,	4.18,	5.15,	7.64,	6.52,	0,	94.2,	95.4,	0.0829,	-0.52,	-0.62,	-1.39,	1.59,	1.93,	1,	-2,	-0.5,	-0.0433,	-0.0282,	0.004,	-0.177,	0.05,	0.16,	0.947,	0.932,	0.956,	0.984,	1.097,	0.911,	0.986,	0.886,	1.003,	1.66,	1.82,	8.2,	-0.1629,	94.2,	102,	1.342,	-0.05,	0.86,	0.42,	0.12,	0.1,	0.17,	-0.4,	-0.64,	0.359,	-0.7,	47.24,	-0.563,	-1.92,	-0.55,	-3,	-6.21,	-1.85,	4.08,	0.55,	0.09,	0.1,	0.12,	0.11,	-0.6,	1.74]
    letterDict["T"] = [4.35,	0.05,	0.84,	0.91,	0.44,	0.83,	0.75,	0.444,	71.2,	-38,	-54,	0.8,	1.1,	-0.52,	0.655,	8.236,	4.346,	6.9,	0.272,	0.388,	0.5,	0.108,	0,	1.08,	0.166,	2,	0,	0,	1,	0,	0,	122.1,	140,	47,	0.23,	0.08,	0.96,	0.83,	1.19,	0.98,	1.08,	0.75,	1.09,	0.86,	1.17,	0.75,	1.09,	1.16,	0.086,	0.108,	0.065,	0.079,	0.98,	-0.7,	-0.59,	-1.2,	-0.62,	-0.77,	0.7,	0.94,	1.15,	1.05,	5,	6.1,	97,	1.11,	1.01,	-0.18,	0.52,	1.5,	0.09,	119.12,	253,	-28,	9.1,	2.09,	0.26,	3.03,	0.63,	2.6,	4.11,	1.73,	3.17,	16.7,	0.04,	1,	2,	0,	0,	3.87,	0.75,	1.7,	1,	1,	1,	0.21,	0.77,	1.17,	0.55,	0.85,	1.2,	1.14,	1.05,	1.04,	0.6,	0.88,	1.08,	0.45,	118.2,	0.71,	8.6,	61,	0.07,	1.5,	-0.4,	35.2,	36.5,	205.8,	0.86,	1.24,	1.09,	1.33,	0.85,	0.99,	1.14,	0.39,	45,	30,	32,	0.7,	-0.2,	0.07,	2.1,	0.059,	107,	3.7,	490,	0.81,	1.18,	0.77,	1.36,	1.073,	1.051,	0.934,	31,	0,	4.8,	5.16,	0.26,	51.3,	-0.7,	-0.35,	-0.4,	1.43,	117.1,	226.7,	1.24,	5,	0.1,	0.82,	1.21,	1.04,	0.79,	1.27,	0.97,	0.49,	1.12,	0.59,	1.3,	11.69,	0.78,	1.18,	0.92,	0.23,	0.71,	1.23,	11.01,	2.7,	1.5,	-1.7,	-0.6,	0.99,	1.02,	83,	2.04,	0.87,	1.23,	1.03,	5.77,	2.63,	7.51,	0.66,	8.38,	0.99,	5.44,	-0.13,	5.66,	-0.04,	5.61,	8.89,	0.92,	4.43,	3.51,	7.41,	5.2,	4.33,	5.18,	5.87,	4.68,	-0.36,	-1.2,	0.4,	-1.767,	-1.252,	-0.515,	-12.369,	-8.764,	2.39,	1.09,	-1.52,	-4.75,	8.6,	0.8,	0.86,	1.19,	1.2,	1.05,	0.96,	1.15,	0.74,	0.97,	1.15,	0.98,	1.2,	0.28,	1.12,	0.87,	1.11,	5.2,	-2.91,	11.65,	7.08,	2.55,	13,	14.5,	10.53,	2.6,	5.81,	0.251,	0.152,	0.713,	-5,	0.82,	1.21,	1.03,	0.75,	1.7,	-0.04,	-0.34,	-0.07,	-0.2,	-0.1,	-0.37,	-0.54,	-0.33,	-0.21,	-0.44,	-0.25,	-0.16,	-0.33,	0.33,	0.35,	0.22,	0,	0.03,	0.49,	0.17,	0.08,	-0.15,	0.47,	0.27,	0.36,	0.5,	-0.06,	-0.02,	-0.26,	0.1,	0.16,	-0.1,	0.29,	0.13,	0.21,	-0.02,	-0.27,	-0.3,	-0.04,	1.008,	1.043,	1.48,	1.96,	0.87,	2.48,	1.57,	0.96,	0.97,	1.38,	0.81,	1.24,	0.77,	1.38,	1.18,	18.92,	21.09,	-2.57,	0.27,	-2.31,	-2.84,	-5.15,	142.1,	-0.71,	-0.27,	0.3,	0.3,	1.6,	0.8,	0.7,	1,	0.5,	0.6,	1,	0.5,	0.6,	0.7,	0.9,	1,	0.3,	0.8,	2.1,	-2.6,	2.3,	-4,	-3.7,	1.3,	1.7,	0,	0.3,	-0.7,	0.6,	1.2,	1.7,	0,	-0.5,	106.5,	0.7,	3.86,	-0.42,	0.4,	0.44,	0.213,	0.136,	-0.208,	0.348,	0.817,	0.1,	-0.28,	0.78,	1.961,	1.214,	1.172,	0.749,	1.487,	0.218,	1.732,	0.863,	1.055,	0.1,	0.785,	0.074,	0.09408,	0,	-4.15,	7,	0.92,	0.38,	0.05,	0.28,	0.09,	6.6,	-4.88,	0.92,	-2.09,	-1.4,	8.8,	7,	17.54,	17.71,	-0.17,	0.54,	15.77,	1.66,	5.66,	9.5,	0.87,	0.8,	1.03,	1.13,	1.41,	0.77,	0.92,	0.75,	0.65,	0.7,	0.73,	0.79,	0.46,	0.57,	0.5,	0.82,	0.82,	0.84,	0.79,	0.086,	11.7,	-0.11,	0.997,	1.324,	0.998,	0.795,	0.884,	1.053,	0.784,	0.569,	0.99,	4.11,	-0.48,	0.4,	0.54,	0.362,	0.339,	5.7,	5.7,	4.4,	4.6,	6.9,	0.74,	-7,	-3,	10,	20,	34,	79,	174,	0.7,	0.39,	-0.7,	6,	6.1,	5.6,	5.3,	5.1,	3.83,	5.36,	8.95,	5.16,	4.98,	5.55,	5.62,	5,	4.45,	5.46,	7.12,	5.08,	0,	119.6,	121.5,	0.0941,	-0.08,	0.65,	1.81,	2.31,	0.19,	1.05,	7,	-0.7,	0.0589,	0.0239,	0.1462,	-0.163,	0.02,	-0.08,	1.017,	1.023,	1.018,	0.992,	0.822,	0.988,	1.11,	0.832,	1.189,	2.18,	2.45,	10.3,	-0.0701,	120,	126,	0.871,	-0.02,	0.89,	0.63,	0.38,	0.21,	0.18,	-0.34,	-0.26,	0.45,	-0.4,	49.26,	-0.289,	-3.99,	-0.71,	-1.91,	-4.83,	-1.97,	4.02,	0.25,	0.04,	0.01,	0.03,	0.05,	-1.2,	0.78]
    letterDict["W"] = [4.7,	2.65,	0.77,	1.08,	0.73,	0.77,	0.97,	0.305,	135.4,	145,	163,	16.3,	17.8,	-2.01,	0.743,	8.094,	4.702,	0,	0.462,	0.231,	0.7,	0.409,	1.6,	0.76,	0.158,	1,	1,	1.5,	5,	0,	1,	237.6,	255,	32,	0.27,	0.04,	0.96,	1.08,	1.37,	0.6,	1.47,	0.4,	0.62,	0.16,	1.49,	1.19,	0.48,	1.59,	0.077,	0.013,	0.064,	0.167,	0.48,	1.38,	2.25,	1.31,	1.51,	1.71,	0.74,	1.33,	0.84,	1.23,	7,	1.3,	18,	0.91,	1.06,	0.37,	2.6,	1.6,	0.67,	204.24,	282,	-33.7,	9.44,	2.43,	2.25,	3.21,	0.84,	8.08,	7.68,	1.52,	5.9,	13.2,	0,	1,	0,	0,	0,	4.75,	1.1,	1,	1,	1,	1,	5.7,	1.18,	1.32,	1.86,	1.18,	1.15,	1.13,	1.15,	0.67,	0,	0.62,	0.68,	3,	227,	0.13,	5.4,	170,	-0.51,	1.9,	-3.4,	56.92,	60,	237.01,	1.05,	1.17,	0.74,	0.62,	0.62,	1.03,	1.79,	0.63,	34.7,	49,	17,	1.6,	0.3,	3.77,	2.38,	0.014,	25,	0.8,	99,	0.97,	1.18,	1.17,	0.79,	0.925,	0.917,	0.803,	70.5,	0,	4,	2.78,	0.15,	145.5,	-0.9,	0.66,	-3.4,	3.58,	118.4,	203.7,	2.21,	7.6,	0.56,	0.99,	1.14,	0.76,	0.97,	1.26,	0.79,	0.43,	1.54,	0.89,	1.75,	13.93,	1.01,	1.07,	1,	0,	0.93,	1.1,	42.53,	14.9,	18.1,	17.1,	15.1,	0.83,	0.87,	94,	3.82,	1.06,	1.13,	0.87,	1.34,	1.15,	2.51,	1.02,	2.89,	1.35,	1.64,	0.26,	2.22,	0.77,	2.67,	2.11,	1.63,	0.8,	0.47,	1.68,	2.1,	2.21,	1.06,	2.31,	2.2,	0.9,	5.2,	3.4,	-1.869,	-1.03,	-0.839,	-26.166,	-14.42,	2.49,	-4.65,	1.25,	-17.84,	1.97,	1.03,	1.02,	1.24,	1.28,	0.88,	0.9,	1.17,	0.64,	1.11,	1.06,	1.25,	1.26,	0,	1.24,	1.1,	0.57,	-10,	-1.75,	12.95,	8.41,	2.85,	12.06,	13.9,	11.41,	6.25,	6.98,	0.291,	0.092,	0.632,	-7.9,	0.99,	1.14,	0.75,	1.1,	2.2,	-0.06,	-0.01,	-0.02,	0.25,	0.2,	0.07,	-0.1,	0.15,	0.02,	0.14,	0.21,	0.32,	0.36,	-0.1,	-0.15,	-0.19,	-0.1,	0.15,	0.34,	0.45,	0.22,	0.09,	-0.22,	-0.08,	-0.01,	-0.32,	0.19,	0.16,	0.15,	-0.15,	-0.44,	-0.46,	-0.37,	-0.44,	-0.17,	-0.2,	-0.09,	-0.18,	-0.06,	0.848,	0.867,	0.75,	0.83,	1.23,	0,	0.98,	1.96,	1.58,	1.53,	1.27,	0,	1.22,	1.12,	1.33,	23.36,	19.78,	2.33,	2.51,	-8.21,	-0.18,	-8.39,	271.6,	-0.59,	0.88,	1.1,	1.1,	0.3,	2.1,	1.7,	1.4,	3.1,	1.4,	1.5,	1.1,	2.1,	0.4,	0.4,	0,	0,	0.4,	2.7,	1.2,	-0.9,	4,	-0.9,	-1,	0.3,	-3.4,	3.4,	-0.8,	3.3,	6.5,	1.2,	2.9,	3,	224.6,	0.85,	-2.86,	-2.86,	0.6,	3,	0.183,	-0.011,	0.493,	0.05,	1.107,	77,	0.5,	1.05,	1.925,	1.114,	0.452,	1.283,	0.803,	0,	1.781,	0.777,	0.881,	0.166,	0.16,	0.463,	0.05481,	1,	-16.19,	8.07,	0.2,	0.86,	-0.33,	-0.12,	-0.61,	5.3,	-5.88,	-4.75,	3.65,	0.85,	9.9,	5.7,	17.19,	16.87,	0.275,	0.31,	21.67,	2.1,	5.89,	17.1,	0.91,	0.9,	1.06,	0.68,	0.94,	1.26,	1.1,	1.68,	1.1,	0.68,	0.68,	1.52,	1.57,	1,	1,	0.58,	0.58,	1.06,	0.91,	1.25,	12.4,	-0.45,	0.904,	1.186,	0.938,	0.796,	0.69,	0.91,	0.755,	0.671,	1.1,	6.1,	-0.48,	0.7,	0.58,	0.268,	0.291,	1.3,	1.2,	1.2,	1,	24.2,	1.8,	59,	69,	102,	118,	116,	130,	179,	0.9,	0.21,	-0.14,	1.4,	1.4,	1.8,	1.2,	0.7,	0.67,	0.54,	1.18,	0.56,	1.11,	1.28,	2.6,	2.01,	0.9,	0.95,	1.96,	1.24,	6.93,	226.4,	228.2,	0.0548,	1.76,	2.29,	5.91,	2.61,	3.59,	0.7,	109,	-0.46,	0.2362,	0.4114,	0.2657,	0.564,	-0.15,	-0.28,	0.895,	0.879,	0.971,	0.96,	1.017,	0.939,	0.841,	0.981,	0.852,	6.46,	5.64,	24.5,	0.3836,	197.1,	209.8,	0.666,	-0.19,	0.82,	-1.57,	-0.98,	-0.27,	0.05,	-0.01,	1.46,	0.878,	1.6,	53.59,	0.514,	0.21,	-0.13,	0.51,	1.8,	-0.11,	0.79,	-1.28,	-0.21,	-0.24,	-0.33,	-0.27,	-1.9,	-3.32]
    letterDict["Y"] = [4.6,	1.88,	0.39,	0.68,	0.44,	0.83,	0.84,	0.42,	116.2,	53,	22,	5.9,	3.8,	-2.24,	0.743,	8.183,	4.604,	6.8,	0.161,	0.429,	0.7,	0.298,	4.91,	1.07,	0.094,	1,	1,	1,	5,	0,	1,	203.6,	230,	60,	0.15,	0.03,	1.14,	0.69,	1.47,	1.14,	0.68,	0.73,	0.99,	0.96,	1.07,	1.96,	1.23,	1.01,	0.082,	0.065,	0.114,	0.125,	1.08,	1.49,	1.53,	1.05,	0.66,	1.11,	0.71,	0.49,	1.41,	1.35,	7,	3.4,	41,	1.1,	0.89,	0.02,	1.6,	1.8,	-0.93,	181.19,	344,	-10,	9.11,	2.2,	0.96,	2.94,	0.71,	6.47,	4.73,	1.52,	6.72,	13.9,	0.03,	1,	2,	0,	0,	4.3,	1.1,	1,	1,	1,	1,	1.26,	0.71,	0.88,	1.08,	0.77,	1.39,	1.37,	1.21,	0.92,	1.8,	0.41,	0.98,	2.85,	193,	0.2,	6.2,	136,	-0.21,	2.1,	-2.3,	51.73,	51.15,	229.15,	0.7,	1.28,	1.14,	0.94,	1.44,	0.69,	0.73,	0.83,	55.2,	24,	41,	0.5,	-0.4,	2.67,	2.2,	0.032,	50,	2.3,	292,	0.79,	1.23,	0.74,	1.08,	0.961,	0.93,	0.837,	0,	0,	4.35,	3.58,	0.25,	117.3,	-1.3,	1.24,	-2.3,	3.36,	110,	195.6,	2.13,	7.1,	0.39,	0.72,	1.25,	1.05,	0.73,	1.31,	0.93,	0.46,	1.53,	1.08,	1.68,	13.42,	0.69,	1.25,	1.31,	0.97,	0.38,	0.87,	31.53,	6.1,	8.2,	7.4,	6.7,	0.93,	1.03,	83,	2.91,	0.63,	1.07,	1.35,	3.15,	1.76,	4.08,	0.53,	3.51,	0.2,	5.42,	1.29,	3.28,	0.07,	2.68,	2.57,	0.67,	2.54,	1.01,	3.42,	3.32,	3.42,	2.75,	4.55,	3.13,	0.59,	2.15,	2.3,	-1.686,	-1.03,	-0.656,	-20.232,	-12.36,	2.23,	-0.17,	-2.21,	9.25,	2.4,	0.71,	0.72,	1.35,	1.45,	1.28,	1.12,	0.8,	0.73,	0.72,	1.35,	1.26,	1.23,	1.53,	0.54,	1.24,	1.78,	-1.9,	-2.42,	13.29,	8.53,	2.79,	12.64,	14.76,	11.52,	3.03,	6.73,	0.293,	0.081,	0.495,	2.9,	0.72,	1.25,	1.05,	1.1,	2.8,	-0.14,	-0.29,	-0.38,	-0.3,	-0.04,	-0.31,	-0.35,	-0.19,	-0.1,	-0.08,	0.16,	0.11,	0,	-0.1,	0.15,	0.05,	0.18,	0.29,	0.42,	0.77,	0.53,	0.34,	-0.11,	0.06,	-0.08,	0.35,	0.33,	0.22,	0.09,	-0.02,	-0.19,	-0.05,	-0.41,	-0.49,	-0.35,	0.1,	-0.25,	0.07,	-0.2,	0.931,	1.05,	1.72,	1.34,	0.68,	1.9,	1.31,	1.68,	0.86,	1.79,	0.91,	1.9,	1.09,	1.65,	1.09,	26.49,	26.36,	-0.14,	1.63,	-5.97,	-1.77,	-7.74,	239.9,	-1.02,	0.33,	1.9,	1.9,	0.8,	1.8,	0.4,	1.2,	0.6,	0.2,	0.8,	1.3,	0.8,	1.1,	0.3,	1.2,	0.8,	0.9,	0.5,	-4.5,	-3.7,	-4.6,	-0.6,	4,	3.3,	4.8,	2.9,	3.1,	3.8,	1.3,	-0.6,	3.2,	2.1,	177.7,	0.76,	0.98,	0.98,	1.2,	2.97,	0.193,	-0.138,	0.381,	0.22,	1.02,	66,	1.67,	0.67,	0.802,	1.34,	0.816,	1.283,	1.227,	0.654,	0,	0.907,	1.101,	0.066,	0.06,	0.737,	0.05159,	1,	-1.51,	6.9,	0.49,	0.64,	-0.42,	0.19,	-0.61,	5.7,	-6.11,	-1.39,	2.32,	0.01,	8.8,	6.8,	17.99,	18.23,	0,	2.97,	18.03,	1.61,	5.66,	15,	1.04,	1.12,	0.94,	0.8,	0.82,	0.99,	0.73,	0.65,	0.93,	0.91,	1.04,	1.06,	1.1,	1.02,	0.73,	1.06,	0.93,	1.15,	0.64,	0.85,	12.1,	-0.17,	0.929,	1.199,	0.981,	0.788,	0.778,	1.009,	0.665,	0.56,	0.98,	5.19,	-0.5,	0.6,	0.72,	0.22,	0.287,	4.5,	3.7,	4.5,	3.3,	17.2,	1.68,	-11,	11,	36,	44,	43,	27,	-7,	0.9,	0.05,	-0.49,	3.6,	3.2,	3.3,	3.1,	2.4,	2.75,	2.26,	3.26,	2.16,	4.07,	3.55,	6.15,	3.96,	3.46,	2.96,	4.85,	3.01,	5.06,	194.6,	197,	0.0516,	1.37,	1.89,	1.39,	2.37,	-2.58,	1,	56,	-1.3,	0.3167,	0.3113,	0.2998,	0.322,	-0.09,	-0.03,	1,	0.902,	1.157,	1.12,	0.836,	1.09,	0.866,	1.075,	0.945,	5.01,	4.46,	19.5,	0.25,	231.7,	237.2,	0.531,	-0.23,	0.47,	-0.56,	-0.25,	0.4,	0.48,	-0.08,	0.51,	0.88,	0.5,	51.79,	1.699,	3.34,	0.69,	2.87,	7.61,	2.17,	-4.73,	-0.88,	-0.14,	-0.23,	-0.29,	-0.23,	0.7,	-1.01]
    letterDict["V"] = [3.95,	1.32,	1.08,	1.14,	0.82,	0.98,	0.37,	0.386,	85.1,	123,	117,	3.5,	2.1,	-1.56,	0.777,	8.436,	4.184,	7,	0.379,	0.495,	0.76,	0.14,	0.401,	0.63,	0.513,	2,	0,	0,	1,	0,	0,	141.7,	155,	18,	0.54,	0.18,	0.5,	1.06,	1.7,	0.59,	0.61,	1.25,	0.75,	0.32,	1.69,	1.79,	0.42,	0.59,	0.062,	0.048,	0.028,	0.053,	0.43,	1.26,	1.09,	1.21,	1.21,	1.13,	0.86,	0.96,	1.61,	0.48,	5,	6.6,	74,	1.58,	1.33,	0.54,	1.5,	0.48,	0.84,	117.15,	293,	5.63,	9.62,	2.32,	1.22,	3.67,	0.89,	3,	4.11,	1.9,	3.17,	17.2,	0.01,	0,	0,	0,	0,	4.86,	0.95,	0.6,	1,	0.8,	1,	0.6,	0.81,	1.13,	0.64,	0.74,	1.56,	1.31,	1.58,	0.6,	0.8,	0.58,	0.62,	1.7,	141.4,	0,	5.9,	84,	-1.27,	0.9,	-1.5,	40.35,	42.75,	207.6,	0.93,	1.4,	0.44,	0.56,	0.43,	0.77,	0,	0.76,	23.7,	64,	14,	2.9,	0.6,	1.87,	2.32,	0.066,	98,	4.2,	553,	0.94,	1.66,	1.1,	2,	0.982,	0.927,	0.913,	29.5,	0,	3.4,	3.31,	0.22,	71.5,	4.2,	0.56,	-1.5,	1.49,	121.7,	220.3,	1.29,	6.4,	0.15,	0.91,	1.49,	0.47,	0.93,	1.43,	0.46,	0.08,	1.81,	2.63,	1.53,	15.71,	0.98,	1.33,	0.87,	0.24,	0.48,	0.58,	13.92,	2.7,	3.3,	5.9,	4.6,	0.81,	0.81,	94,	3.49,	0.97,	1.41,	0.83,	6.65,	2.53,	5.12,	-0.6,	4.66,	-0.79,	6.18,	-0.19,	7.55,	0.36,	11.44,	6.3,	1.3,	5.44,	4.57,	7,	6.19,	14.34,	5.27,	6.07,	12.43,	1.24,	4.45,	1.5,	-1.981,	-1.254,	-0.728,	-13.867,	-8.778,	3.5,	1.32,	0.54,	-3.97,	3.81,	0.95,	1.05,	1.44,	1.73,	0.51,	0.55,	1.03,	1.18,	0.82,	1.66,	1.22,	1.62,	0.14,	0.69,	0.52,	0.5,	-3.7,	-2.08,	15.07,	10.38,	3.21,	12.88,	16.3,	13.86,	7.14,	7.62,	0.291,	0.096,	0.529,	-10.9,	0.91,	1.49,	0.47,	0.95,	4,	-0.03,	0.02,	-0.01,	-0.01,	0.12,	0.13,	0.31,	0.24,	0.17,	-0.01,	0,	0.06,	-0.13,	-0.07,	-0.09,	-0.15,	0.29,	0.48,	0.76,	0.69,	0.67,	0.58,	0.06,	0.11,	-0.18,	0,	0.04,	0.05,	-0.1,	-0.33,	-0.45,	-0.86,	-1.32,	-0.99,	-0.7,	-0.11,	-0.06,	0.29,	0.18,	0.825,	0.817,	0.59,	0.89,	0.88,	1.62,	1.11,	1.56,	0.64,	0.95,	0.93,	0,	0.88,	1.7,	1.01,	17.06,	21.87,	4.04,	1.18,	-2.05,	2.86,	0.81,	157.2,	0.09,	1.09,	0.7,	0.7,	0.1,	1.1,	0.6,	1.1,	1.5,	0.8,	1.2,	0.4,	1.4,	1.3,	0.7,	0.7,	0.2,	0.6,	1,	1.4,	-4.4,	2.5,	2.3,	6.8,	7.1,	2.7,	-6,	-3.5,	-6.2,	-4.6,	-3.5,	-6.3,	1.4,	141,	0.86,	-2.18,	-2.18,	0.4,	1.69,	0.255,	0.245,	-0.155,	-0.212,	0.95,	0.1,	0.91,	0.99,	0.409,	1.428,	0.64,	0.654,	0.625,	0.167,	0.946,	0.561,	0.643,	0.285,	0.356,	0.301,	0.00569,	1,	-16.22,	8.88,	0.85,	0.72,	-0.46,	-0.08,	-0.11,	5.6,	1.99,	-2.69,	-2.53,	-1.29,	12,	9.4,	18.3,	18.98,	-0.125,	1.79,	21.57,	0.13,	5.96,	14.3,	0.9,	0.87,	0.62,	0.58,	0.67,	0.76,	0.7,	1.14,	1.18,	0.81,	1.03,	0.94,	0.94,	1.08,	0.51,	0.46,	0.53,	0.74,	0.77,	1.12,	11.9,	-0.14,	0.931,	1.235,	0.968,	0.781,	0.706,	0.939,	0.546,	0.444,	0.87,	4.18,	-0.53,	0.5,	0.63,	0.307,	0.294,	8.2,	8.2,	5.9,	7.1,	15.3,	1.2,	100,	108,	116,	113,	111,	117,	114,	0.4,	-0.06,	-0.7,	6.7,	6.7,	7.7,	6.8,	5.3,	4.05,	3.57,	3.1,	4.1,	12.53,	10.69,	9.46,	10.24,	8.62,	7.47,	6.6,	7,	0,	138.2,	139,	0.0057,	2.53,	1.59,	2.3,	0.52,	2.06,	0.51,	62,	4.2,	0.4084,	0.2947,	0.3997,	-0.052,	-0.17,	-0.24,	0.955,	0.923,	0.959,	1.001,	1.14,	0.957,	0.9,	0.908,	0.999,	3.77,	3.67,	19.5,	0.1782,	139.1,	138.4,	1.131,	1.13,	1.99,	-0.4,	-0.46,	-0.62,	-0.65,	0.32,	1.34,	0.825,	0.7,	56.12,	0.899,	5.39,	1.15,	3.98,	8.2,	3.31,	-6.94,	-1.34,	-0.22,	-0.29,	-0.29,	-0.23,	-2.6,	-3.5]
    AACategoryLen = 531

    probMatr = np.zeros((len(sampleSeq3DArr), 1, len(sampleSeq3DArr[0]), AACategoryLen))

    sampleNo = 0
    for sequence in sampleSeq3DArr:

	AANo	 = 0
	for AA in sequence:

	    if not AA in letterDict:
		#probMatr[sampleNo][0][AANo] = np.full((1,AACategoryLen), 0)
		continue

	    else:
		probMatr[sampleNo][0][AANo]= letterDict[AA]

	    AANo += 1
	sampleNo += 1

    return probMatr
'''
'''
def convertSampleToAAindexforUbiVector(sampleSeq3DArr):
    """
    Convertd the raw data to physico-chemical property(based on AAindex data For ubiquitination)

    PARAMETER
    ---------
    sampleSeq3DArr: 3D numpy array
    	X denoted the unknow amino acid.

    probMatr: Probability Matrix for Samples. Shape (nb_samples, 1, nb_length_of_sequence, nb_AA)
    """
    letterDict = {} # Total 13*20
    letterDict["A"] = [0,	6,	154.33,	0.892,	27.8,	0,	-0.31,	15,	0.3,	7.62,	50.76,	0.984,	-1.895]
    letterDict["R"] = [10,	10.76,	341.01,	0.901,	94.7,	1,	1.3,	67,	-1.4,	6.81,	48.66,	1.008,	-1.475]
    letterDict["N"] = [1.3,	5.41,	207.9,	0.93,	60.1,	0,	0.49,	49,	-0.5,	6.17,	45.8,	1.048,	-1.56]
    letterDict["D"] = [1.9,	2.77,	194.91,	0.932,	60.6,	0,	0.58,	50,	-0.6,	6.18,	43.17,	1.068,	-1.518]
    letterDict["C"] = [0.17,	5.05,	219.79,	0.925,	15.5,	0,	-0.87,	5,	0.9,	10.93,	58.74,	0.906,	-2.035]
    letterDict["Q"] = [1.9,	5.65,	235.51,	0.885,	68.7,	0,	0.7,	56,	-0.7,	6.67,	46.09,	1.037,	-1.521]
    letterDict["E"] = [3,	3.22,	223.16,	0.933,	68.2,	0,	0.68,	55,	-0.7,	6.38,	43.48,	1.094,	-1.535]
    letterDict["G"] = [0,	5.97,	127.9,	0.923,	24.5,	0,	-0.33,	10,	0.3,	7.31,	50.27,	1.031,	-1.898]
    letterDict["H"] = [0.99,	7.59,	242.54,	0.894,	50.7,	1,	0.13,	34,	-0.1,	7.85,	49.33,	0.95,	-1.755]
    letterDict["I"] = [1.2,	6.02,	233.21,	0.872,	22.8,	0,	-0.66,	13,	0.7,	9.99,	57.3,	0.927,	-1.951]
    letterDict["L"] = [1,	5.98,	232.3,	0.921,	7.6,	0,	-0.53,	16,	0.5,	9.37,	53.89,	0.935,	-1.966]
    letterDict["K"] = [5.7,	9.74,	300.46,	1.057,	103,	1,	1.79,	85,	-1.8,	5.72,	42.92,	1.102,	-1.374]
    letterDict["M"] = [1.9,	5.74,	202.65,	0.804,	33.5,	0,	-0.38,	20,	0.4,	9.83,	52.75,	0.952,	-1.963]
    letterDict["F"] = [1.1,	5.48,	204.74,	0.914,	25.5,	0,	-0.45,	10,	0.5,	8.99,	53.45,	0.915,	-1.864]
    letterDict["P"] = [0.18,	6.3,	179.93,	0.932,	51.5,	0,	0.34,	45,	-0.3,	6.64,	45.39,	1.049,	-1.699]
    letterDict["S"] = [0.73,	5.68,	174.06,	0.923,	42,	0,	0.1,	32,	-0.1,	6.93,	47.24,	1.046,	-1.753]
    letterDict["T"] = [1.5,	5.66,	205.8,	0.934,	45,	0,	0.21,	32,	-0.2,	7.08,	49.26,	0.997,	-1.767]
    letterDict["W"] = [1.6,	5.89,	237.01,	0.803,	34.7,	0,	-0.27,	17,	0.3,	8.41,	53.59,	0.904,	-1.869]
    letterDict["Y"] = [1.8,	5.66,	229.15,	0.837,	55.2,	0,	0.4,	41,	-0.4,	8.53,	51.79,	0.929,	-1.686]
    letterDict["V"] = [0.48,	5.96,	207.6,	0.913,	23.7,	0,	-0.62,	14,	0.6,	10.38,	56.12,	0.931,	-1.981]
    AACategoryLen = 13

    probMatr = np.zeros((len(sampleSeq3DArr), 1, len(sampleSeq3DArr[0]), AACategoryLen))

    sampleNo = 0
    for sequence in sampleSeq3DArr:

	AANo	 = 0
	for AA in sequence:

	    if not AA in letterDict:
		#probMatr[sampleNo][0][AANo] = np.full((1,AACategoryLen), 0)
			continue

	    else:
		probMatr[sampleNo][0][AANo]= letterDict[AA]

	    AANo += 1
	sampleNo += 1

    return probMatr
'''
'''
def convertPSSMToMatr(sampleSeq3DArr):
    AACategoryLen = 20
    pssmMatr = np.zeros((len(sampleSeq3DArr), 1, len(sampleSeq3DArr[0]), AACategoryLen))

    #print(sampleSeq3DArr)
    sampleNo = 0
    for k in range(len(sampleSeq3DArr)):
        for i in range(len(sampleSeq3DArr[0])):
	        num = sampleSeq3DArr[k][i]
	    for j in range(len(num)):
		pssmMatr[sampleNo][0][i][j] = 1 / (1 + exp(-num[j]))
	sampleNo += 1
    del sampleSeq3DArr,num
    return pssmMatr
'''


def convertSampleToAAindexClusterH(sampleSeq3DArr):
    '''
    Convertd the raw data to physico-chemical property(based on AAindex Cluster H)

    PARAMETER
    ---------
    sampleSeq3DArr: 3D numpy array
    	X denoted the unknow amino acid.

    probMatr: Probability Matrix for Samples. Shape (nb_samples, 1, nb_length_of_sequence, nb_AA)
    '''

    letterDict = {} # Total 149*20
    letterDict["A"] = [0.61,	1.81,	6.8,	0.77,	0.357,	1.18,	1.56,	16,	44,	-0.2,	7.3,	3.9,	-0.45,	-0.08,	0.36,	0.17,	0.02,	25,	0.38,	0.2,	1.56,	1.26,	0.25,	0,	2.34,	0.31,	0,	-0.01,	0,	0,	0,	297,	0,	1,	1.2,	1,	0.67,	0,	1.34,	0.87,	1.041,	0,	0.934,	-0.18,	-0.01,	-0.06,	-0.19,	-0.19,	8,	-0.05,	4.55,	-0.48,	0.1,	0.75,	4.6,	27.5,	0.946,	1.29,	0.83,	8.5,	0.73,	-0.4,	14.53,	-0.06,	0,	87,	10.67,	14.6,	7.62,	12.28,	2.63,	0.23,	12.97,	-0.5,	4.32,	6.61,	8.63,	5.15,	0.5,	2.1,	-2.89,	2.36,	6.05,	0.52,	0.74,	1.94,	-0.67,	-0.5,	1.1,	1,	-0.1,	0.5,	6.5,	-0.67,	0.159,	0.507,	1.4,	1.2,	1,	1.29,	3.7,	0.82,	-0.491,	-0.22,	8.1,	0.93,	9.9,	0.99,	17.05,	1.3,	0.52,	7,	0.94,	1,	0,	6.7,	6,	0.33,	1.6,	1.16,	0.46,	9.9,	0.305,	9.36,	49.1,	2.34,	0.3,	27.8,	51,	15,	1.7,	0.328,	0.15,	0.09,	-12.04,	0.937,	0.03731,	-0.29,	1.29,	1.42,	10.04,	18.08,	18.56,	-0.07,	0.4,	13.65,	-1.895,	1.8,	0]
    letterDict["R"] = [0.6,	-14.92,	0,	0.72,	0.529,	0.2,	0.45,	-70,	-68,	-0.12,	-3.6,	3.2,	-0.24,	-0.09,	-0.52,	-0.7,	-0.42,	90,	0.01,	0,	0.59,	0.38,	-1.76,	-0.96,	1.82,	-1.01,	10,	0.04,	4,	3,	1,	238,	0,	0.7,	1.7,	1.7,	-2.1,	1,	2.78,	0.85,	1.038,	0.65,	0.962,	-0.13,	0.02,	0.02,	0.17,	0.03,	0.1,	0.06,	5.97,	-0.06,	1.91,	0.75,	6.5,	105,	1.028,	0.44,	0.83,	0,	0.73,	-0.59,	17.82,	-0.84,	0,	81,	11.05,	13.24,	6.81,	11.49,	2.45,	-0.26,	11.72,	3,	6.55,	0.41,	6.75,	4.38,	0,	4.2,	-3.3,	1.92,	5.7,	-1.32,	0.64,	-19.92,	3.89,	3,	-0.4,	-2,	-4.5,	0.8,	-0.9,	12.1,	0.194,	0.459,	1.2,	0.7,	0.4,	0.96,	2.53,	0.99,	-0.554,	-0.93,	10.5,	0.98,	4.6,	1.19,	21.25,	0.8,	0.49,	9.1,	1.09,	2.3,	1,	0.3,	10.76,	-0.176,	0.9,	1.72,	-1.54,	0.09,	0.227,	0.27,	133,	1.18,	-1.4,	94.7,	5,	67,	0.1,	2.088,	-0.37,	-3.44,	39.23,	1.725,	0.09593,	-2.71,	-13.6,	-18.6,	6.18,	0,	0,	-0.4,	0.3,	11.28,	-1.475,	-4.5,	52]
    letterDict["N"] = [0.06,	-6.64,	6.2,	0.55,	0.463,	0.23,	0.27,	-74,	-72,	0.08,	-5.7,	-2.8,	-0.2,	-0.7,	-0.9,	-0.9,	-0.77,	63,	0.12,	0.03,	0.51,	0.59,	-0.64,	-0.86,	2.02,	-0.6,	1.3,	0.06,	2,	3,	0,	236,	0,	1.7,	1.2,	1,	-0.6,	1,	0.92,	0.09,	1.117,	1.33,	0.986,	0.28,	0.41,	0.1,	-0.38,	0.02,	0.1,	0,	5.56,	-0.87,	0.48,	0.69,	5.9,	58.7,	1.006,	0.81,	0.09,	8.2,	-0.01,	-0.92,	13.59,	-0.48,	0,	70,	10.85,	11.79,	6.17,	11,	2.27,	-0.94,	11.42,	0.2,	6.24,	1.84,	4.18,	4.81,	0,	7,	-3.41,	1.7,	5.04,	-0.01,	0.63,	-9.68,	2.27,	0.2,	-4.2,	-3,	-1.6,	0.8,	-5.1,	7.23,	0.385,	0.287,	1.2,	0.7,	0.7,	0.9,	2.12,	1.27,	-0.382,	-2.65,	11.6,	0.98,	5.4,	1.15,	34.81,	0.6,	0.42,	10,	1.04,	2.2,	0,	-6.1,	5.41,	-0.233,	0.7,	1.97,	1.31,	0.94,	0.322,	2.31,	-3.6,	2.02,	-0.5,	60.1,	22,	49,	0.4,	1.498,	0.69,	0.84,	4.25,	1.08,	0.00359,	-1.18,	-6.63,	-9.67,	5.63,	17.47,	18.24,	-0.57,	0.9,	12.24,	-1.56,	-3.5,	3.38]
    letterDict["D"] = [0.46,	-8.72,	7,	0.65,	0.511,	0.05,	0.14,	-78,	-91,	-0.2,	-2.9,	-2.8,	-1.52,	-0.71,	-1.09,	-1.05,	-1.04,	50,	0.15,	0.04,	0.23,	0.27,	-0.72,	-0.98,	1.88,	-0.77,	1.9,	0.15,	1,	4,	0,	270,	1,	3.2,	0.7,	0.7,	-1.2,	0,	1.77,	0.66,	1.033,	1.38,	0.994,	0.05,	-0.09,	0.24,	0.09,	-0.06,	70,	0.15,	2.85,	-0.75,	0.78,	0,	5.7,	40,	1.089,	2.02,	0.64,	8.5,	0.54,	-1.31,	19.78,	-0.8,	0,	71,	10.21,	13.78,	6.18,	10.97,	2.29,	-1.13,	10.85,	3,	6.04,	0.59,	6.24,	5.75,	0,	10,	-3.38,	1.67,	4.95,	0,	0.62,	-10.95,	1.57,	2.5,	-1.6,	-0.5,	-2.8,	-8.2,	0.5,	8.72,	0.283,	0.223,	0.6,	0.8,	2.2,	1.04,	2.6,	0.98,	-0.356,	-4.12,	13,	1.01,	2.8,	1.18,	19.27,	0.5,	0.37,	13,	1.08,	6.5,	-1,	-3.1,	2.77,	-0.371,	2.6,	2.66,	-0.33,	0.35,	0.335,	0.94,	0,	2.01,	-0.6,	60.6,	19,	50,	0.4,	3.379,	-0.22,	2.36,	23.22,	1.64,	0.1263,	-1.02,	0,	0,	5.76,	17.36,	17.94,	-0.8,	0.8,	10.98,	-1.518,	-3.5,	49.7]
    letterDict["C"] = [1.07,	1.28,	8.3,	0.65,	0.346,	1.89,	1.23,	168,	90,	-0.45,	-9.2,	-14.3,	0.79,	0.76,	0.7,	1.24,	0.77,	19,	0.45,	0.22,	1.8,	1.6,	0.04,	0.76,	1.92,	1.54,	0.17,	0.12,	0,	0,	0,	178,	0,	1,	1,	1,	0.38,	1,	1.44,	1.52,	0.96,	2.75,	0.9,	-0.26,	-0.27,	-0.19,	0.41,	-0.29,	26,	0.3,	-0.78,	-0.32,	-1.42,	1,	-1,	44.6,	0.878,	0.66,	1.48,	11,	0.7,	0.17,	30.57,	1.36,	0,	104,	14.15,	15.9,	10.93,	14.93,	3.36,	1.78,	14.63,	-1,	1.73,	0.83,	1.03,	3.24,	0,	1.4,	-2.49,	3.36,	7.86,	0,	0.91,	-1.24,	-2,	-1,	7.1,	4.6,	-2.2,	-6.8,	-1.3,	-0.34,	0.187,	0.592,	1.6,	0.8,	0.6,	1.11,	3.03,	0.71,	-0.67,	4.66,	5.5,	0.88,	2.8,	2.32,	28.84,	0.7,	0.83,	5.5,	0.84,	0.1,	0,	-4.9,	5.05,	0.074,	1.2,	0.5,	0.2,	2.55,	0.339,	2.56,	0,	1.65,	0.9,	15.5,	74,	5,	4.6,	0,	-0.19,	4.13,	3.95,	1.004,	0.08292,	0,	0,	0,	8.89,	18.17,	17.84,	0.17,	0.5,	14.49,	-2.035,	2.5,	1.48]
    letterDict["Q"] = [0,	-5.54,	8.5,	0.72,	0.493,	0.72,	0.51,	-73,	-117,	0.16,	-0.3,	1.8,	-0.99,	-0.4,	-1.05,	-1.2,	-1.1,	71,	0.07,	0.01,	0.39,	0.39,	-0.69,	-1,	2.17,	-0.22,	1.9,	0.05,	2,	3,	0,	185,	0,	1,	1,	1,	-0.22,	1,	0.79,	0,	1.165,	0.89,	1.047,	0.21,	0.01,	-0.04,	0.04,	0.02,	33,	-0.08,	4.15,	-0.32,	0.95,	0.59,	6.1,	80.7,	1.025,	1.22,	0,	6.3,	-0.1,	-0.91,	22.18,	-0.73,	0,	66,	11.71,	12.02,	6.67,	11.28,	2.45,	-0.57,	11.76,	0.2,	6.13,	1.2,	4.76,	4.45,	0,	6,	-3.15,	1.75,	5.45,	-0.07,	0.62,	-9.38,	2.12,	0.2,	-2.9,	-2,	-2.5,	-4.8,	1,	6.39,	0.236,	0.383,	1.4,	0.7,	1.5,	1.27,	2.7,	1.01,	-0.405,	-2.76,	10.5,	1.02,	9,	1.52,	15.42,	0.2,	0.35,	8.6,	1.11,	2.1,	0,	0.6,	5.65,	-0.254,	0.8,	3.87,	-1.12,	0.87,	0.306,	1.14,	20,	2.17,	-0.7,	68.7,	16,	56,	0.3,	0,	-0.06,	-1.14,	2.16,	1.078,	0.07606,	-1.53,	-5.47,	-9.31,	5.41,	17.93,	18.51,	-0.26,	0.7,	11.3,	-1.521,	-3.5,	3.53]
    letterDict["E"] = [0.47,	-6.81,	4.9,	0.55,	0.497,	0.11,	0.23,	-106,	-139,	-0.3,	-7.1,	-7.5,	-0.8,	-1.31,	-0.83,	-1.19,	-1.14,	49,	0.18,	0.03,	0.19,	0.23,	-0.62,	-0.89,	2.1,	-0.64,	3,	0.07,	1,	4,	0,	249,	1,	1.7,	0.7,	0.7,	-0.76,	0,	2.54,	0.67,	1.094,	0.92,	0.986,	-0.06,	0.09,	-0.04,	-0.2,	-0.1,	6,	-0.02,	5.16,	-0.71,	0.83,	0,	5.6,	62,	1.036,	2.44,	0.65,	8.8,	0.55,	-1.22,	18.19,	-0.77,	0,	72,	11.71,	13.59,	6.38,	11.19,	2.31,	-0.75,	11.89,	3,	6.17,	1.63,	7.82,	7.05,	0,	7.8,	-2.94,	1.74,	5.1,	-0.79,	0.62,	-10.2,	1.78,	2.5,	0.7,	1.1,	-7.5,	-16.9,	7.8,	7.35,	0.206,	0.445,	0.9,	2.2,	3.3,	1.44,	3.3,	0.54,	-0.371,	-3.64,	12.3,	1.02,	3.2,	1.36,	20.12,	0.7,	0.38,	12.5,	1.12,	6.2,	-1,	2.2,	3.22,	-0.409,	2,	2.4,	0.48,	0.08,	0.282,	0.94,	0,	2.19,	-0.7,	68.2,	16,	55,	0.3,	0,	0.14,	-0.07,	16.81,	0.679,	0.0058,	-0.9,	-6.02,	-9.45,	5.37,	18.16,	17.97,	-0.63,	1.3,	12.55,	-1.535,	-3.5,	49.9]
    letterDict["G"] = [0.07,	0.94,	6.4,	0.65,	0.544,	0.49,	0.62,	-13,	-8,	0,	-1.2,	-2.3,	-1,	-0.84,	-0.82,	-0.57,	-0.8,	23,	0.36,	0.18,	1.03,	1.08,	0.16,	0,	2.35,	0,	0,	0,	0,	0,	0,	290,	0,	1,	0.8,	1.5,	0,	0,	0.95,	0.1,	1.142,	0.74,	1.015,	0.23,	0.13,	0.17,	0.28,	0.19,	0.1,	-0.14,	9.14,	0,	0.33,	0,	7.6,	0,	1.042,	0.76,	0.1,	7.1,	0,	-0.67,	37.16,	-0.41,	0,	90,	10.95,	14.18,	7.31,	12.01,	2.55,	-0.07,	12.43,	0,	6.09,	4.88,	6.8,	6.38,	0,	5.7,	-3.25,	2.06,	6.16,	0,	0.72,	2.39,	0,	0,	-0.2,	0.2,	-0.5,	0,	-8.6,	0,	0.049,	0.39,	0.6,	0.3,	0.6,	0.56,	3.13,	0.94,	-0.534,	-1.62,	9,	1.01,	5.6,	1.4,	38.14,	0.5,	0.41,	7.9,	1.01,	1.1,	0,	-6.8,	5.97,	0.37,	0.9,	1.63,	0.64,	8.14,	0.352,	6.17,	64.6,	2.34,	0.3,	24.5,	52,	10,	1.8,	0.5,	0.36,	0.3,	-7.85,	0.901,	0.00499,	-0.34,	0.94,	2.39,	7.99,	18.24,	18.57,	0.27,	0,	15.36,	-1.898,	-0.4,	0]
    letterDict["H"] = [0.61,	-4.66,	9.2,	0.83,	0.323,	0.31,	0.29,	50,	47,	-0.12,	-2.1,	2,	1.07,	0.43,	0.16,	-0.25,	0.26,	43,	0.17,	0.02,	1,	1,	-0.4,	-0.75,	1.82,	0.13,	0.99,	0.08,	1,	1,	1,	277,	0,	1,	1.2,	1,	0.64,	1,	0,	0.87,	0.982,	0.58,	0.882,	0.24,	0.22,	0.19,	-0.19,	-0.16,	0.1,	-0.07,	4.48,	-0.51,	-0.5,	0,	4.5,	79,	0.952,	0.73,	1.1,	10.1,	1.1,	-0.64,	22.63,	0.49,	0,	90,	12.07,	15.35,	7.85,	12.84,	2.57,	0.11,	12.16,	-0.5,	5.66,	1.14,	2.7,	2.69,	0.5,	2.1,	-2.84,	2.41,	5.8,	0.95,	0.78,	-10.27,	1.09,	-0.5,	-0.7,	-2.2,	0.8,	-3.5,	1.2,	3.82,	0.233,	0.31,	0.9,	0.7,	0.7,	1.22,	3.57,	1.26,	-0.54,	1.28,	10.4,	0.89,	8.2,	1.06,	23.07,	1.9,	0.7,	8.4,	0.92,	2.8,	0,	-1,	7.59,	-0.078,	0.7,	0.86,	-1.31,	0.2,	0.215,	0.47,	75.7,	1.82,	-0.1,	50.7,	34,	34,	0.8,	1.204,	-0.25,	1.11,	6.28,	1.085,	0.02415,	-0.94,	-5.61,	-11.22,	7.49,	18.49,	18.64,	-0.49,	1,	11.59,	-1.755,	-3.2,	51.6]
    letterDict["I"] = [2.22,	4.92,	10,	0.98,	0.462,	1.45,	1.67,	151,	100,	-2.26,	6.6,	11,	0.76,	1.39,	2.17,	2.06,	1.81,	18,	0.6,	0.19,	1.27,	1.44,	0.73,	0.99,	2.36,	1.8,	1.2,	-0.01,	0,	0,	0,	284,	0,	0.6,	0.8,	1,	1.9,	0,	0.52,	3.15,	1.002,	0,	0.766,	-0.42,	-0.27,	-0.2,	-0.06,	-0.08,	55,	0.26,	2.1,	0.81,	-1.13,	2.95,	2.6,	93.5,	0.892,	0.67,	3.07,	16.8,	2.97,	1.25,	20.28,	1.31,	1,	105,	12.95,	14.1,	9.99,	14.77,	3.08,	1.19,	15.67,	-1.8,	2.31,	12.91,	3.48,	4.4,	1.8,	-8,	-1.72,	4.17,	7.51,	2.04,	0.88,	2.15,	-3.02,	-1.8,	8.5,	7,	11.8,	13.9,	0.6,	-3.02,	0.581,	0.111,	0.9,	0.9,	0.4,	0.97,	7.69,	1.67,	-0.762,	5.58,	5.2,	0.79,	17.1,	0.81,	16.66,	1.6,	0.79,	4.9,	0.76,	0.8,	0,	3.2,	6.02,	0.149,	0.7,	0.57,	3.28,	15.25,	0.278,	13.73,	18.9,	2.36,	0.7,	22.8,	66,	13,	3.1,	2.078,	0.02,	-1.03,	-18.32,	0.178,	0,	0.24,	2.88,	0.11,	8.72,	18.62,	19.21,	0.06,	0.4,	14.63,	-1.951,	4.5,	0.13]
    letterDict["L"] = [1.53,	4.92,	12.2,	0.83,	0.365,	3.23,	2.93,	145,	108,	-2.46,	20,	15,	1.29,	1.24,	1.18,	0.96,	1.14,	23,	0.45,	0.16,	1.38,	1.36,	0.53,	0.89,	2.36,	1.7,	1,	-0.01,	0,	0,	0,	337,	0,	1,	1,	1,	1.9,	0,	1.05,	2.17,	0.967,	0,	0.825,	-0.23,	-0.25,	-0.46,	0.34,	-0.42,	33,	0.04,	3.24,	1.02,	-1.18,	2.4,	3.25,	93.5,	0.961,	0.58,	2.52,	15,	2.49,	1.22,	14.3,	1.21,	1,	104,	13.07,	16.49,	9.37,	14.1,	2.98,	1.03,	14.9,	-1.8,	3.93,	21.66,	8.44,	8.11,	1.8,	-9.2,	-1.61,	3.93,	7.37,	1.76,	0.85,	2.28,	-3.02,	-1.8,	11,	9.6,	10,	8.8,	3.2,	-3.02,	0.083,	0.619,	1.1,	0.9,	0.6,	1.3,	5.88,	0.94,	-0.65,	5.01,	4.9,	0.85,	17.6,	1.26,	10.89,	1.4,	0.77,	4.9,	0.82,	0.8,	0,	5.5,	5.98,	0.129,	0.3,	0.51,	0.43,	22.28,	0.262,	16.64,	15.6,	2.36,	0.5,	27.6,	60,	16,	2.4,	0.414,	0.06,	-0.98,	-17.79,	0.808,	0,	-0.12,	3.16,	0.52,	8.79,	18.6,	19.01,	-0.17,	0.6,	14.01,	-1.966,	3.8,	0.13]
    letterDict["K"] = [1.15,	-5.55,	7.5,	0.55,	0.466,	0.06,	0.15,	-141,	-188,	-0.35,	-3.7,	-2.5,	-0.36,	-0.09,	-0.56,	-0.62,	-0.41,	97,	0.03,	0,	0.15,	0.33,	-1.1,	-0.99,	2.16,	-0.99,	5.7,	0,	2,	1,	1,	224,	0,	0.7,	1.7,	1.7,	-0.57,	1,	0.79,	1.64,	1.093,	0.33,	1.04,	0.03,	0.08,	-0.43,	-0.2,	-0.09,	1,	-0.42,	10.68,	-0.09,	1.4,	1.5,	7.9,	100,	1.082,	0.66,	1.6,	7.9,	1.5,	-0.67,	14.07,	-1.18,	0,	65,	9.93,	13.28,	5.72,	10.8,	2.12,	-1.05,	11.36,	3,	7.92,	1.15,	6.25,	5.25,	0,	5.7,	-3.31,	1.23,	4.88,	0.08,	0.52,	-9.52,	2.46,	3,	-1.9,	-3,	-3.2,	0.1,	2.3,	6.13,	0.159,	0.559,	1.9,	0.6,	0.8,	1.23,	1.79,	0.73,	-0.3,	-4.18,	11.3,	1.05,	3.5,	0.91,	16.46,	1,	0.31,	10.1,	1.23,	5.3,	1,	0.5,	9.74,	-0.075,	1,	3.9,	-1.71,	0.16,	0.391,	0.58,	0,	2.18,	-1.8,	103,	3,	85,	0.05,	0.835,	-0.16,	-3.14,	9.71,	1.254,	0.0371,	-2.05,	-5.63,	-9.6,	4.4,	17.96,	18.36,	-0.45,	0.4,	11.96,	-1.374,	-3.9,	49.5]
    letterDict["M"] = [1.18,	2.35,	8.4,	0.98,	0.295,	2.67,	2.96,	124,	121,	-1.47,	5.6,	4.1,	1.37,	1.27,	1.21,	0.6,	1,	31,	0.4,	0.11,	1.93,	1.52,	0.26,	0.94,	2.28,	1.23,	1.9,	0.04,	0,	0,	0,	283,	0,	1,	1,	1,	2.4,	1,	0,	1.67,	0.947,	0,	0.804,	-0.42,	-0.57,	-0.52,	0.45,	-0.38,	54,	0.25,	2.18,	0.81,	-1.59,	1.3,	1.4,	94.1,	0.862,	0.71,	1.4,	13.3,	1.3,	1.02,	20.61,	1.27,	0,	100,	15,	16.23,	9.83,	14.33,	3.18,	0.66,	14.39,	-1.3,	2.44,	7.17,	2.14,	1.6,	1.3,	-4.2,	-1.84,	4.22,	6.39,	1.32,	0.85,	-1.48,	-1.67,	-1.3,	5.4,	4,	7.1,	4.8,	5.3,	-1.3,	0.198,	0.431,	1.7,	0.3,	1,	1.47,	5.21,	1.3,	-0.659,	3.51,	5.7,	0.84,	14.9,	1,	20.61,	2.8,	0.76,	5.3,	0.83,	0.7,	0,	7.2,	5.74,	-0.092,	1,	0.4,	0.15,	1.85,	0.28,	3.93,	6.8,	2.28,	0.4,	33.5,	52,	20,	1.9,	0.982,	0.11,	-0.41,	-8.86,	0.886,	0.08226,	-0.24,	1.03,	-2.8,	9.15,	18.11,	18.49,	0.03,	0.3,	13.4,	-1.963,	1.9,	1.43]
    letterDict["F"] = [2.02,	2.98,	8.3,	0.98,	0.314,	1.96,	2.03,	189,	148,	-2.33,	19.2,	14.7,	1.48,	1.53,	1.01,	1.29,	1.35,	24,	0.5,	0.14,	1.42,	1.46,	0.61,	0.92,	2.16,	1.79,	1.1,	0.03,	0,	0,	0,	284,	0,	1,	1,	1,	2.3,	1,	0.43,	2.87,	0.93,	0,	0.773,	-0.18,	-0.12,	-0.33,	0.07,	-0.32,	18,	0.09,	4.37,	1.03,	-2.12,	2.65,	3.2,	115.5,	0.912,	0.61,	2.75,	11.2,	2.65,	1.92,	19.61,	1.27,	1,	108,	13.27,	14.18,	8.99,	13.43,	3.02,	0.48,	14,	-2.5,	2.59,	7.76,	2.73,	3.52,	2.5,	-9.2,	-1.63,	4.37,	6.62,	2.09,	0.88,	-0.76,	-3.24,	-2.5,	13.4,	12.6,	13.9,	13.2,	1.6,	-3.24,	0.682,	0.077,	1,	0.5,	0.6,	1.07,	6.6,	1.56,	-0.729,	5.27,	5.2,	0.78,	18.8,	1.25,	16.26,	2.9,	0.87,	5,	0.73,	1.4,	0,	2.8,	5.48,	-0.011,	0.9,	0.43,	0.52,	6.47,	0.195,	10.99,	54.7,	1.83,	0.5,	25.5,	58,	10,	2.2,	1.336,	1.18,	0.45,	-21.98,	0.803,	0.0946,	0,	0.89,	-2.85,	7.98,	17.3,	17.95,	0.4,	0.7,	14.08,	-1.864,	2.8,	0.35]
    letterDict["P"] = [1.95,	0,	6.9,	0.55,	0.509,	0.76,	0.76,	-20,	-36,	-0.98,	5.1,	5.6,	-0.12,	-0.01,	-0.06,	-0.21,	-0.09,	50,	0.18,	0.04,	0.27,	0.54,	-0.07,	0.22,	1.95,	0.72,	0.18,	0,	0,	0,	0,	222,	0,	1,	1,	0.1,	1.2,	0,	0.37,	2.77,	1.055,	0.39,	1.047,	-0.13,	0.26,	0.37,	0.04,	0.05,	42,	0.31,	5.14,	2.03,	0.73,	2.6,	7,	41.9,	1.085,	2.01,	2.7,	8.2,	2.6,	-0.49,	52.63,	0,	0,	78,	10.62,	14.1,	6.64,	11.19,	2.46,	-0.76,	11.37,	0,	7.19,	3.51,	6.28,	5.65,	0,	2.1,	-2.5,	1.89,	5.65,	0,	0.64,	-3.68,	-1.75,	-1.4,	4.4,	3.1,	8,	6.1,	-7.7,	-1.75,	0.366,	0.739,	0.3,	2.6,	0.4,	0.52,	2.12,	0.69,	-0.463,	-3.03,	8,	1,	14.8,	0,	23.94,	0,	0.35,	6.6,	1.04,	0.9,	0,	-22.8,	6.3,	0.37,	0.5,	2.04,	-0.58,	2.38,	0.346,	1.96,	43.8,	1.99,	-0.3,	51.5,	25,	45,	0.6,	0.415,	0.11,	2.23,	5.82,	0.748,	0.01979,	0,	0,	0,	7.79,	18.16,	18.77,	-0.47,	0.9,	11.51,	-1.699,	-1.6,	1.58]
    letterDict["S"] = [0.05,	-3.4,	8,	0.55,	0.507,	0.97,	0.81,	-70,	-60,	-0.39,	-4.1,	-3.5,	-0.98,	-0.93,	-0.6,	-0.83,	-0.97,	44,	0.22,	0.08,	0.96,	0.98,	-0.26,	-0.67,	2.19,	-0.04,	0.73,	0.11,	1,	2,	0,	228,	0,	1.7,	1.5,	1,	0.01,	0,	0.87,	0.07,	1.169,	1.42,	1.056,	0.41,	0.44,	0.43,	-0.23,	0.25,	0.1,	-0.11,	6.78,	0.05,	0.52,	0,	5.25,	29.3,	1.048,	0.74,	0.14,	7.4,	0.04,	-0.55,	18.56,	-0.5,	0,	83,	11.18,	13.36,	6.93,	11.26,	2.6,	-0.67,	11.23,	0.3,	5.37,	6.84,	8.53,	8.04,	0,	6.5,	-3.3,	1.81,	5.53,	0.04,	0.66,	-5.06,	0.1,	0.3,	-3.2,	-2.9,	-3.7,	1.2,	-3.9,	4.35,	0.15,	0.689,	1.1,	0.7,	0.4,	0.82,	2.43,	0.65,	-0.455,	-2.84,	9.2,	1.02,	6.9,	1.5,	19.95,	0.5,	0.49,	7.5,	1.04,	1.7,	0,	-3,	5.68,	0.022,	0.8,	1.61,	-0.83,	4.17,	0.326,	5.58,	44.4,	2.21,	-0.1,	42,	35,	32,	0.8,	1.089,	0.13,	0.57,	-1.54,	1.145,	0.08292,	-0.75,	-3.44,	-5.1,	7.08,	17.57,	18.06,	-0.11,	0.4,	11.26,	-1.753,	-0.8,	1.67]
    letterDict["T"] = [0.05,	-2.57,	7,	0.83,	0.444,	0.84,	0.91,	-38,	-54,	-0.52,	0.8,	1.1,	-0.7,	-0.59,	-1.2,	-0.62,	-0.77,	47,	0.23,	0.08,	1.11,	1.01,	-0.18,	0.09,	2.09,	0.26,	1.5,	0.04,	1,	2,	0,	253,	0,	1.7,	1,	1,	0.52,	0,	1.14,	0.07,	1.073,	0.71,	1.008,	0.33,	0.35,	0.5,	-0.02,	0.22,	0.1,	-0.06,	8.6,	-0.35,	0.07,	0.45,	4.8,	51.3,	1.051,	1.08,	0.54,	8.8,	0.44,	-0.28,	21.09,	-0.27,	0,	83,	10.53,	14.5,	7.08,	11.65,	2.55,	-0.36,	11.69,	-0.4,	5.16,	8.89,	4.43,	7.41,	0.4,	5.2,	-2.91,	2.04,	5.81,	0.27,	0.7,	-4.88,	-0.42,	-0.4,	-1.7,	-0.6,	1.5,	2.7,	-2.6,	3.86,	0.074,	0.785,	0.6,	0.8,	1,	0.82,	2.6,	0.98,	-0.515,	-1.2,	8.6,	0.99,	9.5,	1.18,	18.92,	0.6,	0.38,	6.6,	1.02,	1.5,	0,	-4,	5.66,	0.136,	0.7,	1.48,	-1.52,	4.33,	0.251,	4.68,	31,	2.1,	-0.2,	45,	30,	32,	0.7,	1.732,	0.28,	-1.4,	-4.15,	1.487,	0.09408,	-0.71,	-2.84,	-5.15,	7,	17.54,	17.71,	0.09,	0.4,	13,	-1.767,	-0.7,	1.66]
    letterDict["W"] = [2.65,	2.33,	5.7,	0.77,	0.305,	0.77,	1.08,	145,	163,	-2.01,	16.3,	17.8,	1.38,	2.25,	1.31,	1.51,	1.71,	32,	0.27,	0.04,	0.91,	1.06,	0.37,	0.67,	2.43,	2.25,	1.6,	0,	1,	0,	0,	282,	0,	1,	1,	1,	2.6,	1,	1.79,	3.77,	0.925,	0.13,	0.848,	-0.1,	-0.15,	-0.32,	0.16,	-0.19,	77,	0.19,	1.97,	0.66,	-0.51,	3,	4,	145.5,	0.917,	1.47,	0.31,	9.9,	3,	0.5,	19.78,	0.88,	1,	94,	11.41,	13.9,	8.41,	12.95,	2.85,	0.9,	13.93,	-3.4,	2.78,	2.11,	0.8,	1.68,	3.4,	-10,	-1.75,	3.82,	6.98,	2.51,	0.85,	-5.88,	-2.86,	-3.4,	17.1,	15.1,	18.1,	14.9,	1.2,	-2.86,	0.463,	0.16,	1.4,	2.1,	1.4,	0.99,	6.25,	1.25,	-0.839,	5.2,	5.4,	0.83,	17.1,	1.33,	23.36,	2.1,	0.86,	5.3,	0.87,	1.9,	0,	4,	5.89,	-0.011,	1.7,	0.75,	1.25,	2.21,	0.291,	2.2,	70.5,	2.38,	0.3,	34.7,	49,	17,	1.6,	1.781,	-0.12,	0.85,	-16.19,	0.803,	0.05481,	-0.59,	-0.18,	-8.39,	8.07,	17.19,	16.87,	-0.61,	0.6,	12.06,	-1.869,	-0.9,	2.1]
    letterDict["Y"] = [1.88,	-0.14,	6.8,	0.83,	0.42,	0.39,	0.68,	53,	22,	-2.24,	5.9,	3.8,	1.49,	1.53,	1.05,	0.66,	1.11,	60,	0.15,	0.03,	1.1,	0.89,	0.02,	-0.93,	2.2,	0.96,	1.8,	0.03,	1,	2,	0,	344,	0,	1,	1,	1,	1.6,	1,	0.73,	2.67,	0.961,	0.2,	0.931,	-0.1,	0.15,	0.35,	0.22,	0.05,	66,	0.33,	2.4,	1.24,	-0.21,	2.85,	4.35,	117.3,	0.93,	0.68,	2.97,	8.8,	2.97,	1.67,	26.36,	0.33,	1,	83,	11.52,	14.76,	8.53,	13.29,	2.79,	0.59,	13.42,	-2.3,	3.58,	2.57,	2.54,	3.42,	2.3,	-1.9,	-2.42,	2.91,	6.73,	1.63,	0.76,	-6.11,	0.98,	-2.3,	7.4,	6.7,	8.2,	6.1,	-4.5,	0.98,	0.737,	0.06,	0.2,	1.8,	1.2,	0.72,	3.03,	1.26,	-0.656,	2.15,	6.2,	0.93,	15,	1.09,	26.49,	0.8,	0.64,	5.7,	1.03,	2.1,	0,	-4.6,	5.66,	-0.138,	0.4,	1.72,	-2.21,	3.42,	0.293,	3.13,	0,	2.2,	-0.4,	55.2,	24,	41,	0.5,	0,	0.19,	0.01,	-1.51,	1.227,	0.05159,	-1.02,	-1.77,	-7.74,	6.9,	17.99,	18.23,	-0.61,	1.2,	12.64,	-1.686,	-1.3,	1.61]
    letterDict["V"] = [1.32,	4.04,	9.4,	0.98,	0.386,	1.08,	1.14,	123,	117,	-1.56,	3.5,	2.1,	1.26,	1.09,	1.21,	1.21,	1.13,	18,	0.54,	0.18,	1.58,	1.33,	0.54,	0.84,	2.32,	1.22,	0.48,	0.01,	0,	0,	0,	293,	0,	0.6,	0.8,	1,	1.5,	0,	0,	1.87,	0.982,	0,	0.825,	-0.07,	-0.09,	0,	0.05,	-0.15,	0.1,	0.04,	3.81,	0.56,	-1.27,	1.7,	3.4,	71.5,	0.927,	0.61,	1.79,	12,	1.69,	0.91,	21.87,	1.09,	1,	94,	13.86,	16.3,	10.38,	15.07,	3.21,	1.24,	15.71,	-1.5,	3.31,	6.3,	5.44,	7,	1.5,	-3.7,	-2.08,	3.49,	7.62,	1.18,	0.86,	1.99,	-2.18,	-1.5,	5.9,	4.6,	3.3,	2.7,	1.4,	-2.18,	0.301,	0.356,	0.8,	1.1,	1.1,	0.91,	7.14,	1.22,	-0.728,	4.45,	5.9,	0.81,	14.3,	1.01,	17.06,	1.4,	0.72,	5.6,	0.81,	0.9,	0,	2.5,	5.96,	0.245,	0.6,	0.59,	0.54,	14.34,	0.291,	12.43,	29.5,	2.32,	0.6,	23.7,	64,	14,	2.9,	0.946,	-0.08,	-1.29,	-16.22,	0.625,	0.00569,	0.09,	2.86,	0.81,	8.88,	18.3,	18.98,	-0.11,	0.4,	12.88,	-1.981,	4.2,	0.13]
    AACategoryLen = 149

    probMatr = np.zeros((len(sampleSeq3DArr), 1, len(sampleSeq3DArr[0]), AACategoryLen))

    sampleNo = 0
    for sequence in sampleSeq3DArr:

        AANo	 = 0
        for AA in sequence:

            if not AA in letterDict:
                #probMatr[sampleNo][0][AANo] = np.full((1,AACategoryLen), 0)
                continue

            else:
                probMatr[sampleNo][0][AANo]= letterDict[AA]

            AANo += 1

        sampleNo += 1

    return probMatr

def convertSampleToAAindexClusterP(sampleSeq3DArr):
    '''
    Convertd the raw data to physico-chemical property(based on AAindex Cluster P)

    PARAMETER
    ---------
    sampleSeq3DArr: 3D numpy array
    	X denoted the unknow amino acid.

    probMatr: Probability Matrix for Samples. Shape (nb_samples, 1, nb_length_of_sequence, nb_AA)
    '''
    letterDict = {} # Total 46*20
    letterDict["A"] = [0.89,	0.28,	1.34,	-9.475,	0.025,	-7.02,	-0.11,	-0.152,	100,	100,	5.2,	4.34,	86.6,	11.5,	0.691,	52.6,	0,	1.52,	2.04,	1.28,	1,	89.09,	0.71,	91.5,	115,	0.75,	2.5,	-0.44,	-0.31,	-0.02,	88.3,	31,	0.28,	30.88,	154.33,	0.77,	0.77,	0,	0,	4.349,	4.35,	2.87,	-1.404,	0.13,	93.7,	0.07]
    letterDict["R"] = [0.88,	0.1,	0.95,	-16.225,	0.2,	-10.131,	0.079,	-0.089,	65,	83,	6,	26.66,	162.2,	14.28,	0.728,	109.1,	0,	1.52,	6.24,	2.34,	6.13,	174.2,	1.06,	202,	225,	0.7,	7.5,	-0.13,	-0.1,	0.04,	181.2,	124,	0.34,	68.43,	341.01,	3.72,	2.38,	1,	1,	4.396,	4.38,	7.82,	-0.921,	-5,	250.4,	2.88]
    letterDict["N"] = [0.89,	0.25,	2.49,	-12.48,	0.1,	-9.424,	-0.136,	-0.203,	134,	104,	5,	13.28,	103.3,	12.82,	0.596,	75.7,	1,	1.52,	4.37,	1.6,	2.95,	132.12,	1.37,	135.2,	160,	0.61,	5,	0.05,	0.06,	0.03,	125.1,	56,	0.31,	41.7,	207.9,	1.98,	1.45,	1,	1,	4.755,	4.75,	4.58,	-1.178,	-3.04,	146.3,	3.22]
    letterDict["D"] = [0.87,	0.21,	3.32,	-12.144,	0.1,	-9.296,	-0.285,	-0.355,	106,	86,	5,	12,	97.8,	11.68,	0.558,	68.4,	1,	1.52,	3.78,	1.6,	2.78,	133.1,	1.21,	124.5,	150,	0.6,	2.5,	-0.2,	0.13,	0.11,	110.8,	54,	0.33,	40.66,	194.91,	1.99,	1.43,	1,	1,	4.765,	4.76,	4.74,	-1.162,	-2.23,	142.6,	3.64]
    letterDict["C"] = [0.85,	0.28,	1.07,	-12.21,	0.1,	-8.19,	-0.184,	0,	20,	44,	6.1,	35.77,	132.3,	13.46,	0.624,	68.3,	0,	1.52,	3.41,	1.77,	2.43,	121.15,	1.19,	117.7,	135,	0.61,	3,	0.13,	-0.11,	-0.02,	112.4,	55,	0.11,	53.83,	219.79,	1.38,	1.22,	1,	0,	4.686,	4.65,	4.47,	-1.365,	-2.52,	135.2,	0.71]
    letterDict["Q"] = [0.82,	0.35,	1.49,	-13.689,	0.1,	-10.044,	-0.067,	-0.181,	93,	84,	6,	17.56,	119.2,	14.45,	0.649,	89.7,	0,	1.52,	3.53,	1.56,	3.95,	146.15,	0.87,	161.1,	180,	0.67,	6,	-0.58,	-0.47,	-0.17,	148.7,	85,	0.39,	46.62,	235.51,	2.58,	1.75,	1,	1,	4.373,	4.37,	6.11,	-1.116,	-3.84,	177.7,	2.18]
    letterDict["E"] = [0.84,	0.33,	2.2,	-13.815,	0.1,	-10.467,	-0.246,	-0.411,	102,	77,	6,	17.26,	113.9,	13.57,	0.632,	84.7,	1,	1.52,	3.31,	1.56,	3.78,	147.13,	0.84,	155.1,	190,	0.66,	5,	-0.28,	-0.05,	0.1,	140.5,	83,	0.37,	44.98,	223.16,	2.63,	1.77,	1,	1,	4.295,	4.29,	5.97,	-1.163,	-3.43,	182.9,	3.08]
    letterDict["G"] = [0.92,	0.17,	2.07,	-7.592,	0.025,	-5.456,	-0.073,	-0.19,	49,	50,	4.2,	0,	62.9,	3.4,	0.592,	36.3,	1,	1,	1,	0,	0,	75.07,	1.52,	66.4,	75,	0.64,	0.5,	0.08,	0.45,	0.38,	60,	3,	0.28,	24.74,	127.9,	0,	0.58,	0,	0,	3.972,	3.97,	2.06,	-1.364,	1.45,	52.6,	2.23]
    letterDict["H"] = [0.83,	0.21,	1.27,	-17.55,	0.1,	-12.15,	0.32,	0,	66,	91,	6,	21.81,	155.8,	13.69,	0.646,	91.9,	0,	1.52,	5.66,	2.99,	4.66,	155.16,	1.07,	167.3,	195,	0.67,	6,	0.09,	-0.06,	-0.09,	152.6,	96,	0.23,	65.99,	242.54,	2.76,	1.78,	1,	1,	4.63,	4.63,	5.23,	-1.215,	-5.61,	188.1,	2.41]
    letterDict["I"] = [0.76,	0.82,	0.66,	-15.608,	0.19,	-9.512,	0.001,	-0.086,	96,	103,	7,	19.06,	158,	21.4,	0.809,	102,	0,	1.9,	3.49,	4.19,	4,	131.17,	0.66,	168.8,	175,	0.9,	5.5,	-0.04,	-0.25,	-0.48,	168.5,	111,	0.12,	49.71,	233.21,	1.83,	1.56,	2,	1,	4.224,	3.95,	4.92,	-1.189,	-2.77,	182.2,	-4.44]
    letterDict["L"] = [0.73,	1,	0.54,	-15.728,	0.19,	-10.52,	-0.008,	-0.102,	40,	54,	7,	18.78,	164.1,	21.4,	0.842,	102,	0,	1.52,	4.45,	2.59,	4,	131.17,	0.69,	167.9,	170,	0.9,	5.5,	-0.12,	-0.44,	-0.26,	168.5,	111,	0.16,	50.62,	232.3,	2.08,	1.54,	1,	2,	4.385,	4.17,	4.92,	-1.315,	-2.64,	173.7,	-4.19]
    letterDict["K"] = [0.97,	0.09,	0.61,	-12.366,	0.2,	-9.666,	0.049,	-0.062,	56,	72,	6,	21.29,	115.5,	15.71,	0.767,	105.1,	0,	1.52,	4.87,	1.89,	4.77,	146.19,	0.99,	171.3,	200,	0.82,	7,	-0.33,	-0.44,	-0.39,	175.6,	119,	0.59,	63.21,	300.46,	2.94,	2.08,	1,	1,	4.358,	4.36,	6.89,	-1.074,	-3.97,	215.2,	2.84]
    letterDict["M"] = [0.74,	0.74,	0.7,	-15.704,	0.19,	-10.424,	-0.041,	-0.107,	94,	93,	6.8,	21.64,	172.9,	16.25,	0.709,	97.7,	0,	1.52,	4.8,	2.35,	4.43,	149.21,	0.59,	170.8,	185,	0.75,	6,	-0.21,	-0.28,	-0.14,	162.2,	105,	0.08,	55.32,	202.65,	2.34,	1.8,	1,	1,	4.513,	4.52,	6.36,	-1.303,	-3.83,	197.6,	-2.49]
    letterDict["F"] = [0.52,	2.18,	0.8,	-20.504,	0.39,	-12.485,	0.438,	0.001,	41,	51,	7.1,	29.4,	194.1,	19.8,	0.756,	113.9,	0,	1.52,	6.02,	2.94,	5.89,	165.19,	0.71,	203.4,	210,	0.77,	6.5,	-0.13,	-0.04,	-0.03,	189,	132,	0.1,	51.06,	204.74,	2.97,	1.9,	1,	1,	4.663,	4.66,	4.62,	-1.135,	-3.74,	228.6,	-4.92]
    letterDict["P"] = [0.82,	0.39,	2.12,	-11.893,	0.17,	-8.652,	-0.016,	-0.181,	56,	58,	6.2,	10.93,	92.9,	17.43,	0.73,	73.6,	0,	1.52,	4.31,	2.67,	2.72,	115.13,	1.61,	129.3,	145,	0.76,	5.5,	-0.48,	-0.29,	-0.04,	122.2,	32.5,	0.46,	39.21,	179.93,	1.42,	1.25,	0,	0,	4.471,	4.44,	4.11,	-1.236,	0,	0,	-1.22]
    letterDict["S"] = [0.96,	0.12,	0.94,	-10.518,	0.025,	-7.782,	-0.153,	-0.203,	120,	117,	4.9,	6.35,	85.6,	9.47,	0.594,	54.9,	0,	1.52,	2.7,	1.31,	1.6,	105.09,	1.34,	99.1,	115,	0.68,	3,	0.27,	0.34,	0.41,	88.7,	32,	0.27,	35.65,	174.06,	1.28,	1.08,	1,	0,	4.498,	4.5,	3.97,	-1.297,	-1.66,	109.5,	1.96]
    letterDict["T"] = [0.92,	0.21,	1.09,	-12.369,	0.1,	-8.764,	-0.208,	-0.17,	97,	107,	5,	11.01,	106.5,	15.77,	0.655,	71.2,	0,	1.73,	3.17,	3.03,	2.6,	119.12,	1.08,	122.1,	140,	0.7,	5,	0.47,	0.27,	0.36,	118.2,	61,	0.26,	36.5,	205.8,	1.43,	1.24,	2,	0,	4.346,	4.35,	4.11,	-1.252,	-2.31,	142.1,	0.92]
    letterDict["W"] = [0.2,	5.7,	-4.65,	-26.166,	0.56,	-14.42,	0.493,	0.275,	18,	25,	7.6,	42.53,	224.6,	21.67,	0.743,	135.4,	0,	1.52,	5.9,	3.21,	8.08,	204.24,	0.76,	237.6,	255,	0.74,	7,	-0.22,	-0.08,	-0.01,	227,	170,	0.15,	60,	237.01,	3.58,	2.21,	1,	1,	4.702,	4.7,	7.68,	-1.03,	-8.21,	271.6,	-4.75]
    letterDict["Y"] = [0.49,	1.26,	-0.17,	-20.232,	0.39,	-12.36,	0.381,	0,	41,	50,	7.1,	31.53,	177.7,	18.03,	0.743,	116.2,	0,	1.52,	6.72,	2.94,	6.47,	181.19,	1.07,	203.6,	230,	0.71,	7,	-0.11,	0.06,	-0.08,	193,	136,	0.25,	51.15,	229.15,	3.36,	2.13,	1,	1,	4.604,	4.6,	4.73,	-1.03,	-5.97,	239.9,	-1.39]
    letterDict["V"] = [0.85,	0.6,	1.32,	-13.867,	0.15,	-8.778,	-0.155,	-0.125,	74,	98,	6.4,	13.92,	141,	21.57,	0.777,	85.1,	0,	1.9,	3.17,	3.67,	3,	117.15,	0.63,	141.7,	155,	0.86,	5,	0.06,	0.11,	-0.18,	141.4,	84,	0.22,	42.75,	207.6,	1.49,	1.29,	2,	0,	4.184,	3.95,	4.11,	-1.254,	-2.05,	157.2,	-2.69]
    AACategoryLen = 46

    probMatr = np.zeros((len(sampleSeq3DArr), 1, len(sampleSeq3DArr[0]), AACategoryLen))

    sampleNo = 0
    for sequence in sampleSeq3DArr:

        AANo = 0
        for AA in sequence:

            if not AA in letterDict:
                #probMatr[sampleNo][0][AANo] = np.full((1,AACategoryLen), 0)
                continue

            else:
                probMatr[sampleNo][0][AANo] = letterDict[AA]

            AANo += 1

        sampleNo += 1

    return probMatr

def convertSampleToAAindexClusterO(sampleSeq3DArr):
    '''
    Convertd the raw data to physico-chemical property(based on AAindex Cluster O)

    PARAMETER
    ---------
    sampleSeq3DArr: 3D numpy array
    	X denoted the unknow amino acid.

    probMatr: Probability Matrix for Samples. Shape (nb_samples, 1, nb_length_of_sequence, nb_AA)
    '''

    letterDict = {} # Total 28*20
    letterDict["A"] = [0.78,	0.497,	0.941,	0.035,	0.35,	0.7,	0.5,	0.16,	0.7,	0.7,	0.3,	0.82,	0.64,	0.47,	0.17,	1.13,	0.289,	0.945,	1.02,	0.8,	7.3,	121.9,	243.2,	0.9,	0.78,	-0.118,	0.52,	0.53]
    letterDict["R"] = [1.75,	0.677,	1.112,	0.099,	0.75,	0.34,	0.4,	-0.2,	0.4,	0.4,	0.9,	2.6,	0.62,	0.52,	0.76,	0.48,	1.38,	0.364,	1,	0.9,	11.1,	121.4,	206.6,	0.99,	0.88,	0.124,	0.68,	0.69]
    letterDict["N"] = [1.32,	2.072,	1.038,	0.191,	2.12,	1.42,	3.5,	1.03,	1.2,	1.2,	2.73,	2.07,	3.14,	2.16,	2.62,	1.11,	3.169,	1.202,	1.31,	1.6,	8,	117.5,	207.1,	0.76,	1.28,	0.289,	0.76,	0.58]
    letterDict["D"] = [1.25,	1.498,	1.071,	0.179,	2.16,	0.98,	2.1,	-0.24,	1.4,	1.4,	1.26,	2.64,	1.92,	1.15,	1.08,	1.18,	0.917,	1.315,	1.76,	0.7,	9.2,	121.2,	215,	0.72,	1.41,	0.048,	0.76,	0.59]
    letterDict["C"] = [3.14,	1.348,	0.866,	0.117,	0.5,	0.65,	0.6,	-0.12,	0.6,	0.6,	0.72,	0,	0.32,	0.41,	0.95,	0.38,	1.767,	0.932,	1.05,	0.4,	14.4,	113.7,	209.4,	0.74,	0.8,	0.083,	0.62,	0.66]
    letterDict["Q"] = [0.93,	0.711,	1.15,	0.037,	0.73,	0.75,	0.4,	-0.55,	1,	1,	0.97,	0,	0.8,	0.95,	0.91,	0.41,	2.372,	0.704,	1.05,	0.9,	10.6,	118,	205.4,	0.8,	0.97,	-0.105,	0.68,	0.71]
    letterDict["E"] = [0.94,	0.651,	1.1,	0.077,	0.65,	1.04,	0.4,	-0.45,	1,	1,	1.33,	2.62,	1.01,	0.64,	0.28,	1.02,	0.285,	1.014,	0.83,	0.3,	11.4,	118.2,	213.6,	0.75,	1,	-0.245,	0.68,	0.72]
    letterDict["G"] = [1.13,	1.848,	1.055,	0.19,	2.4,	1.41,	1.8,	-0.16,	1.6,	1.6,	3.09,	1.63,	0.63,	3.03,	5.02,	3.84,	4.259,	2.355,	2.39,	3.9,	0,	0,	300,	0.92,	1.64,	0.104,	0,	0]
    letterDict["H"] = [1.03,	1.474,	0.911,	0.093,	1.19,	1.22,	1.1,	-0.18,	1.2,	1.2,	1.33,	0,	2.05,	0.89,	0.57,	0.3,	1.061,	0.525,	0.4,	1.3,	10.2,	118.2,	219.9,	1.08,	0.69,	0.138,	0.7,	0.64]
    letterDict["I"] = [1.26,	0.471,	0.742,	0.013,	0.12,	0.78,	0.2,	-0.19,	0.9,	0.9,	0.45,	2.32,	0.92,	0.62,	0.26,	0.4,	0.262,	0.673,	0.83,	0.7,	16.1,	118.9,	217.9,	1.45,	0.51,	0.23,	1.02,	0.96]
    letterDict["L"] = [0.91,	0.656,	0.798,	0.036,	0.58,	0.85,	0.2,	-0.44,	0.9,	0.9,	0.96,	0,	0.37,	0.53,	0.21,	0.65,	0,	0.758,	1.06,	0.7,	10.1,	118.1,	205.6,	1.02,	0.59,	-0.052,	0.98,	0.92]
    letterDict["K"] = [0.85,	0.932,	1.232,	0.072,	0.83,	1.01,	0.7,	-0.12,	1,	1,	0.71,	2.86,	0.89,	0.98,	1.17,	1.13,	1.288,	0.947,	0.94,	1.3,	10.9,	122,	210.9,	0.77,	0.96,	0.032,	0.68,	0.78]
    letterDict["M"] = [0.41,	0.425,	0.781,	0.014,	0.22,	0.83,	0.8,	-0.79,	0.3,	0.3,	1.89,	0,	1.07,	0.68,	0,	0,	0,	1.028,	1.33,	0.8,	10.4,	113.1,	204,	0.97,	0.39,	-0.258,	0.78,	0.77]
    letterDict["F"] = [1.07,	1.348,	0.723,	0.065,	0.89,	0.93,	0.2,	-0.25,	1.2,	1.2,	1.2,	0,	0.86,	0.61,	0.28,	0.45,	0.393,	0.622,	0.41,	0.5,	13.9,	118.2,	203.7,	1.32,	0.58,	0.015,	0.7,	0.71]
    letterDict["P"] = [1.73,	0.179,	1.093,	0.034,	0.43,	1.1,	0.8,	-0.59,	0.7,	0.7,	0.83,	0,	0.5,	0.63,	0.12,	0,	0,	0.579,	2.73,	0.7,	17.8,	81.9,	237.4,	0.64,	1.91,	0,	0.36,	0]
    letterDict["S"] = [1.31,	1.151,	1.082,	0.125,	1.24,	1.55,	2.3,	-0.01,	1.6,	1.6,	1.16,	1.23,	1.01,	1.03,	0.57,	0.81,	0.16,	1.14,	1.18,	0.8,	13.1,	117.9,	232,	0.95,	1.33,	0.225,	0.53,	0.55]
    letterDict["T"] = [1.57,	0.749,	1.043,	0.065,	0.85,	1.09,	1.6,	0.05,	0.3,	0.3,	0.97,	2.48,	0.92,	0.39,	0.23,	0.71,	0.218,	0.863,	0.77,	0.3,	16.7,	117.1,	226.7,	1.21,	1.03,	0.166,	0.5,	0.63]
    letterDict["W"] = [0.98,	1.283,	0.867,	0.064,	0.62,	0.62,	0.3,	-0.33,	1.1,	1.1,	1.58,	0,	1,	0.63,	0,	0.93,	0,	0.777,	1.22,	0,	13.2,	118.4,	203.7,	1.14,	0.75,	0.158,	0.7,	0.84]
    letterDict["Y"] = [1.31,	1.283,	1.05,	0.114,	1.44,	0.99,	0.8,	-0.42,	1.9,	1.9,	0.86,	1.9,	1.31,	0.83,	0.97,	0.38,	0.654,	0.907,	1.09,	0.8,	13.9,	110,	195.6,	1.25,	1.05,	0.094,	0.7,	0.71]
    letterDict["V"] = [1.11,	0.654,	0.817,	0.028,	0.43,	0.75,	0.1,	-0.46,	0.7,	0.7,	0.64,	1.62,	0.87,	0.76,	0.24,	0.48,	0.167,	0.561,	0.88,	0.2,	17.2,	121.7,	220.3,	1.49,	0.47,	0.513,	0.76,	0.89]
    AACategoryLen = 28

    probMatr = np.zeros((len(sampleSeq3DArr), 1, len(sampleSeq3DArr[0]), AACategoryLen))

    sampleNo = 0
    for sequence in sampleSeq3DArr:

        AANo = 0
        for AA in sequence:

            if not AA in letterDict:
                # probMatr[sampleNo][0][AANo] = np.full((1,AACategoryLen), 0)
                continue

            else:
                probMatr[sampleNo][0][AANo] = letterDict[AA]

            AANo += 1

        sampleNo += 1

    return probMatr


def convertSampleToAAindexClusterC(sampleSeq3DArr):
    '''
    Convertd the raw data to physico-chemical property(based on AAindex Cluster C)

    PARAMETER
    ---------
    sampleSeq3DArr: 3D numpy array
    	X denoted the unknow amino acid.

    probMatr: Probability Matrix for Samples. Shape (nb_samples, 1, nb_length_of_sequence, nb_AA)
    '''

    letterDict = {} # Total 24*20
    letterDict["A"] = [-0.7,	5.88,	6.69,	5.08,	10.88,	1.61,	10.17,	5.04,	0.077,	9.25,	7.99,	3.73,	-0.57,	8.6,	685,	5.3,	5.39,	-0.6,	5.74,	0,	29.22,	0.892,	0.34,	1.58]
    letterDict["R"] = [-0.91,	1.54,	6.65,	4.75,	6.01,	0.4,	1.21,	3.73,	0.051,	3.96,	5.86,	3.34,	-1.29,	4.9,	382,	2.6,	2.81,	-1.18,	1.92,	5,	26.37,	0.901,	-0.57,	1.14]
    letterDict["N"] = [1.28,	4.38,	4.49,	5.75,	5.75,	0.73,	1.36,	5.94,	0.043,	3.71,	4.33,	2.33,	0.02,	4.3,	397,	3,	7.31,	0.39,	5.25,	2,	38.3,	0.93,	-0.27,	0.77]
    letterDict["D"] = [-0.93,	1.7,	4.97,	5.96,	6.13,	0.75,	1.18,	5.26,	0.052,	3.89,	5.14,	2.23,	-1.54,	5.5,	400,	3.6,	3.07,	-1.36,	2.11,	2,	37.09,	0.932,	-0.56,	0.98]
    letterDict["C"] = [-0.41,	1.11,	1.7,	2.95,	0.69,	0.37,	1.48,	2.2,	0.02,	1.07,	1.81,	2.3,	-0.3,	2.9,	241,	1.3,	0.86,	-0.34,	1.03,	1,	50.7,	0.925,	-0.32,	1.04]
    letterDict["Q"] = [-0.71,	2.3,	5.39,	4.24,	4.68,	0.61,	1.57,	4.5,	0.041,	3.17,	3.98,	2.36,	-0.71,	3.9,	313,	2.4,	2.31,	-0.71,	2.3,	3,	44.02,	0.885,	-0.34,	1.24]
    letterDict["E"] = [-1.13,	2.6,	7.76,	6.04,	9.34,	1.5,	1.15,	6.07,	0.062,	4.8,	6.1,	3,	-1.17,	6,	427,	3.3,	2.7,	-1.16,	2.63,	3,	41.84,	0.933,	-0.43,	1.49]
    letterDict["G"] = [-0.12,	5.29,	6.32,	8.2,	7.72,	3.12,	8.87,	7.09,	0.074,	8.51,	6.91,	3.36,	-0.48,	8.4,	707,	4.8,	6.52,	-0.37,	5.66,	0,	23.71,	0.923,	0.48,	0.66]
    letterDict["H"] = [0.04,	2.33,	2.11,	2.1,	2.15,	0.46,	1.07,	2.99,	0.023,	1.88,	2.17,	1.55,	0.1,	2,	155,	1.4,	2.23,	0.08,	2.3,	3,	59.64,	0.894,	-0.19,	0.99]
    letterDict["I"] = [1.77,	8.78,	4.51,	4.95,	1.8,	1.61,	10.91,	4.32,	0.053,	6.47,	5.48,	2.52,	1.31,	4.5,	394,	3.1,	9.94,	1.44,	9.12,	2,	45,	0.872,	0.39,	1.09]
    letterDict["L"] = [1.02,	16.52,	8.23,	8.03,	8.03,	1.37,	16.22,	9.88,	0.091,	10.94,	9.16,	3.4,	2.16,	7.4,	581,	4.7,	12.64,	1.82,	15.36,	2,	48.03,	0.921,	0.52,	1.21]
    letterDict["K"] = [-0.4,	2.58,	8.36,	4.93,	6.11,	0.62,	1.04,	6.31,	0.059,	3.5,	6.01,	3.36,	-1.02,	6.6,	575,	4.1,	4.67,	-0.84,	3.2,	4,	57.1,	1.057,	-0.75,	1.27]
    letterDict["M"] = [0.86,	6,	2.46,	2.61,	3.79,	1.59,	4.12,	1.85,	0.024,	3.14,	2.5,	1.37,	2.55,	1.7,	132,	1.1,	3.68,	2.04,	5.3,	3,	69.32,	0.804,	0.47,	1.41]
    letterDict["F"] = [1.29,	6.58,	3.59,	4.36,	2.93,	1.24,	9.6,	3.72,	0.04,	6.36,	3.83,	1.94,	1.42,	3.6,	303,	2.3,	6.34,	1.38,	6.51,	4,	48.52,	0.914,	1.3,	1]
    letterDict["P"] = [-0.42,	5.29,	5.2,	4.84,	7.21,	0.67,	2.24,	6.22,	0.051,	4.36,	4.95,	3.18,	0.11,	5.2,	366,	2.5,	3.62,	-0.05,	4.79,	0,	36.13,	0.932,	-0.19,	1.46]
    letterDict["S"] = [0.14,	7.68,	7.4,	6.41,	7.25,	0.68,	5.38,	8.05,	0.069,	6.26,	6.84,	2.83,	0.3,	7,	593,	4.5,	7.24,	0.25,	7.55,	1,	32.4,	0.923,	-0.2,	1.05]
    letterDict["T"] = [-0.13,	8.38,	5.18,	5.87,	3.51,	0.92,	5.61,	5.2,	0.059,	5.66,	5.77,	2.63,	0.99,	6.1,	490,	3.7,	5.44,	0.66,	7.51,	1,	35.2,	0.934,	-0.04,	0.87]
    letterDict["W"] = [0.26,	2.89,	1.06,	2.31,	0.47,	1.63,	2.67,	2.1,	0.014,	2.22,	1.34,	1.15,	1.35,	1.3,	99,	0.8,	1.64,	1.02,	2.51,	5,	56.92,	0.803,	0.77,	1.23]
    letterDict["Y"] = [1.29,	3.51,	2.75,	4.55,	1.01,	0.67,	2.68,	3.32,	0.032,	3.28,	3.15,	1.76,	0.2,	3.4,	292,	2.3,	5.42,	0.53,	4.08,	5,	51.73,	0.837,	0.07,	0.68]
    letterDict["V"] = [-0.19,	4.66,	5.27,	6.07,	4.57,	1.3,	11.44,	6.19,	0.066,	7.55,	6.65,	2.53,	-0.79,	6.6,	553,	4.2,	6.18,	-0.6,	5.12,	1,	40.35,	0.913,	0.36,	0.88]
    AACategoryLen = 24

    probMatr = np.zeros((len(sampleSeq3DArr), 1, len(sampleSeq3DArr[0]), AACategoryLen))

    sampleNo = 0
    for sequence in sampleSeq3DArr:

        AANo = 0
        for AA in sequence:

            if not AA in letterDict:
                # probMatr[sampleNo][0][AANo] = np.full((1,AACategoryLen), 0)
                continue

            else:
                probMatr[sampleNo][0][AANo] = letterDict[AA]

            AANo += 1

        sampleNo += 1

    return probMatr

def convertSampleToAAindexClusterB(sampleSeq3DArr):
    '''
    Convertd the raw data to physico-chemical property(based on AAindex Cluster C)

    PARAMETER
    ---------
    sampleSeq3DArr: 3D numpy array
    	X denoted the unknow amino acid.

    probMatr: Probability Matrix for Samples. Shape (nb_samples, 1, nb_length_of_sequence, nb_AA)
    '''

    letterDict = {} # Total 37*20
    letterDict["A"] = [-2.49,	2.01,	-0.1,	0.05,	1,	0.89,	-0.26,	-0.25,	1,	0.92,	0.9,	0.83,	0.86,	1.1,	0.9,	0.75,	-0.31,	0.75,	0.81,	0.86,	0.81,	0.84,	1,	0,	-2.7,	0.91,	0.98,	0.687,	0.9,	0.96,	0.86,	0.288,	0.79,	0.86,	0.86,	1.48,	0]
    letterDict["R"] = [2.55,	0.84,	0.19,	-0.11,	0.68,	1.06,	-0.09,	-0.02,	0.7,	0.93,	1.02,	0.93,	1.15,	0.93,	0.75,	0.9,	0.25,	0.79,	0.85,	0.97,	1.03,	1.04,	0.74,	1.1,	0.4,	0.99,	1.03,	0.59,	0.99,	0.67,	0.9,	0.362,	1.087,	0.98,	0.94,	1.02,	1]
    letterDict["N"] = [2.27,	0.03,	-0.89,	-0.4,	0.54,	0.67,	-0.34,	-0.77,	0.6,	0.6,	0.62,	0.89,	0.6,	1.57,	0.82,	1.21,	-0.53,	0.33,	0.62,	0.73,	0.81,	0.66,	0.75,	-2,	-4.2,	0.72,	0.66,	0.489,	0.76,	0.72,	0.66,	0.229,	0.832,	0.74,	0.74,	0.99,	0]
    letterDict["D"] = [8.86,	-2.05,	-0.89,	-0.11,	0.5,	0.71,	-0.55,	-1.01,	0.5,	0.48,	0.47,	0.54,	0.66,	1.41,	0.75,	0.85,	-0.54,	0.31,	0.71,	0.69,	0.71,	0.59,	0.89,	-2.6,	-4.4,	0.74,	0.74,	0.632,	0.72,	0.9,	0.38,	0.271,	0.53,	0.69,	0.72,	1.19,	0]
    letterDict["C"] = [-3.13,	1.98,	0.13,	0.36,	0.91,	1.04,	0.47,	0.13,	1.9,	1.16,	1.24,	1.19,	0.91,	1.05,	1.12,	1.11,	-0.06,	1.46,	1.17,	1.04,	1.12,	1.27,	0.99,	5.4,	3.7,	1.12,	1.01,	0.263,	0.74,	1.13,	0.87,	0.533,	1.268,	1.39,	1.17,	0.86,	0]
    letterDict["Q"] = [1.79,	1.02,	-0.04,	-0.67,	0.28,	1.06,	-0.33,	-0.12,	1,	0.95,	1.18,	1.1,	1.11,	0.81,	0.95,	0.65,	0.07,	0.75,	0.98,	1,	1.03,	1.02,	0.87,	2.4,	0.8,	0.9,	0.63,	0.527,	0.8,	1.18,	1.65,	0.327,	1.038,	0.89,	0.89,	1.42,	1]
    letterDict["E"] = [4.04,	0.93,	-0.34,	-0.35,	0.59,	0.72,	-0.75,	-0.62,	0.7,	0.61,	0.62,	0.37,	0.37,	1.4,	0.44,	0.55,	-0.52,	0.46,	0.53,	0.66,	0.59,	0.57,	0.37,	3.1,	-8.1,	0.41,	0.59,	0.669,	0.75,	0.33,	0.35,	0.262,	0.643,	0.66,	0.62,	1.43,	1]
    letterDict["G"] = [-0.56,	0.12,	-0.45,	0.14,	0.79,	0.87,	-0.56,	-0.72,	0.3,	0.61,	0.56,	0.75,	0.86,	1.3,	0.83,	0.74,	0.37,	0.83,	0.88,	0.89,	0.94,	0.94,	0.56,	-3.4,	-3.9,	0.91,	0.9,	0.67,	0.92,	0.9,	0.63,	0.312,	0.725,	0.7,	0.97,	0.46,	0]
    letterDict["H"] = [4.22,	-0.14,	-0.34,	0.02,	0.38,	1.04,	-0.04,	-0.16,	0.8,	0.93,	1.12,	0.87,	1.07,	0.85,	0.86,	0.9,	-0.32,	0.83,	0.92,	0.85,	0.85,	0.81,	0.36,	0.8,	-3,	1.01,	1.17,	0.594,	1.08,	0.87,	0.54,	0.2,	0.864,	1.06,	1.06,	1.27,	1]
    letterDict["I"] = [-10.87,	3.7,	0.95,	0.47,	2.6,	1.14,	0.94,	1.1,	4,	1.81,	1.54,	1.6,	1.17,	0.67,	1.59,	1.35,	0.57,	1.87,	1.48,	1.47,	1.47,	1.29,	1.75,	-0.1,	7.7,	1.29,	1.38,	0.564,	1.45,	1.54,	1.94,	0.411,	1.361,	1.31,	1.24,	1.12,	0]
    letterDict["L"] = [-7.16,	2.73,	0.32,	0.32,	1.42,	1.02,	0.25,	0.23,	2,	1.3,	1.26,	1.3,	1.28,	0.52,	1.24,	1.27,	0.09,	1.56,	1.24,	1.04,	1.03,	1.1,	1.53,	-3.7,	3.7,	1.23,	1.05,	0.541,	1.02,	1.26,	1.3,	0.4,	1.111,	1.01,	0.98,	1.33,	0]
    letterDict["K"] = [-9.97,	2.55,	-0.46,	-0.51,	0.59,	1,	-0.55,	-0.59,	0.7,	0.7,	0.74,	0.74,	1.01,	0.94,	0.75,	0.74,	-0.29,	0.66,	0.77,	0.77,	0.77,	0.86,	1.18,	-3.1,	-2.9,	0.86,	0.83,	0.407,	0.77,	0.81,	1,	0.265,	0.735,	0.77,	0.79,	1.36,	1]
    letterDict["M"] = [-4.96,	1.75,	0.43,	-0.1,	1.49,	1.41,	-0.05,	0.32,	1.9,	1.19,	1.09,	1.05,	1.15,	0.69,	0.94,	0.95,	0.29,	0.86,	1.05,	0.93,	0.96,	0.88,	1.4,	-2.1,	3.7,	0.96,	0.82,	0.328,	0.97,	1.29,	1.43,	0.375,	1.092,	1.06,	1.08,	1.41,	1]
    letterDict["F"] = [-6.64,	2.68,	0.36,	0.2,	1.3,	1.32,	0.2,	0.48,	3.1,	1.25,	1.23,	1.38,	1.34,	0.6,	1.41,	1.5,	0.24,	1.37,	1.2,	1.21,	1.13,	1.15,	1.26,	0.7,	3,	1.26,	1.23,	0.577,	1.32,	1.37,	1.5,	0.318,	1.052,	1.16,	1.16,	1.3,	1]
    letterDict["P"] = [5.19,	0.41,	-0.91,	-0.79,	0.35,	0.69,	-1.28,	-1.24,	0.2,	0.4,	0.42,	0.55,	0.61,	1.77,	0.46,	0.4,	-0.31,	0.52,	0.61,	0.68,	0.75,	0.8,	0.36,	7.4,	-6.6,	0.65,	0.73,	0.6,	0.64,	0.75,	0.66,	0.34,	1.249,	1.16,	1.22,	0.25,	0]
    letterDict["S"] = [-1.6,	1.47,	-0.12,	0.03,	0.7,	0.86,	-0.28,	-0.31,	0.9,	0.82,	0.87,	0.75,	0.91,	1.13,	0.7,	0.79,	0.11,	0.82,	0.92,	1.02,	1.02,	1.05,	0.65,	1.3,	-2.4,	0.93,	0.98,	0.692,	0.95,	0.77,	0.63,	0.354,	1.093,	1.09,	1.04,	0.89,	0]
    letterDict["T"] = [-4.75,	2.39,	0.49,	-0.15,	0.59,	1.15,	0.08,	0.17,	1.7,	1.12,	1.3,	1.19,	1.14,	0.88,	1.2,	0.75,	0.03,	1.36,	1.18,	1.27,	1.19,	1.2,	1.15,	0,	1.7,	1.05,	1.2,	0.713,	1.21,	1.23,	1.17,	0.388,	1.214,	1.24,	1.18,	0.81,	0]
    letterDict["W"] = [-17.84,	2.49,	0.34,	0.09,	0.89,	1.06,	0.22,	0.45,	2.2,	1.54,	1.75,	1.37,	1.13,	0.62,	1.28,	1.19,	0.15,	0.79,	1.18,	1.26,	1.24,	1.15,	0.84,	-3.4,	0.3,	1.15,	1.26,	0.632,	1.14,	1.13,	1.49,	0.231,	1.114,	1.17,	1.07,	1.27,	1.5]
    letterDict["Y"] = [9.25,	2.23,	0.42,	0.34,	1.08,	1.35,	0.53,	0.77,	2.8,	1.53,	1.68,	1.47,	1.37,	0.41,	1.45,	1.96,	0.29,	1.08,	1.23,	1.31,	1.35,	1.39,	1.41,	4.8,	3.3,	1.21,	1.23,	0.495,	1.25,	1.07,	1.07,	0.429,	1.34,	1.28,	1.25,	0.91,	1]
    letterDict["V"] = [-3.97,	3.5,	0.76,	0.58,	2.63,	1.66,	0.67,	0.69,	4,	1.81,	1.53,	1.7,	1.31,	0.58,	1.73,	1.79,	0.48,	2,	1.66,	1.43,	1.44,	1.56,	1.61,	2.7,	7.1,	1.58,	1.62,	0.529,	1.49,	1.41,	1.69,	0.495,	1.428,	1.4,	1.33,	0.93,	0]
    AACategoryLen = 37

    probMatr = np.zeros((len(sampleSeq3DArr), 1, len(sampleSeq3DArr[0]), AACategoryLen))

    sampleNo = 0
    for sequence in sampleSeq3DArr:

        AANo = 0
        for AA in sequence:

            if not AA in letterDict:
                # probMatr[sampleNo][0][AANo] = np.full((1,AACategoryLen), 0)
                continue

            else:
                probMatr[sampleNo][0][AANo] = letterDict[AA]

            AANo += 1

        sampleNo += 1

    return probMatr

def convertSampleToAAindexClusterA(sampleSeq3DArr):
    '''
    Convertd the raw data to physico-chemical property(based on AAindex Cluster C)

    PARAMETER
    ---------
    sampleSeq3DArr: 3D numpy array
    	X denoted the unknow amino acid.

    probMatr: Probability Matrix for Samples. Shape (nb_samples, 1, nb_length_of_sequence, nb_AA)
    '''

    letterDict = {} # Total 118*20
    letterDict["A"] = [-0.062,	0.12,	-1.73,	0.06,	1.1,	-5,	0.7,	1.08,	1.071,	-0.19,	-2.5,	0.058,	-0.25,	-4.7,	-5.1,	0.91,	0.74,	0.22,	0.239,	1.8,	4.76,	0.93,	1,	0.87,	0.92,	0.135,	0.69,	0.52,	1,	1.09,	0.7,	0.946,	1,	0.85,	0.26,	0.29,	0.08,	1.8,	0.64,	0.68,	-0.43,	1.34,	-0.14,	0.72,	1.8,	-0.368,	1.55,	6.5,	1.2,	9.69,	0.4,	0,	1.4,	1.1,	-2.3,	0.18,	-0.08,	-0.3,	-0.23,	0.37,	0.66,	0.67,	0.93,	-3.3,	0.046,	0.64,	-3.7,	0.6,	-1,	0.65,	0.842,	0.74,	0.91,	-6.7,	0.77,	0.79,	-0.42,	-0.24,	1.1,	2.3,	0.33,	0.13,	0.31,	0.21,	0.01,	-0.27,	-0.14,	0.84,	0.78,	1.13,	0.8,	1.08,	8.249,	1,	0.076,	1.09,	1.194,	0.57,	1.45,	1.53,	1.36,	1.32,	1.3,	1.29,	1.33,	1.29,	1.19,	1.15,	1.43,	0.486,	1.32,	1.42,	2.3,	0.34,	1.42,	0.88,	1.29,	0.175]
    letterDict["R"] = [-0.167,	0.04,	2.52,	0.07,	1.5,	2.1,	0.8,	1.05,	1.033,	-0.07,	-1.2,	0.085,	0.12,	2,	2.6,	0.77,	1.05,	0.28,	0.211,	12.5,	4.3,	1.52,	1.4,	1.3,	0.9,	0.296,	0,	1.24,	1.18,	1.07,	1.1,	1.128,	0.52,	2.02,	-0.14,	-0.03,	-0.01,	1.3,	-0.1,	-0.22,	0.06,	0.91,	0.14,	1.33,	1,	-1.03,	0.2,	6.9,	1.25,	8.99,	1.2,	0,	2.1,	1,	0.4,	0.21,	0.05,	-0.09,	-0.2,	0.84,	0.95,	0.89,	1.01,	0,	0.291,	1.05,	1,	0.79,	0.3,	0.93,	0.936,	1.01,	1,	51.5,	0.88,	0.9,	-0.23,	-0.04,	0.95,	1.4,	0.1,	0.08,	0.18,	0.07,	-0.13,	-0.4,	0.21,	0.91,	1.06,	1.09,	0.96,	0.93,	8.274,	0.7,	0.106,	0.97,	0.795,	0.23,	1.15,	1.17,	1,	0.98,	0.93,	0.83,	0.79,	1,	1,	1.06,	1.18,	0.262,	1.04,	0.98,	-5.2,	0.22,	1.06,	0.99,	0.96,	0.083]
    letterDict["N"] = [0.166,	-0.1,	1.45,	0.161,	0,	4.2,	0.8,	0.85,	0.784,	0.17,	4.6,	0.091,	0.61,	3.9,	4.7,	1.32,	1.13,	0.42,	0.249,	-5.6,	3.64,	0.92,	0.9,	1.36,	1.57,	0.196,	1.52,	1.64,	0.87,	0.88,	1.5,	0.432,	0.35,	0.88,	-0.03,	-0.04,	-0.06,	0.9,	0.09,	-0.09,	0,	0.83,	-0.27,	1.38,	0.6,	0,	1.2,	7.5,	0.59,	8.8,	1.24,	4.14,	0.9,	1.2,	-4.1,	-0.03,	-0.08,	-0.12,	0.06,	0.97,	1.56,	1.86,	1.36,	5.4,	0.134,	1.56,	-0.6,	1.42,	-0.7,	1.45,	1.352,	1.46,	1.64,	20.1,	1.28,	1.25,	0.81,	0.45,	0.8,	-3.3,	-0.19,	-0.07,	-0.1,	-0.04,	-0.11,	0.71,	0.35,	1.48,	1.56,	1.06,	1.1,	1.05,	8.747,	1,	0.083,	1.14,	0.659,	-0.36,	0.64,	0.6,	0.89,	0.95,	0.9,	0.77,	0.72,	0.81,	0.94,	0.87,	0.64,	0.193,	0.74,	0.67,	0.3,	-0.33,	0.71,	1.02,	0.9,	0.09]
    letterDict["D"] = [-0.079,	0.01,	1.13,	0.147,	0.3,	3.1,	0.6,	0.85,	0.68,	-0.27,	0,	0.081,	0.6,	1.9,	3.1,	0.9,	1.32,	0.73,	0.171,	5.05,	5.69,	0.6,	1.4,	1.24,	1.22,	0.289,	2.42,	1.06,	1.39,	1.24,	1.4,	1.311,	0.44,	1.5,	0.15,	0.11,	0.04,	1,	0.33,	-0.02,	-0.31,	1.06,	-0.1,	1.04,	0.7,	2.06,	1.55,	7,	0.61,	9.6,	1.59,	2.15,	0.7,	0.4,	-4.4,	-0.32,	-0.24,	0.44,	0.34,	0.97,	1.46,	1.39,	1.22,	3.9,	0.105,	1.61,	-0.6,	1.24,	-1.2,	1.47,	1.366,	1.52,	1.4,	38.5,	1.41,	1.47,	0.95,	0.65,	0.65,	-4.4,	-0.44,	-0.71,	-0.81,	-0.58,	0.78,	0.54,	0.66,	1.28,	1.5,	0.94,	1.6,	0.86,	8.41,	1.7,	0.11,	0.77,	1.056,	-0.46,	0.91,	1,	1.04,	1.03,	1.02,	1,	0.97,	1.1,	1.07,	1,	0.92,	0.288,	0.97,	1.01,	7.4,	0.06,	1.01,	1.16,	1.04,	0.14]
    letterDict["C"] = [0.38,	-0.25,	-0.97,	0.149,	1.1,	4.4,	0.2,	0.95,	0.922,	0.42,	-4.7,	0.128,	0.18,	6.2,	3.8,	0.5,	0.53,	0.2,	0.22,	-16.5,	3.67,	1.08,	0.8,	0.83,	0.62,	0.159,	0,	0.94,	1.09,	1.04,	0.4,	0.481,	0.06,	0.9,	-0.15,	-0.05,	0.37,	0.7,	0.03,	-0.15,	0.19,	1.27,	-0.64,	1.01,	0,	4.53,	1.44,	7.7,	1.11,	8.35,	2.98,	0,	1.2,	1.6,	4.4,	-0.29,	-0.25,	0.03,	0.19,	0.84,	1.19,	1.34,	0.92,	-0.3,	0.128,	0.92,	4,	1.29,	2.1,	1.43,	1.032,	0.96,	0.93,	-8.4,	0.81,	0.79,	-0.18,	-0.38,	0.95,	6.1,	-0.03,	-0.09,	-0.26,	-0.12,	-0.31,	0,	-0.09,	0.69,	0.6,	1.32,	0,	1.22,	8.312,	1,	0.053,	0.5,	0.678,	-0.15,	0.7,	0.89,	0.82,	0.92,	0.92,	0.94,	0.93,	0.79,	0.95,	1.03,	0.94,	0.2,	0.7,	0.7,	0.8,	-0.18,	0.73,	1.14,	1.11,	0.074]
    letterDict["Q"] = [-0.025,	-0.03,	0.53,	0.074,	1.3,	0.4,	1.3,	0.95,	0.977,	-0.29,	-0.5,	0.098,	0.09,	-2,	0.2,	1.06,	0.77,	0.26,	0.26,	6.3,	4.54,	0.94,	1.4,	1.06,	0.66,	0.236,	1.44,	0.7,	1.13,	1.09,	1.1,	1.615,	0.44,	1.71,	-0.13,	0.26,	0.48,	1.3,	-0.23,	-0.15,	0.14,	1.13,	-0.11,	0.81,	1,	0.731,	1.13,	6,	1.22,	9.13,	0.5,	0,	1.6,	2.1,	1.2,	-0.27,	-0.28,	0.24,	0.47,	0.64,	0.98,	1.09,	0.83,	-0.4,	0.18,	0.84,	3.4,	0.92,	-0.1,	0.94,	0.998,	0.96,	0.94,	17.2,	0.98,	0.92,	-0.01,	0.01,	1,	2.7,	0.19,	0.12,	0.41,	0.13,	-0.13,	-0.08,	0.11,	1,	0.78,	0.93,	1.6,	0.95,	8.411,	1,	0.098,	0.83,	1.29,	0.15,	1.14,	1.27,	1.14,	1.1,	1.04,	1.1,	1.42,	1.07,	1.32,	1.43,	1.22,	0.418,	1.25,	1.11,	-0.7,	0.01,	1.02,	0.93,	1.27,	0.093]
    letterDict["E"] = [-0.184,	-0.02,	0.39,	0.056,	0.5,	-4.7,	1.6,	1.15,	0.97,	-0.22,	-4.4,	0.064,	-0.12,	-4.2,	-5.2,	0.53,	0.85,	0.08,	0.187,	12,	5.48,	0.73,	0.8,	0.91,	0.92,	0.184,	0.63,	0.59,	1.04,	1.14,	0.7,	0.698,	0.73,	1.79,	0.21,	0.28,	0.36,	0.8,	0.51,	0.44,	-0.41,	1.69,	-0.39,	0.75,	1.1,	1.77,	1.67,	7,	1.24,	9.67,	1.26,	0,	1.7,	0.8,	-5,	-0.25,	-0.19,	0.18,	0.28,	0.53,	0.74,	0.92,	1.05,	-1.8,	0.151,	0.8,	-4.3,	0.64,	-0.7,	0.75,	0.758,	0.95,	0.97,	34.3,	0.99,	1.02,	-0.09,	0.07,	1,	2.5,	0.21,	0.13,	-0.06,	-0.23,	0.09,	-0.12,	0.06,	0.78,	0.97,	1.2,	0.4,	1.09,	8.368,	1.7,	0.06,	0.92,	0.928,	0.26,	1.29,	1.63,	1.48,	1.44,	1.43,	1.54,	1.66,	1.49,	1.64,	1.37,	1.67,	0.538,	1.48,	1.51,	10.3,	0.2,	1.63,	1.01,	1.44,	0.135]
    letterDict["G"] = [-0.017,	-0.02,	-5.36,	0.102,	0.4,	5.7,	0.1,	0.55,	0.591,	0.17,	4.9,	0.152,	0.09,	5.7,	5.6,	1.61,	1.68,	0.58,	0.16,	0,	3.77,	0.78,	1.2,	1.69,	1.61,	0.051,	2.64,	1.64,	0.46,	0.27,	0.6,	0.36,	0.35,	1.54,	-0.37,	-0.67,	-0.02,	0.5,	-0.09,	-0.73,	-0.21,	0.47,	0.46,	1.35,	0.5,	-0.525,	0.59,	5.6,	0.42,	9.78,	1.89,	6.49,	0.2,	0.2,	-4.2,	-0.4,	-0.1,	-0.12,	0.14,	0.97,	1.56,	1.46,	1.45,	-1.2,	0,	1.63,	5.9,	1.38,	0.3,	1.53,	1.349,	1.56,	1.51,	-4.2,	1.64,	1.67,	1.24,	0.85,	0.6,	-8.3,	-0.46,	-0.39,	-0.42,	-0.15,	0.14,	1.14,	0.36,	1.76,	1.73,	0.83,	2,	0.85,	8.391,	1.3,	0.085,	1.25,	1.015,	-0.71,	0.53,	0.44,	0.63,	0.61,	0.63,	0.72,	0.58,	0.63,	0.6,	0.64,	0.46,	0.12,	0.59,	0.57,	-5.2,	-0.88,	0.5,	0.7,	0.56,	0.201]
    letterDict["H"] = [0.056,	-0.06,	1.74,	0.14,	1.5,	-0.3,	1.1,	1,	0.85,	0.17,	1.6,	0.054,	0.42,	-2.6,	-0.9,	1.08,	0.96,	0.14,	0.205,	-38.5,	2.84,	1.08,	1.2,	0.91,	0.39,	0.223,	0.22,	1.86,	0.71,	1.07,	1,	2.168,	0.6,	1.59,	0.1,	-0.26,	-0.45,	1,	-0.23,	-0.14,	0.21,	1.11,	-0.04,	0.76,	2.4,	0,	1.21,	8,	1.77,	9.17,	2.71,	0,	1.8,	3.4,	-2.5,	0.28,	0.29,	-0.2,	-0.22,	0.75,	0.95,	0.78,	0.96,	3,	0.23,	0.77,	-0.8,	0.95,	1.1,	0.96,	1.079,	0.95,	0.9,	12.6,	0.68,	0.81,	0.05,	-0.21,	0.85,	5.9,	0.27,	0.32,	0.51,	0.37,	-0.56,	0.18,	-0.31,	0.53,	0.83,	1.09,	0.96,	1.02,	8.415,	1,	0.047,	0.67,	0.611,	-0.05,	1.13,	1.03,	1.11,	1.31,	1.33,	1.29,	1.49,	1.33,	1.03,	0.95,	0.98,	0.4,	1.06,	1,	-2.8,	-0.09,	1.2,	1.87,	1.22,	0.125]
    letterDict["I"] = [-0.309,	-0.07,	-1.68,	0.043,	1.1,	-4.6,	1.4,	1.05,	1.14,	-0.34,	-3.3,	0.056,	-0.54,	-7,	-4.5,	0.36,	0.53,	0.22,	0.273,	12.4,	4.81,	1.74,	1.1,	0.27,	0.79,	0.173,	0.43,	0.87,	0.68,	0.97,	0.7,	1.283,	0.73,	0.67,	-0.03,	0,	0.09,	1.2,	-0.22,	-0.08,	0.29,	0.84,	0.16,	0.8,	1.3,	0.791,	1.27,	7,	0.98,	9.68,	1.31,	0,	0.4,	0.7,	6.7,	-0.03,	-0.01,	-0.07,	0.42,	0.37,	0.47,	0.59,	0.58,	-0.5,	0.186,	0.29,	-0.5,	0.67,	4,	0.57,	0.459,	0.47,	0.65,	-13,	0.51,	0.5,	-1.17,	-0.65,	1.1,	-0.5,	-0.33,	0,	-0.15,	0.31,	-0.09,	-0.74,	-0.51,	0.55,	0.4,	1.05,	0.85,	0.98,	8.195,	1,	0.034,	0.66,	0.603,	0,	1.23,	1.07,	1.08,	0.93,	0.87,	0.94,	0.99,	1.05,	1.12,	0.99,	1.04,	0.37,	1.01,	1.08,	-4,	-0.03,	1.12,	1.61,	0.97,	0.1]
    letterDict["L"] = [-0.264,	0.05,	-1.03,	0.061,	2.6,	-5.6,	1.9,	1.25,	1.14,	-0.22,	-2,	0.07,	-0.55,	-6.2,	-5.4,	0.77,	0.59,	0.19,	0.281,	-11,	4.79,	1.03,	0.9,	0.67,	0.5,	0.215,	0,	0.84,	1.01,	1.3,	0.5,	1.192,	1,	1.03,	-0.02,	0.47,	0.24,	1.2,	0.41,	0.61,	-0.1,	1.39,	-0.57,	0.63,	1.2,	1.07,	1.25,	6.5,	1.13,	9.6,	0.57,	0,	0.8,	0.7,	2.3,	0.62,	0.28,	-0.18,	-0.36,	0.53,	0.59,	0.46,	0.59,	-2.3,	0.186,	0.36,	-2.8,	0.7,	2,	0.56,	0.665,	0.5,	0.59,	-11.7,	0.58,	0.57,	-0.69,	-0.8,	1.25,	0.1,	0.57,	0.5,	0.56,	0.7,	-0.81,	-0.54,	-0.8,	0.49,	0.57,	1.13,	0.8,	1.04,	8.423,	1,	0.025,	0.44,	0.595,	0.48,	1.56,	1.32,	1.21,	1.31,	1.3,	1.23,	1.29,	1.31,	1.18,	1.22,	1.36,	0.42,	1.22,	1.21,	-2.1,	0.2,	1.29,	1.09,	1.3,	0.104]
    letterDict["K"] = [-0.371,	0.26,	1.41,	0.055,	0.8,	1,	2.2,	1.15,	0.939,	0,	-0.8,	0.095,	0.14,	2.8,	1,	1.27,	0.82,	0.27,	0.228,	14.6,	4.27,	1,	1.2,	0.66,	0.86,	0.17,	1.18,	1.49,	1.05,	1.2,	1.3,	1.203,	0.6,	0.88,	0.12,	-0.19,	-0.27,	1.1,	-0.17,	0.03,	0.33,	1.08,	0.04,	0.84,	1.4,	0,	1.2,	6.5,	1.83,	9.18,	0.87,	0,	1.9,	2,	-3.3,	0.41,	0.45,	0.06,	-0.15,	0.75,	1.01,	1.09,	0.91,	-1.2,	0.219,	1.13,	1.3,	1.1,	-0.9,	0.95,	1.045,	1.19,	0.82,	36.8,	0.96,	0.99,	0.09,	0.17,	1,	7.3,	0.23,	0.37,	0.47,	0.28,	-0.43,	0.45,	-0.14,	0.95,	1.01,	1.08,	0.94,	1.01,	8.408,	0.7,	0.115,	1.25,	1.06,	0.16,	1.27,	1.26,	1.22,	1.25,	1.23,	1.23,	1.03,	1.33,	1.27,	1.2,	1.27,	0.402,	1.13,	1.16,	-4.1,	-0.11,	1.24,	0.83,	1.23,	0.058]
    letterDict["M"] = [0.077,	0,	-0.27,	0.068,	1.7,	-4.8,	1,	1.15,	1.2,	-0.53,	-4.1,	0.055,	-0.47,	-4.8,	-5.3,	0.76,	0.85,	0.38,	0.253,	-10,	4.25,	1.31,	0.8,	0,	0.5,	0.239,	0.88,	0.52,	0.36,	0.55,	0,	0,	1,	1.17,	0,	0.27,	0.16,	1.5,	0.13,	0.39,	-0.01,	0.9,	0.24,	0.62,	2.7,	0.656,	1.37,	0,	1.57,	9.21,	0,	0,	1.3,	1,	2.3,	0.21,	0.11,	-0.44,	-0.19,	0.64,	0.6,	0.52,	0.6,	-4.3,	0.221,	0.51,	-1.6,	0.67,	1.8,	0.71,	0.668,	0.6,	0.58,	-14.2,	0.41,	0.51,	-0.86,	-0.71,	1.15,	3.5,	0.79,	0.63,	0.58,	0.61,	-0.49,	-0.76,	-0.56,	0.52,	0.3,	1.23,	0.39,	1.11,	8.418,	1,	0.082,	0.45,	0.831,	0.41,	1.83,	1.66,	1.45,	1.39,	1.32,	1.23,	1.4,	1.54,	1.49,	1.45,	1.53,	0.417,	1.47,	1.45,	-3.5,	0.43,	1.21,	1.71,	1.47,	0.054]
    letterDict["F"] = [0.074,	0.05,	1.3,	0.059,	1.9,	-1.8,	1.8,	1.1,	1.086,	-0.31,	-4.1,	0.065,	-0.29,	-3.7,	-2.4,	0.37,	0.44,	0.08,	0.234,	-34.5,	4.31,	1.51,	0.1,	0.47,	0.96,	0.087,	2.2,	1.04,	0.65,	0.8,	1.2,	0.963,	0.6,	0.85,	0.12,	0.24,	0.34,	1.3,	-0.03,	0.06,	0.25,	1.02,	0.08,	0.58,	1.9,	1.06,	0.4,	9.4,	1.1,	9.18,	1.27,	2.11,	0.3,	0.7,	2.6,	0.05,	0,	0.11,	-0.02,	0.53,	0.6,	0.3,	0.71,	0.8,	0.29,	0.62,	1.6,	1.05,	2.8,	0.72,	0.881,	0.66,	0.72,	-15.5,	0.59,	0.77,	-0.39,	-0.61,	1.1,	1.6,	0.48,	0.15,	0.1,	-0.06,	-0.2,	-0.47,	-0.25,	0.88,	0.67,	1.01,	1.2,	0.96,	8.228,	1,	0.041,	0.5,	0.377,	0.03,	1.2,	1.22,	1.05,	1.02,	1.09,	1.23,	1.15,	1.13,	1.02,	0.92,	1.19,	0.318,	1.1,	1.13,	-1.1,	0.15,	1.16,	1.52,	1.07,	0.104]
    letterDict["P"] = [-0.036,	-0.19,	0.88,	0.102,	0.1,	2.6,	0,	0.71,	0.659,	0.14,	5.8,	0.068,	0.89,	3.6,	3.5,	1.62,	1.69,	0.46,	0.165,	-86.2,	0,	1.37,	1.9,	1.54,	1.3,	0.151,	1.34,	1.58,	1.95,	1.78,	1.5,	2.093,	0.06,	1.47,	-0.08,	-0.34,	0.16,	0.3,	-0.43,	-0.76,	0.28,	0.48,	0.02,	1.43,	0.3,	-2.24,	0.21,	0,	0,	10.64,	0.38,	1.99,	0.2,	0,	-1.8,	-0.84,	-0.42,	0.77,	0.78,	0.97,	1.52,	1.58,	1.67,	6.5,	0.131,	2.04,	-6,	1.47,	0.4,	1.51,	1.385,	1.56,	1.66,	0.8,	1.91,	1.78,	1.77,	2.27,	0.1,	-24.4,	-1.86,	-1.4,	-1.33,	-1.03,	1.14,	1.4,	1.59,	1.47,	1.55,	0.82,	2.1,	0.91,	0,	13,	0.301,	2.96,	3.159,	-1.12,	0.21,	0.25,	0.52,	0.58,	0.63,	0.7,	0.49,	0.63,	0.68,	0.72,	0.49,	0.208,	0.57,	0.57,	8.1,	-0.81,	0.65,	0.87,	0.52,	0.136]
    letterDict["S"] = [0.47,	-0.19,	-1.63,	0.12,	0.4,	2.6,	0.6,	0.75,	0.76,	0.22,	2.5,	0.106,	0.24,	2.1,	3.2,	1.34,	1.49,	0.55,	0.236,	-7.5,	3.83,	0.97,	0.7,	1.08,	1.4,	0.01,	1.43,	0.93,	1.56,	1.2,	0.9,	0.523,	0.35,	1.5,	0.01,	-0.17,	-0.35,	0.6,	-0.1,	-0.26,	-0.23,	1.05,	-0.12,	1.34,	0.5,	-0.524,	1.01,	6.5,	0.96,	9.21,	0.92,	0,	1.6,	1.7,	-1.7,	-0.05,	0.07,	-0.09,	-0.29,	0.84,	1.43,	1.41,	1.25,	1.8,	0.062,	1.52,	1.5,	1.26,	-1.2,	1.46,	1.257,	1.43,	1.23,	-2.5,	1.32,	1.3,	0.63,	0.33,	0.75,	-1.9,	-0.23,	-0.28,	-0.49,	-0.28,	0.13,	0.4,	0.32,	1.29,	1.19,	1.01,	1.3,	0.95,	8.38,	1,	0.139,	1.21,	1.444,	-0.47,	0.48,	0.65,	0.74,	0.76,	0.78,	0.78,	0.83,	0.78,	0.81,	0.84,	0.7,	0.2,	0.77,	0.77,	-3.5,	-0.35,	0.71,	1.14,	0.82,	0.155]
    letterDict["T"] = [0.348,	-0.04,	-2.09,	0.086,	0.5,	0.3,	0.7,	0.75,	0.817,	0.1,	1.7,	0.079,	0.16,	0.6,	0,	0.87,	1.16,	0.49,	0.213,	-28,	3.87,	1.38,	0.8,	1.12,	1.11,	0.1,	0.28,	0.86,	1.23,	0.99,	2.1,	1.961,	0.44,	1.96,	-0.34,	-0.2,	-0.04,	1,	-0.07,	-0.1,	-0.26,	0.74,	0,	1.03,	0.5,	0,	0.55,	6.9,	0.75,	9.1,	1.38,	1.24,	0.9,	1,	1.3,	-0.16,	-0.33,	-0.27,	-0.3,	0.75,	0.96,	1.09,	1.08,	-0.7,	0.108,	0.98,	1.2,	1.05,	-0.5,	0.96,	1.055,	0.98,	1.04,	-5,	1.04,	0.97,	0.29,	0.13,	0.75,	-3.7,	-0.33,	-0.21,	-0.44,	-0.25,	-0.02,	-0.1,	0.21,	1.05,	1.09,	1.17,	0.6,	1.15,	8.236,	1,	0.108,	1.33,	1.172,	-0.54,	0.77,	0.86,	0.81,	0.79,	0.8,	0.87,	0.94,	0.77,	0.85,	0.97,	0.78,	0.272,	0.86,	0.83,	2.3,	-0.37,	0.78,	0.96,	0.82,	0.152]
    letterDict["W"] = [0.05,	-0.06,	3.65,	0.077,	3.1,	3.4,	0.4,	1.1,	1.107,	-0.15,	1.2,	0.167,	-0.44,	3.3,	2.9,	1.1,	1.59,	0.43,	0.183,	-33.7,	4.75,	1.12,	0.4,	1.24,	0.57,	0.166,	0,	0.16,	1.1,	1.03,	2.7,	1.925,	0.73,	0.83,	-0.01,	0.25,	-0.06,	1.5,	-0.02,	0.2,	0.15,	0.64,	-0.1,	0.87,	1.1,	1.6,	1.86,	0,	0.4,	9.44,	1.53,	0,	0.4,	0,	-1,	0.32,	0.36,	-0.09,	-0.18,	0.97,	0.96,	0.48,	0.68,	-0.8,	0.409,	0.48,	6.5,	1.23,	3,	0.9,	0.881,	0.6,	0.67,	-7.9,	0.76,	0.79,	-0.37,	-0.44,	1.1,	-0.9,	0.15,	0.02,	0.14,	0.21,	-0.2,	-0.46,	-0.17,	0.88,	0.74,	1.32,	0,	1.17,	8.094,	1,	0.013,	0.62,	0.452,	-0.1,	1.17,	1.05,	0.97,	0.97,	1.03,	1.06,	1.33,	1.18,	1.18,	1.11,	1.01,	0.462,	1.02,	1.08,	-0.9,	0.07,	1.05,	1.96,	0.99,	0.092]
    letterDict["Y"] = [0.22,	-0.14,	2.32,	0.082,	0.6,	2.9,	1.1,	1.1,	1.02,	-0.02,	-0.6,	0.125,	-0.19,	3.8,	3.2,	1.24,	1.01,	0.46,	0.193,	-10,	4.3,	1.65,	0.9,	0.54,	1.78,	0.066,	1.53,	0.96,	0.87,	0.69,	0.5,	0.802,	0.44,	1.34,	-0.29,	-0.3,	-0.2,	0.8,	-0.38,	-0.04,	0.09,	0.73,	0.18,	1.35,	1.3,	4.91,	1.08,	6.8,	0.73,	9.11,	1.79,	1.9,	0.3,	1.2,	4,	0.11,	0,	-0.25,	0.07,	0.84,	1.14,	1.23,	0.98,	3.1,	0.298,	1.08,	1.3,	1.35,	2.1,	1.12,	1.101,	1.14,	0.92,	2.9,	1.05,	0.93,	-0.41,	-0.49,	1.1,	-0.6,	-0.19,	-0.1,	-0.08,	0.16,	0.1,	-0.05,	-0.35,	1.28,	1.14,	0.88,	1.8,	0.8,	8.183,	1,	0.065,	0.94,	0.816,	-0.35,	0.74,	0.7,	0.79,	0.73,	0.71,	0.63,	0.49,	0.71,	0.77,	0.72,	0.69,	0.161,	0.72,	0.69,	-3.7,	-0.31,	0.67,	1.68,	0.72,	0.081]
    letterDict["V"] = [-0.212,	-0.03,	-2.53,	0.062,	1.5,	-6,	1.3,	0.95,	0.95,	-0.33,	-3.5,	0.053,	-0.45,	-6.2,	-6.3,	0.52,	0.59,	0.08,	0.255,	5.63,	4.86,	1.7,	0.6,	0.69,	0.5,	0.285,	0.14,	0.32,	0.58,	0.77,	1,	0.409,	0.82,	0.89,	0.02,	-0.01,	0.18,	1.2,	-0.01,	0.12,	-0.1,	1.18,	0.29,	0.83,	0.4,	0.401,	0.64,	7,	1.25,	9.62,	0.95,	0,	0.7,	0.7,	6.8,	0.06,	-0.13,	-0.06,	0.29,	0.37,	0.5,	0.42,	0.62,	-3.5,	0.14,	0.43,	-4.6,	0.48,	1.4,	0.55,	0.643,	0.59,	0.6,	-10.9,	0.47,	0.46,	-1.32,	-0.99,	0.95,	2.3,	0.24,	0.17,	-0.01,	0,	-0.11,	-0.86,	-0.7,	0.51,	0.44,	1.13,	0.8,	1.03,	8.436,	1,	0.048,	0.56,	0.64,	0.31,	1.1,	0.93,	0.94,	0.93,	0.95,	0.97,	0.96,	0.81,	0.74,	0.82,	0.98,	0.379,	1.05,	1.06,	-4.4,	0.13,	0.99,	1.56,	0.91,	0.096]
    AACategoryLen = 118

    probMatr = np.zeros((len(sampleSeq3DArr), 1, len(sampleSeq3DArr[0]), AACategoryLen))

    sampleNo = 0
    for sequence in sampleSeq3DArr:

        AANo = 0
        for AA in sequence:

            if not AA in letterDict:
                # probMatr[sampleNo][0][AANo] = np.full((1,AACategoryLen), 0)
                continue

            else:
                probMatr[sampleNo][0][AANo] = letterDict[AA]

            AANo += 1

        sampleNo += 1

    return probMatr

def convertSampleToEBGW(sampleSeq3DArr):

    s1 = {'G','A','V','L','I','M','P','F','W'};
    s2 = {'Q','N','S','T','Y','C'};
    s3 = {'D','E'};
    s4 = {'H','K','R'};
    arr1 = []
    arr2 = []
    arr3 = []
    letterDict = {}
    AADict = ['A','C','D','E','F','G','H','I','K','L','M','N','P','Q','R','S','T','V','W','Y']
    probMatr = np.zeros((len(sampleSeq3DArr), 1, 7, 3))
    a = np.zeros((len(sampleSeq3DArr), 1, len(sampleSeq3DArr[0]), 3))

    sampleNo = 0
    
    for sequence in sampleSeq3DArr:
        AANo = 0
        m1 = []
        m2 = []
        m3 = []
        i = 1
        for AA in sequence:

            if AA in s1 or AA in s2:
                a[sampleNo][0][AANo][0] = 1

            else:
                #continue
                a[sampleNo][0][AANo][0]= 0
  				
            if AA in s1 or AA in s3:
                a[sampleNo][0][AANo][1] = 1
				
            else:
                #continue
                a[sampleNo][0][AANo][1]= 0
				
            if AA in s1 or AA in s4:
                a[sampleNo][0][AANo][2] = 1

            else:
                #continue
                a[sampleNo][0][AANo][2]= 0
            m1.append(a[sampleNo][0][AANo][0])
            m2.append(a[sampleNo][0][AANo][1])
            m3.append(a[sampleNo][0][AANo][2])
            if AANo == 7 * i - 1:
                probMatr[sampleNo][0][i-1][0] =	m1.count(1)/(7*i)
                probMatr[sampleNo][0][i-1][1] =	m2.count(1)/(7*i)
                probMatr[sampleNo][0][i-1][2] =	m3.count(1)/(7*i)
                #print(AANo)		
                #print(probMatr[sampleNo][0][i-1][0])
                i += 1
            AANo += 1
        #print(probMatr[sampleNo][0])
        #print(probMatr[sampleNo][0][][0])

        sampleNo += 1
    #print(probMatr)
    return probMatr

def convertSampleToAAC(sampleSeq3DArr):

	letterDict = {}
	AADict = ['A','C','D','E','F','G','H','I','K','L','M','N','P','Q','R','S','T','V','W','Y']
	probMatr = np.zeros((len(sampleSeq3DArr), 1, 20, 1))
	sampleNo = 0
	for sequence in sampleSeq3DArr:
        #print(sequence.tolist().count('A'))
		AANo = 0
		for i in AADict: 		
			letterDict[i] = sequence.tolist().count(i)/len(sampleSeq3DArr[0])
			probMatr[sampleNo][0][AANo]= letterDict[i]
			
			AANo += 1
		
		sampleNo += 1
	
	return probMatr

def convertSampleToVDWV(sampleSeq3DArr):
    letterDict = {} # Total 1*20
    letterDict["A"] = 1.00
    letterDict["R"] = 6.13
    letterDict["N"] = 2.95
    letterDict["D"] = 2.78
    letterDict["C"] = 2.43
    letterDict["Q"] = 3.95
    letterDict["E"] = 3.78
    letterDict["G"] = 5.89
    letterDict["H"] = 4.66
    letterDict["I"] = 4.00
    letterDict["L"] = 4.00
    letterDict["K"] = 4.77
    letterDict["M"] = 4.43
    letterDict["F"] = 5.89
    letterDict["P"] = 2.72
    letterDict["S"] = 1.60
    letterDict["T"] = 2.60
    letterDict["W"] = 8.08
    letterDict["Y"] = 6.47
    letterDict["V"] = 3.00
    AACategoryLen = 1

    probMatr = np.zeros((len(sampleSeq3DArr), 1, len(sampleSeq3DArr[0]), AACategoryLen))

    sampleNo = 0
    for sequence in sampleSeq3DArr:

        AANo	 = 0
        for AA in sequence:

            if not AA in letterDict:
                #probMatr[sampleNo][0][AANo] = np.full((1,AACategoryLen), 0)
                continue

            else:
                probMatr[sampleNo][0][AANo]= letterDict[AA]

            AANo += 1

        sampleNo += 1

    return probMatr
    
def convertSampleToIndex(sampleSeq3DArr):
    """
	Convertd the raw data to probability matrix

	PARAMETER
	---------
	sampleSeq3DArr: 3D numpy array
		X denoted the unknow amino acid.


	probMatr: Probability Matrix for Samples. Shape (nb_samples, 1, nb_length_of_sequence, nb_AA)
	"""

    letterDict = {}
    letterDict["A"] = 1
    letterDict["C"] = 2
    letterDict["D"] = 3
    letterDict["E"] = 4
    letterDict["F"] = 5
    letterDict["G"] = 6
    letterDict["H"] = 7
    letterDict["I"] = 8
    letterDict["K"] = 9
    letterDict["L"] = 10
    letterDict["M"] = 11
    letterDict["N"] = 12
    letterDict["P"] = 13
    letterDict["Q"] = 14
    letterDict["R"] = 15
    letterDict["S"] = 16
    letterDict["T"] = 17
    letterDict["V"] = 18
    letterDict["W"] = 19
    letterDict["Y"] = 20
    letterDict["-"] = 21
    letterDict["X"] = 0
    probMatr = np.zeros((len(sampleSeq3DArr),len(sampleSeq3DArr[0])))

    sampleNo = 0
    for sequence in sampleSeq3DArr:
        AANo	 = 0
        for AA in sequence:
            probMatr[sampleNo][AANo]= letterDict[AA]
            AANo += 1
        sampleNo += 1

    return probMatr


def convertRawToIndex(rawDataFrame):
    #rawDataFrame = pd.read_table(fileName, sep='\t', header=None).values

    targetList = rawDataFrame[:, 0]
    targetList[np.where(targetList==2)] = 0
    targetArr = kutils.to_categorical(targetList)
    #targetArr = to_categorical(targetList)
    sampleSeq3DArr = rawDataFrame[:, 1:]

    index = convertSampleToIndex(sampleSeq3DArr)


    return index, targetArr


def convertRawToX(fileName, refMatrFileName="", nb_windows=3, codingMode=0):
    """
	convertd the raw data to probability matrix


	#Output:
	probMatr: Probability Matrix for Samples. Shape (nb_samples, 1, nb_length_of_sequence, nb_AA)
	"""

    rawDataFrame = pd.read_table(fileName, sep='\t', header=None).values

    sampleSeq3DArr = rawDataFrame[:, 0:]

    if codingMode == 0:
        probMatr = convertSampleToProbMatr(sampleSeq3DArr)
    elif codingMode == 1:
        probMatr = DProcess.convertSampleToVector2DList(sampleSeq3DArr, nb_windows, refMatrFileName)

    return probMatr